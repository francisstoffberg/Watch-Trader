{
	"id": "69acc2922fea2f2eae5c490b41de9735",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/WatchTrader.sol": {
				"content": "// contracts/WatchItems.sol\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\ncontract WatchTrader{\n    //Mapping to look up listing key-value pairs as well as account balances\n    mapping(address => mapping(uint256 => Listing)) public listings;\n    mapping(address => uint256) public balances;\n\n    //Set the structure of a listing\n    struct Listing{\n        uint256 price;\n        address seller;\n    }\n\n    //Add a listing of item that is for sale\n    //Check if account owns the item they want to list\n    //Check if contract approved (ERC1155 requirement)\n    function addListing(uint256 price, address itemContractAddress, uint256 itemID) public{\n        ERC1155 token = ERC1155(itemContractAddress);\n        require(token.balanceOf(msg.sender, itemID) > 0, \"Must own token to be able to list it.\");\n        require(token.isApprovedForAll(msg.sender, address(this)), \"Contract must be approved.\");\n\n        listings[itemContractAddress][itemID] = Listing(price, msg.sender); \n    }\n\n    //Purchase an item that is listed as for sale\n    //Check if account sent enough money (amount to buy * unit value)\n    //Increase balance of seller and transfers token to buyer (that called function)\n    function purchase(address itemContractAddress, uint256 itemID, uint256 amount) public payable {\n        ERC1155 token = ERC1155(itemContractAddress);\n        Listing memory item = listings[itemContractAddress][itemID];\n\n        require(msg.value >= item.price * amount, \"Insufficient amount sent to seller.\");\n        balances[item.seller] += msg.value;\n        token.safeTransferFrom(item.seller, msg.sender, itemID, amount, \"Transfer\");\n    }\n\n    //Withdraw amount recieved as part of a sale\n    //Check if amount that the seller wants to withdraw is available on their balances\n    //Transfers amount and deducts from balances\n    function withdraw(uint256 amount, address payable destAddr)public{\n        require(amount <= balances[msg.sender], \"Insufficient funds.\");\n\n        destAddr.transfer(amount);\n        balances[msg.sender] -= amount;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17259  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1157:1161  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17259  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8244:8250  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8241  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17259  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_14:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_21)\ntag_22:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_24:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_26\n    /* \"#utility.yul\":137:186   */\n  tag_27\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":121:187   */\n  tag_29\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_31\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":262:374   */\ntag_30:\n    /* \"#utility.yul\":383:422   */\n  tag_33\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_35:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_38\n  tag_39\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":531:653   */\ntag_37:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_40\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1333   */\ntag_3:\n    /* \"#utility.yul\":889:895   */\n  0x00\n    /* \"#utility.yul\":938:940   */\n  0x20\n    /* \"#utility.yul\":926:935   */\n  dup3\n    /* \"#utility.yul\":917:924   */\n  dup5\n    /* \"#utility.yul\":913:936   */\n  sub\n    /* \"#utility.yul\":909:941   */\n  slt\n    /* \"#utility.yul\":906:1025   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":944:1023   */\n  tag_43\n  tag_44\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":906:1025   */\ntag_42:\n    /* \"#utility.yul\":1085:1086   */\n  0x00\n    /* \"#utility.yul\":1074:1083   */\n  dup3\n    /* \"#utility.yul\":1070:1087   */\n  add\n    /* \"#utility.yul\":1064:1088   */\n  mload\n    /* \"#utility.yul\":1115:1133   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1107:1113   */\n  dup2\n    /* \"#utility.yul\":1104:1134   */\n  gt\n    /* \"#utility.yul\":1101:1218   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1137:1216   */\n  tag_46\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1101:1218   */\ntag_45:\n    /* \"#utility.yul\":1242:1316   */\n  tag_48\n    /* \"#utility.yul\":1308:1315   */\n  dup5\n    /* \"#utility.yul\":1299:1305   */\n  dup3\n    /* \"#utility.yul\":1288:1297   */\n  dup6\n    /* \"#utility.yul\":1284:1306   */\n  add\n    /* \"#utility.yul\":1242:1316   */\n  tag_35\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1232:1316   */\n  swap2\n  pop\n    /* \"#utility.yul\":1035:1326   */\n  pop\n    /* \"#utility.yul\":809:1333   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1339:1468   */\ntag_29:\n    /* \"#utility.yul\":1373:1379   */\n  0x00\n    /* \"#utility.yul\":1400:1420   */\n  tag_50\n  tag_51\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1390:1420   */\n  swap1\n  pop\n    /* \"#utility.yul\":1429:1462   */\n  tag_52\n    /* \"#utility.yul\":1457:1461   */\n  dup3\n    /* \"#utility.yul\":1449:1455   */\n  dup3\n    /* \"#utility.yul\":1429:1462   */\n  tag_53\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1339:1468   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1474:1549   */\ntag_51:\n    /* \"#utility.yul\":1507:1513   */\n  0x00\n    /* \"#utility.yul\":1540:1542   */\n  0x40\n    /* \"#utility.yul\":1534:1543   */\n  mload\n    /* \"#utility.yul\":1524:1543   */\n  swap1\n  pop\n    /* \"#utility.yul\":1474:1549   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1555:1863   */\ntag_28:\n    /* \"#utility.yul\":1617:1621   */\n  0x00\n    /* \"#utility.yul\":1707:1725   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1696:1726   */\n  gt\n    /* \"#utility.yul\":1693:1749   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1729:1747   */\n  tag_57\n  tag_58\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1693:1749   */\ntag_56:\n    /* \"#utility.yul\":1767:1796   */\n  tag_59\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1767:1796   */\n  tag_60\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1759:1796   */\n  swap1\n  pop\n    /* \"#utility.yul\":1851:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1849   */\n  dup2\n    /* \"#utility.yul\":1841:1856   */\n  add\n    /* \"#utility.yul\":1833:1856   */\n  swap1\n  pop\n    /* \"#utility.yul\":1555:1863   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1869:2176   */\ntag_34:\n    /* \"#utility.yul\":1937:1938   */\n  0x00\n    /* \"#utility.yul\":1947:2060   */\ntag_62:\n    /* \"#utility.yul\":1961:1967   */\n  dup4\n    /* \"#utility.yul\":1958:1959   */\n  dup2\n    /* \"#utility.yul\":1955:1968   */\n  lt\n    /* \"#utility.yul\":1947:2060   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2046:2047   */\n  dup1\n    /* \"#utility.yul\":2041:2044   */\n  dup3\n    /* \"#utility.yul\":2037:2048   */\n  add\n    /* \"#utility.yul\":2031:2049   */\n  mload\n    /* \"#utility.yul\":2027:2028   */\n  dup2\n    /* \"#utility.yul\":2022:2025   */\n  dup5\n    /* \"#utility.yul\":2018:2029   */\n  add\n    /* \"#utility.yul\":2011:2050   */\n  mstore\n    /* \"#utility.yul\":1983:1985   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  dup2\n    /* \"#utility.yul\":1976:1986   */\n  add\n    /* \"#utility.yul\":1971:1986   */\n  swap1\n  pop\n    /* \"#utility.yul\":1947:2060   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":2078:2084   */\n  dup4\n    /* \"#utility.yul\":2075:2076   */\n  dup2\n    /* \"#utility.yul\":2072:2085   */\n  gt\n    /* \"#utility.yul\":2069:2170   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2158:2159   */\n  0x00\n    /* \"#utility.yul\":2149:2155   */\n  dup5\n    /* \"#utility.yul\":2144:2147   */\n  dup5\n    /* \"#utility.yul\":2140:2156   */\n  add\n    /* \"#utility.yul\":2133:2160   */\n  mstore\n    /* \"#utility.yul\":2069:2170   */\ntag_65:\n    /* \"#utility.yul\":1918:2176   */\n  pop\n    /* \"#utility.yul\":1869:2176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2182:2502   */\ntag_13:\n    /* \"#utility.yul\":2226:2232   */\n  0x00\n    /* \"#utility.yul\":2263:2264   */\n  0x02\n    /* \"#utility.yul\":2257:2261   */\n  dup3\n    /* \"#utility.yul\":2253:2265   */\n  div\n    /* \"#utility.yul\":2243:2265   */\n  swap1\n  pop\n    /* \"#utility.yul\":2310:2311   */\n  0x01\n    /* \"#utility.yul\":2304:2308   */\n  dup3\n    /* \"#utility.yul\":2300:2312   */\n  and\n    /* \"#utility.yul\":2331:2349   */\n  dup1\n    /* \"#utility.yul\":2321:2402   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2387:2391   */\n  0x7f\n    /* \"#utility.yul\":2379:2385   */\n  dup3\n    /* \"#utility.yul\":2375:2392   */\n  and\n    /* \"#utility.yul\":2365:2392   */\n  swap2\n  pop\n    /* \"#utility.yul\":2321:2402   */\ntag_67:\n    /* \"#utility.yul\":2449:2451   */\n  0x20\n    /* \"#utility.yul\":2441:2447   */\n  dup3\n    /* \"#utility.yul\":2438:2452   */\n  lt\n    /* \"#utility.yul\":2418:2436   */\n  dup2\n    /* \"#utility.yul\":2415:2453   */\n  eq\n    /* \"#utility.yul\":2412:2496   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2468:2486   */\n  tag_69\n  tag_70\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2412:2496   */\ntag_68:\n    /* \"#utility.yul\":2233:2502   */\n  pop\n    /* \"#utility.yul\":2182:2502   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2508:2789   */\ntag_53:\n    /* \"#utility.yul\":2591:2618   */\n  tag_72\n    /* \"#utility.yul\":2613:2617   */\n  dup3\n    /* \"#utility.yul\":2591:2618   */\n  tag_60\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2583:2589   */\n  dup2\n    /* \"#utility.yul\":2579:2619   */\n  add\n    /* \"#utility.yul\":2721:2727   */\n  dup2\n    /* \"#utility.yul\":2709:2719   */\n  dup2\n    /* \"#utility.yul\":2706:2728   */\n  lt\n    /* \"#utility.yul\":2685:2703   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2673:2683   */\n  dup3\n    /* \"#utility.yul\":2670:2704   */\n  gt\n    /* \"#utility.yul\":2667:2729   */\n  or\n    /* \"#utility.yul\":2664:2752   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2732:2750   */\n  tag_74\n  tag_58\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2664:2752   */\ntag_73:\n    /* \"#utility.yul\":2772:2782   */\n  dup1\n    /* \"#utility.yul\":2768:2770   */\n  0x40\n    /* \"#utility.yul\":2761:2783   */\n  mstore\n    /* \"#utility.yul\":2551:2789   */\n  pop\n    /* \"#utility.yul\":2508:2789   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2795:2975   */\ntag_70:\n    /* \"#utility.yul\":2843:2920   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2840:2841   */\n  0x00\n    /* \"#utility.yul\":2833:2921   */\n  mstore\n    /* \"#utility.yul\":2940:2944   */\n  0x22\n    /* \"#utility.yul\":2937:2938   */\n  0x04\n    /* \"#utility.yul\":2930:2945   */\n  mstore\n    /* \"#utility.yul\":2964:2968   */\n  0x24\n    /* \"#utility.yul\":2961:2962   */\n  0x00\n    /* \"#utility.yul\":2954:2969   */\n  revert\n    /* \"#utility.yul\":2981:3161   */\ntag_58:\n    /* \"#utility.yul\":3029:3106   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3026:3027   */\n  0x00\n    /* \"#utility.yul\":3019:3107   */\n  mstore\n    /* \"#utility.yul\":3126:3130   */\n  0x41\n    /* \"#utility.yul\":3123:3124   */\n  0x04\n    /* \"#utility.yul\":3116:3131   */\n  mstore\n    /* \"#utility.yul\":3150:3154   */\n  0x24\n    /* \"#utility.yul\":3147:3148   */\n  0x00\n    /* \"#utility.yul\":3140:3155   */\n  revert\n    /* \"#utility.yul\":3167:3284   */\ntag_39:\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  dup1\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3290:3407   */\ntag_32:\n    /* \"#utility.yul\":3399:3400   */\n  0x00\n    /* \"#utility.yul\":3396:3397   */\n  dup1\n    /* \"#utility.yul\":3389:3401   */\n  revert\n    /* \"#utility.yul\":3413:3530   */\ntag_47:\n    /* \"#utility.yul\":3522:3523   */\n  0x00\n    /* \"#utility.yul\":3519:3520   */\n  dup1\n    /* \"#utility.yul\":3512:3524   */\n  revert\n    /* \"#utility.yul\":3536:3653   */\ntag_44:\n    /* \"#utility.yul\":3645:3646   */\n  0x00\n    /* \"#utility.yul\":3642:3643   */\n  dup1\n    /* \"#utility.yul\":3635:3647   */\n  revert\n    /* \"#utility.yul\":3659:3761   */\ntag_60:\n    /* \"#utility.yul\":3700:3706   */\n  0x00\n    /* \"#utility.yul\":3751:3753   */\n  0x1f\n    /* \"#utility.yul\":3747:3754   */\n  not\n    /* \"#utility.yul\":3742:3744   */\n  0x1f\n    /* \"#utility.yul\":3735:3740   */\n  dup4\n    /* \"#utility.yul\":3731:3745   */\n  add\n    /* \"#utility.yul\":3727:3755   */\n  and\n    /* \"#utility.yul\":3717:3755   */\n  swap1\n  pop\n    /* \"#utility.yul\":3659:3761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17259  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17259  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4064:4490  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3992  function safeTransferFrom(... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2317:2318  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2305  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2366  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2392  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2396  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2393:2395  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2396  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2405  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2397:2404  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2405  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2376:2405  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1388:1414  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1384  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1445:1482  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1441  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1522:1533  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1521  super.supportsInterface */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4064:4490  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4297:4309  _msgSender() */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4297:4307  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4297:4309  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4289:4309  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4289:4293  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4289:4309  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4289:4349  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_72\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4313:4349  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4330:4334  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4336:4348  _msgSender() */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4336:4346  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4336:4348  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4313:4329  isApprovedForAll */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4313:4349  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4289:4349  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4268:4421  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4458  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4460:4462  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4464:4467  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4469:4476  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4478:4482  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4453  _safeBatchTransferFrom */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4064:4490  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2720:2736  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2779:2782  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2779:2789  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2768  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2775  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2789  accounts.length == ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2752:2835  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2846:2876  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:2901  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:2908  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2909  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2846:2909  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2925:2934  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2944:2952  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2944:2959  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2940:2941  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2940:2959  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3029  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3009:3017  accounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3019  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3009:3020  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3025  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3026:3027  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3028  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n    tag_95:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3008  balanceOf */\n      tag_15\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3029  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2993  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2994:2995  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2996  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n    tag_97:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:3029  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2961:2964  ++i */\n      dup1\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3057:3070  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3050:3070  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3291  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3270  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3268  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3272:3280  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3282:3290  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3257  _setApprovalForAll */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3291  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3464:3468  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3505  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3514  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3506:3513  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3514  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3524  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3515:3523  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3524  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3524  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3992  function safeTransferFrom(... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3806:3818  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3806:3816  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3806:3818  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3818  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3802  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3818  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3858  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_108\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3858  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3839:3843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3845:3857  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3845:3855  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3845:3857  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3838  isApprovedForAll */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3858  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3858  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3777:3930  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_77\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3940:3985  _safeTransferFrom(from, to, id, amount, data) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3958:3962  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3964:3966  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3968:3970  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3972:3978  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3980:3984  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3940:3957  _safeTransferFrom */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3940:3985  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3992  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6460  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6467  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6442  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6449  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6467  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6544:6545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6532  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6599:6615  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6618:6630  _msgSender() */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6618:6628  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6618:6630  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6599:6630  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6641:6701  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6662:6670  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6672:6676  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6678:6680  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6682:6685  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6687:6694  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6696:6700  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6641:6661  _beforeTokenTransfer */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6641:6701  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6717:6726  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6739  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6746  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6733  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6746  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6777  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6783  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6784:6785  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6786  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_130\n      jumpi\n      tag_131\n      tag_94\n      jump\t// in\n    tag_131:\n    tag_130:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6786  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6800:6814  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6824  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6825:6826  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_133\n      tag_94\n      jump\t// in\n    tag_133:\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6800:6827  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6842:6861  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6873  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6874:6876  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6878:6882  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6842:6883  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6926  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6905:6916  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6905:6926  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7051:7057  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7048  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7025:7027  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7029:7033  from */\n      dup13\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7057  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7106:7112  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7094  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7098  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7095:7097  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7098  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7099:7101  to */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6753:7123  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6748:6751  ++i */\n      dup1\n      tag_139\n      swap1\n      tag_100\n      jump\t// in\n    tag_139:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_127)\n    tag_128:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7168:7170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7162:7166  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7152:7160  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7172:7175  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7177:7184  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7196:7255  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7216:7224  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7226:7230  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7232:7234  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7236:7239  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7241:7248  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7250:7254  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7196:7215  _afterTokenTransfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7196:7255  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7302:7310  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7312:7316  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7318:7320  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7322:7325  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7327:7334  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7336:7340  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7301  _doSafeBatchTransferAcceptanceCheck */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6421:7348  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12910:13233  function _setApprovalForAll(... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13060:13068  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13051:13068  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13051:13056  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13051:13068  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13043:13114  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13162:13170  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13124:13142  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13124:13149  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13143:13148  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13124:13149  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13124:13159  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13150:13158  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13124:13159  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13124:13170  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13207:13215  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13185:13226  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13200:13205  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13185:13226  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13217:13225  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13185:13226  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12910:13233  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5135:5136  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5123  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_123\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5190:5206  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5209:5221  _msgSender() */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5209:5219  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5209:5221  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5190:5221  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5231:5251  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5274  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5271  _asSingletonArray */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5231:5275  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5309  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5330:5336  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5329  _asSingletonArray */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5337  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5348:5408  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5369:5377  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5379:5383  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5385:5387  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5389:5392  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5394:5401  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5403:5407  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5348:5368  _beforeTokenTransfer */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5348:5408  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5419:5438  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5450  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5453  id */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5455:5459  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5419:5460  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5493:5499  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5478:5489  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5478:5499  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_136\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5622  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5613  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5592  id */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5594:5598  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5622  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5663:5669  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5651  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5655  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5652:5654  id */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5655  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5656:5658  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_161\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_161:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5716:5718  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5700:5708  operator */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5720:5722  id */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5730  amount */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_162\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5742:5801  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5762:5770  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5772:5776  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5780  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5782:5785  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5787:5794  amounts */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5796:5800  data */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5742:5761  _afterTokenTransfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5742:5801  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5843:5851  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5857  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5861  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5863:5865  id */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5867:5873  amount */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5879  data */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5842  _doSafeTransferAcceptanceCheck */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5103:5887  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14169:14383  function _beforeTokenTransfer(... */\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15316:15529  function _afterTokenTransfer(... */\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16266:17058  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16498:16513  to.isContract() */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16498:16500  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16498:16511  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16498:16513  to.isContract() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16494:17052  if (to.isContract()) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16550:16552  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16533:16576  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16577:16585  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16587:16591  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16593:16596  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16598:16605  amounts */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16607:16611  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16533:16612  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0x01\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16529:17042  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_179\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_182\n      jumpi\n      pop\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n      dup1\n      tag_187\n      jumpi\n      pop\n      jump(tag_181)\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16918:16924  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16911:16925  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16529:17042  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_182:\n      pop\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16965:17027  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16529:17042  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16703:16751  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16691:16751  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16691:16699  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16691:16751  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16687:16844  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16775:16825  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16687:16844  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16613:16858  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16494:17052  if (to.isContract()) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16266:17058  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17064:17257  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17130:17146  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17158:17180  uint256[] memory array */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17197:17198  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17183:17199  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_196\n      jumpi\n      tag_197\n      tag_86\n      jump\t// in\n    tag_197:\n    tag_196:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_198\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_198:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17158:17199  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17220:17227  element */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17209:17214  array */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17215:17216  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17209:17217  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_200\n      tag_94\n      jump\t// in\n    tag_200:\n    tag_199:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17209:17227  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17245:17250  array */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17238:17250  return array */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17064:17257  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15535:16260  function _doSafeTransferAcceptanceCheck(... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15742:15757  to.isContract() */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15742:15744  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15742:15755  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15742:15757  to.isContract() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15738:16254  if (to.isContract()) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15794:15796  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15777:15815  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15816:15824  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15826:15830  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15832:15834  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15836:15842  amount */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15844:15848  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15777:15849  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_207\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_208:\n      0x01\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15773:16244  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_209\n      jumpi\n      tag_213\n      tag_184\n      jump\t// in\n    tag_213:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_212\n      jumpi\n      pop\n      tag_214\n      tag_186\n      jump\t// in\n    tag_214:\n      dup1\n      tag_215\n      jumpi\n      pop\n      jump(tag_211)\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16120:16126  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16113:16127  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15773:16244  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_212:\n      pop\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16167:16229  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_190\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15773:16244  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15910:15953  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15898:15953  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15898:15906  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15898:15953  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15894:16046  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15977:16027  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_194\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15894:16046  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15850:16060  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15738:16254  if (to.isContract()) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15535:16260  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_223:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_225\n        /* \"#utility.yul\":161:225   */\n      tag_226\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":145:226   */\n      tag_228\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_230\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":350:493   */\n    tag_229:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_232:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_235\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_232)\n    tag_234:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1491   */\n    tag_237:\n        /* \"#utility.yul\":865:870   */\n      0x00\n        /* \"#utility.yul\":890:971   */\n      tag_239\n        /* \"#utility.yul\":906:970   */\n      tag_240\n        /* \"#utility.yul\":963:969   */\n      dup5\n        /* \"#utility.yul\":906:970   */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":890:971   */\n      tag_228\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":881:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:996   */\n      dup1\n        /* \"#utility.yul\":1020:1026   */\n      dup4\n        /* \"#utility.yul\":1013:1018   */\n      dup3\n        /* \"#utility.yul\":1006:1027   */\n      mstore\n        /* \"#utility.yul\":1054:1058   */\n      0x20\n        /* \"#utility.yul\":1047:1052   */\n      dup3\n        /* \"#utility.yul\":1043:1059   */\n      add\n        /* \"#utility.yul\":1036:1059   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1086   */\n      dup3\n        /* \"#utility.yul\":1130:1133   */\n      dup6\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup7\n        /* \"#utility.yul\":1110:1127   */\n      mul\n        /* \"#utility.yul\":1105:1108   */\n      dup3\n        /* \"#utility.yul\":1101:1128   */\n      add\n        /* \"#utility.yul\":1098:1134   */\n      gt\n        /* \"#utility.yul\":1095:1238   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1149:1228   */\n      tag_243\n      tag_231\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1095:1238   */\n    tag_242:\n        /* \"#utility.yul\":1262:1263   */\n      0x00\n        /* \"#utility.yul\":1247:1485   */\n    tag_244:\n        /* \"#utility.yul\":1272:1278   */\n      dup6\n        /* \"#utility.yul\":1269:1270   */\n      dup2\n        /* \"#utility.yul\":1266:1279   */\n      lt\n        /* \"#utility.yul\":1247:1485   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":1340:1343   */\n      dup2\n        /* \"#utility.yul\":1369:1406   */\n      tag_247\n        /* \"#utility.yul\":1402:1405   */\n      dup9\n        /* \"#utility.yul\":1390:1400   */\n      dup3\n        /* \"#utility.yul\":1369:1406   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1364:1367   */\n      dup5\n        /* \"#utility.yul\":1357:1407   */\n      mstore\n        /* \"#utility.yul\":1436:1440   */\n      0x20\n        /* \"#utility.yul\":1431:1434   */\n      dup5\n        /* \"#utility.yul\":1427:1441   */\n      add\n        /* \"#utility.yul\":1420:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1470:1474   */\n      0x20\n        /* \"#utility.yul\":1465:1468   */\n      dup4\n        /* \"#utility.yul\":1461:1475   */\n      add\n        /* \"#utility.yul\":1454:1475   */\n      swap3\n      pop\n        /* \"#utility.yul\":1307:1485   */\n      pop\n        /* \"#utility.yul\":1294:1295   */\n      0x01\n        /* \"#utility.yul\":1291:1292   */\n      dup2\n        /* \"#utility.yul\":1287:1296   */\n      add\n        /* \"#utility.yul\":1282:1296   */\n      swap1\n      pop\n        /* \"#utility.yul\":1247:1485   */\n      jump(tag_244)\n    tag_246:\n        /* \"#utility.yul\":1251:1265   */\n      pop\n        /* \"#utility.yul\":871:1491   */\n      pop\n      pop\n        /* \"#utility.yul\":769:1491   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1497:1907   */\n    tag_249:\n        /* \"#utility.yul\":1574:1579   */\n      0x00\n        /* \"#utility.yul\":1599:1664   */\n      tag_251\n        /* \"#utility.yul\":1615:1663   */\n      tag_252\n        /* \"#utility.yul\":1656:1662   */\n      dup5\n        /* \"#utility.yul\":1615:1663   */\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1599:1664   */\n      tag_228\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1590:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1687:1693   */\n      dup3\n        /* \"#utility.yul\":1680:1685   */\n      dup2\n        /* \"#utility.yul\":1673:1694   */\n      mstore\n        /* \"#utility.yul\":1725:1729   */\n      0x20\n        /* \"#utility.yul\":1718:1723   */\n      dup2\n        /* \"#utility.yul\":1714:1730   */\n      add\n        /* \"#utility.yul\":1763:1766   */\n      dup5\n        /* \"#utility.yul\":1754:1760   */\n      dup5\n        /* \"#utility.yul\":1749:1752   */\n      dup5\n        /* \"#utility.yul\":1745:1761   */\n      add\n        /* \"#utility.yul\":1742:1767   */\n      gt\n        /* \"#utility.yul\":1739:1851   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":1770:1849   */\n      tag_255\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1739:1851   */\n    tag_254:\n        /* \"#utility.yul\":1860:1901   */\n      tag_257\n        /* \"#utility.yul\":1894:1900   */\n      dup5\n        /* \"#utility.yul\":1889:1892   */\n      dup3\n        /* \"#utility.yul\":1884:1887   */\n      dup6\n        /* \"#utility.yul\":1860:1901   */\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1580:1907   */\n      pop\n        /* \"#utility.yul\":1497:1907   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1913:2052   */\n    tag_236:\n        /* \"#utility.yul\":1959:1964   */\n      0x00\n        /* \"#utility.yul\":1997:2003   */\n      dup2\n        /* \"#utility.yul\":1984:2004   */\n      calldataload\n        /* \"#utility.yul\":1975:2004   */\n      swap1\n      pop\n        /* \"#utility.yul\":2013:2046   */\n      tag_260\n        /* \"#utility.yul\":2040:2045   */\n      dup2\n        /* \"#utility.yul\":2013:2046   */\n      tag_261\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1913:2052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2075:2445   */\n    tag_262:\n        /* \"#utility.yul\":2146:2151   */\n      0x00\n        /* \"#utility.yul\":2195:2198   */\n      dup3\n        /* \"#utility.yul\":2188:2192   */\n      0x1f\n        /* \"#utility.yul\":2180:2186   */\n      dup4\n        /* \"#utility.yul\":2176:2193   */\n      add\n        /* \"#utility.yul\":2172:2199   */\n      slt\n        /* \"#utility.yul\":2162:2284   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":2203:2282   */\n      tag_265\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2162:2284   */\n    tag_264:\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2345:2439   */\n      tag_267\n        /* \"#utility.yul\":2435:2438   */\n      dup5\n        /* \"#utility.yul\":2427:2433   */\n      dup3\n        /* \"#utility.yul\":2420:2424   */\n      0x20\n        /* \"#utility.yul\":2412:2418   */\n      dup7\n        /* \"#utility.yul\":2408:2425   */\n      add\n        /* \"#utility.yul\":2345:2439   */\n      tag_223\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2336:2439   */\n      swap2\n      pop\n        /* \"#utility.yul\":2152:2445   */\n      pop\n        /* \"#utility.yul\":2075:2445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2468:2838   */\n    tag_268:\n        /* \"#utility.yul\":2539:2544   */\n      0x00\n        /* \"#utility.yul\":2588:2591   */\n      dup3\n        /* \"#utility.yul\":2581:2585   */\n      0x1f\n        /* \"#utility.yul\":2573:2579   */\n      dup4\n        /* \"#utility.yul\":2569:2586   */\n      add\n        /* \"#utility.yul\":2565:2592   */\n      slt\n        /* \"#utility.yul\":2555:2677   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":2596:2675   */\n      tag_271\n      tag_266\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2555:2677   */\n    tag_270:\n        /* \"#utility.yul\":2713:2719   */\n      dup2\n        /* \"#utility.yul\":2700:2720   */\n      calldataload\n        /* \"#utility.yul\":2738:2832   */\n      tag_272\n        /* \"#utility.yul\":2828:2831   */\n      dup5\n        /* \"#utility.yul\":2820:2826   */\n      dup3\n        /* \"#utility.yul\":2813:2817   */\n      0x20\n        /* \"#utility.yul\":2805:2811   */\n      dup7\n        /* \"#utility.yul\":2801:2818   */\n      add\n        /* \"#utility.yul\":2738:2832   */\n      tag_237\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2729:2832   */\n      swap2\n      pop\n        /* \"#utility.yul\":2545:2838   */\n      pop\n        /* \"#utility.yul\":2468:2838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:2977   */\n    tag_273:\n        /* \"#utility.yul\":2887:2892   */\n      0x00\n        /* \"#utility.yul\":2925:2931   */\n      dup2\n        /* \"#utility.yul\":2912:2932   */\n      calldataload\n        /* \"#utility.yul\":2903:2932   */\n      swap1\n      pop\n        /* \"#utility.yul\":2941:2971   */\n      tag_275\n        /* \"#utility.yul\":2965:2970   */\n      dup2\n        /* \"#utility.yul\":2941:2971   */\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2844:2977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2983:3120   */\n    tag_277:\n        /* \"#utility.yul\":3028:3033   */\n      0x00\n        /* \"#utility.yul\":3066:3072   */\n      dup2\n        /* \"#utility.yul\":3053:3073   */\n      calldataload\n        /* \"#utility.yul\":3044:3073   */\n      swap1\n      pop\n        /* \"#utility.yul\":3082:3114   */\n      tag_279\n        /* \"#utility.yul\":3108:3113   */\n      dup2\n        /* \"#utility.yul\":3082:3114   */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2983:3120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3126:3267   */\n    tag_281:\n        /* \"#utility.yul\":3182:3187   */\n      0x00\n        /* \"#utility.yul\":3213:3219   */\n      dup2\n        /* \"#utility.yul\":3207:3220   */\n      mload\n        /* \"#utility.yul\":3198:3220   */\n      swap1\n      pop\n        /* \"#utility.yul\":3229:3261   */\n      tag_283\n        /* \"#utility.yul\":3255:3260   */\n      dup2\n        /* \"#utility.yul\":3229:3261   */\n      tag_280\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3126:3267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3286:3624   */\n    tag_284:\n        /* \"#utility.yul\":3341:3346   */\n      0x00\n        /* \"#utility.yul\":3390:3393   */\n      dup3\n        /* \"#utility.yul\":3383:3387   */\n      0x1f\n        /* \"#utility.yul\":3375:3381   */\n      dup4\n        /* \"#utility.yul\":3371:3388   */\n      add\n        /* \"#utility.yul\":3367:3394   */\n      slt\n        /* \"#utility.yul\":3357:3479   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":3398:3477   */\n      tag_287\n      tag_266\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3357:3479   */\n    tag_286:\n        /* \"#utility.yul\":3515:3521   */\n      dup2\n        /* \"#utility.yul\":3502:3522   */\n      calldataload\n        /* \"#utility.yul\":3540:3618   */\n      tag_288\n        /* \"#utility.yul\":3614:3617   */\n      dup5\n        /* \"#utility.yul\":3606:3612   */\n      dup3\n        /* \"#utility.yul\":3599:3603   */\n      0x20\n        /* \"#utility.yul\":3591:3597   */\n      dup7\n        /* \"#utility.yul\":3587:3604   */\n      add\n        /* \"#utility.yul\":3540:3618   */\n      tag_249\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3531:3618   */\n      swap2\n      pop\n        /* \"#utility.yul\":3347:3624   */\n      pop\n        /* \"#utility.yul\":3286:3624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3630:3769   */\n    tag_248:\n        /* \"#utility.yul\":3676:3681   */\n      0x00\n        /* \"#utility.yul\":3714:3720   */\n      dup2\n        /* \"#utility.yul\":3701:3721   */\n      calldataload\n        /* \"#utility.yul\":3692:3721   */\n      swap1\n      pop\n        /* \"#utility.yul\":3730:3763   */\n      tag_290\n        /* \"#utility.yul\":3757:3762   */\n      dup2\n        /* \"#utility.yul\":3730:3763   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3630:3769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3775:4249   */\n    tag_46:\n        /* \"#utility.yul\":3843:3849   */\n      0x00\n        /* \"#utility.yul\":3851:3857   */\n      dup1\n        /* \"#utility.yul\":3900:3902   */\n      0x40\n        /* \"#utility.yul\":3888:3897   */\n      dup4\n        /* \"#utility.yul\":3879:3886   */\n      dup6\n        /* \"#utility.yul\":3875:3898   */\n      sub\n        /* \"#utility.yul\":3871:3903   */\n      slt\n        /* \"#utility.yul\":3868:3987   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3906:3985   */\n      tag_294\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3868:3987   */\n    tag_293:\n        /* \"#utility.yul\":4026:4027   */\n      0x00\n        /* \"#utility.yul\":4051:4104   */\n      tag_296\n        /* \"#utility.yul\":4096:4103   */\n      dup6\n        /* \"#utility.yul\":4087:4093   */\n      dup3\n        /* \"#utility.yul\":4076:4085   */\n      dup7\n        /* \"#utility.yul\":4072:4094   */\n      add\n        /* \"#utility.yul\":4051:4104   */\n      tag_236\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4041:4104   */\n      swap3\n      pop\n        /* \"#utility.yul\":3997:4114   */\n      pop\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \"#utility.yul\":4179:4232   */\n      tag_297\n        /* \"#utility.yul\":4224:4231   */\n      dup6\n        /* \"#utility.yul\":4215:4221   */\n      dup3\n        /* \"#utility.yul\":4204:4213   */\n      dup7\n        /* \"#utility.yul\":4200:4222   */\n      add\n        /* \"#utility.yul\":4179:4232   */\n      tag_236\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4169:4232   */\n      swap2\n      pop\n        /* \"#utility.yul\":4124:4242   */\n      pop\n        /* \"#utility.yul\":3775:4249   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4255:5764   */\n    tag_32:\n        /* \"#utility.yul\":4409:4415   */\n      0x00\n        /* \"#utility.yul\":4417:4423   */\n      dup1\n        /* \"#utility.yul\":4425:4431   */\n      0x00\n        /* \"#utility.yul\":4433:4439   */\n      dup1\n        /* \"#utility.yul\":4441:4447   */\n      0x00\n        /* \"#utility.yul\":4490:4493   */\n      0xa0\n        /* \"#utility.yul\":4478:4487   */\n      dup7\n        /* \"#utility.yul\":4469:4476   */\n      dup9\n        /* \"#utility.yul\":4465:4488   */\n      sub\n        /* \"#utility.yul\":4461:4494   */\n      slt\n        /* \"#utility.yul\":4458:4578   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4497:4576   */\n      tag_300\n      tag_295\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4458:4578   */\n    tag_299:\n        /* \"#utility.yul\":4617:4618   */\n      0x00\n        /* \"#utility.yul\":4642:4695   */\n      tag_301\n        /* \"#utility.yul\":4687:4694   */\n      dup9\n        /* \"#utility.yul\":4678:4684   */\n      dup3\n        /* \"#utility.yul\":4667:4676   */\n      dup10\n        /* \"#utility.yul\":4663:4685   */\n      add\n        /* \"#utility.yul\":4642:4695   */\n      tag_236\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4632:4695   */\n      swap6\n      pop\n        /* \"#utility.yul\":4588:4705   */\n      pop\n        /* \"#utility.yul\":4744:4746   */\n      0x20\n        /* \"#utility.yul\":4770:4823   */\n      tag_302\n        /* \"#utility.yul\":4815:4822   */\n      dup9\n        /* \"#utility.yul\":4806:4812   */\n      dup3\n        /* \"#utility.yul\":4795:4804   */\n      dup10\n        /* \"#utility.yul\":4791:4813   */\n      add\n        /* \"#utility.yul\":4770:4823   */\n      tag_236\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4760:4823   */\n      swap5\n      pop\n        /* \"#utility.yul\":4715:4833   */\n      pop\n        /* \"#utility.yul\":4900:4902   */\n      0x40\n        /* \"#utility.yul\":4889:4898   */\n      dup7\n        /* \"#utility.yul\":4885:4903   */\n      add\n        /* \"#utility.yul\":4872:4904   */\n      calldataload\n        /* \"#utility.yul\":4931:4949   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4923:4929   */\n      dup2\n        /* \"#utility.yul\":4920:4950   */\n      gt\n        /* \"#utility.yul\":4917:5034   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":4953:5032   */\n      tag_304\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4917:5034   */\n    tag_303:\n        /* \"#utility.yul\":5058:5136   */\n      tag_306\n        /* \"#utility.yul\":5128:5135   */\n      dup9\n        /* \"#utility.yul\":5119:5125   */\n      dup3\n        /* \"#utility.yul\":5108:5117   */\n      dup10\n        /* \"#utility.yul\":5104:5126   */\n      add\n        /* \"#utility.yul\":5058:5136   */\n      tag_268\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":5048:5136   */\n      swap4\n      pop\n        /* \"#utility.yul\":4843:5146   */\n      pop\n        /* \"#utility.yul\":5213:5215   */\n      0x60\n        /* \"#utility.yul\":5202:5211   */\n      dup7\n        /* \"#utility.yul\":5198:5216   */\n      add\n        /* \"#utility.yul\":5185:5217   */\n      calldataload\n        /* \"#utility.yul\":5244:5262   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5236:5242   */\n      dup2\n        /* \"#utility.yul\":5233:5263   */\n      gt\n        /* \"#utility.yul\":5230:5347   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":5266:5345   */\n      tag_308\n      tag_305\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5230:5347   */\n    tag_307:\n        /* \"#utility.yul\":5371:5449   */\n      tag_309\n        /* \"#utility.yul\":5441:5448   */\n      dup9\n        /* \"#utility.yul\":5432:5438   */\n      dup3\n        /* \"#utility.yul\":5421:5430   */\n      dup10\n        /* \"#utility.yul\":5417:5439   */\n      add\n        /* \"#utility.yul\":5371:5449   */\n      tag_268\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":5361:5449   */\n      swap3\n      pop\n        /* \"#utility.yul\":5156:5459   */\n      pop\n        /* \"#utility.yul\":5526:5529   */\n      0x80\n        /* \"#utility.yul\":5515:5524   */\n      dup7\n        /* \"#utility.yul\":5511:5530   */\n      add\n        /* \"#utility.yul\":5498:5531   */\n      calldataload\n        /* \"#utility.yul\":5558:5576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5550:5556   */\n      dup2\n        /* \"#utility.yul\":5547:5577   */\n      gt\n        /* \"#utility.yul\":5544:5661   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":5580:5659   */\n      tag_311\n      tag_305\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5544:5661   */\n    tag_310:\n        /* \"#utility.yul\":5685:5747   */\n      tag_312\n        /* \"#utility.yul\":5739:5746   */\n      dup9\n        /* \"#utility.yul\":5730:5736   */\n      dup3\n        /* \"#utility.yul\":5719:5728   */\n      dup10\n        /* \"#utility.yul\":5715:5737   */\n      add\n        /* \"#utility.yul\":5685:5747   */\n      tag_284\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5675:5747   */\n      swap2\n      pop\n        /* \"#utility.yul\":5469:5757   */\n      pop\n        /* \"#utility.yul\":4255:5764   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5770:6859   */\n    tag_51:\n        /* \"#utility.yul\":5874:5880   */\n      0x00\n        /* \"#utility.yul\":5882:5888   */\n      dup1\n        /* \"#utility.yul\":5890:5896   */\n      0x00\n        /* \"#utility.yul\":5898:5904   */\n      dup1\n        /* \"#utility.yul\":5906:5912   */\n      0x00\n        /* \"#utility.yul\":5955:5958   */\n      0xa0\n        /* \"#utility.yul\":5943:5952   */\n      dup7\n        /* \"#utility.yul\":5934:5941   */\n      dup9\n        /* \"#utility.yul\":5930:5953   */\n      sub\n        /* \"#utility.yul\":5926:5959   */\n      slt\n        /* \"#utility.yul\":5923:6043   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":5962:6041   */\n      tag_315\n      tag_295\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5923:6043   */\n    tag_314:\n        /* \"#utility.yul\":6082:6083   */\n      0x00\n        /* \"#utility.yul\":6107:6160   */\n      tag_316\n        /* \"#utility.yul\":6152:6159   */\n      dup9\n        /* \"#utility.yul\":6143:6149   */\n      dup3\n        /* \"#utility.yul\":6132:6141   */\n      dup10\n        /* \"#utility.yul\":6128:6150   */\n      add\n        /* \"#utility.yul\":6107:6160   */\n      tag_236\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6097:6160   */\n      swap6\n      pop\n        /* \"#utility.yul\":6053:6170   */\n      pop\n        /* \"#utility.yul\":6209:6211   */\n      0x20\n        /* \"#utility.yul\":6235:6288   */\n      tag_317\n        /* \"#utility.yul\":6280:6287   */\n      dup9\n        /* \"#utility.yul\":6271:6277   */\n      dup3\n        /* \"#utility.yul\":6260:6269   */\n      dup10\n        /* \"#utility.yul\":6256:6278   */\n      add\n        /* \"#utility.yul\":6235:6288   */\n      tag_236\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":6225:6288   */\n      swap5\n      pop\n        /* \"#utility.yul\":6180:6298   */\n      pop\n        /* \"#utility.yul\":6337:6339   */\n      0x40\n        /* \"#utility.yul\":6363:6416   */\n      tag_318\n        /* \"#utility.yul\":6408:6415   */\n      dup9\n        /* \"#utility.yul\":6399:6405   */\n      dup3\n        /* \"#utility.yul\":6388:6397   */\n      dup10\n        /* \"#utility.yul\":6384:6406   */\n      add\n        /* \"#utility.yul\":6363:6416   */\n      tag_248\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6353:6416   */\n      swap4\n      pop\n        /* \"#utility.yul\":6308:6426   */\n      pop\n        /* \"#utility.yul\":6465:6467   */\n      0x60\n        /* \"#utility.yul\":6491:6544   */\n      tag_319\n        /* \"#utility.yul\":6536:6543   */\n      dup9\n        /* \"#utility.yul\":6527:6533   */\n      dup3\n        /* \"#utility.yul\":6516:6525   */\n      dup10\n        /* \"#utility.yul\":6512:6534   */\n      add\n        /* \"#utility.yul\":6491:6544   */\n      tag_248\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6481:6544   */\n      swap3\n      pop\n        /* \"#utility.yul\":6436:6554   */\n      pop\n        /* \"#utility.yul\":6621:6624   */\n      0x80\n        /* \"#utility.yul\":6610:6619   */\n      dup7\n        /* \"#utility.yul\":6606:6625   */\n      add\n        /* \"#utility.yul\":6593:6626   */\n      calldataload\n        /* \"#utility.yul\":6653:6671   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6645:6651   */\n      dup2\n        /* \"#utility.yul\":6642:6672   */\n      gt\n        /* \"#utility.yul\":6639:6756   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":6675:6754   */\n      tag_321\n      tag_305\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6639:6756   */\n    tag_320:\n        /* \"#utility.yul\":6780:6842   */\n      tag_322\n        /* \"#utility.yul\":6834:6841   */\n      dup9\n        /* \"#utility.yul\":6825:6831   */\n      dup3\n        /* \"#utility.yul\":6814:6823   */\n      dup10\n        /* \"#utility.yul\":6810:6832   */\n      add\n        /* \"#utility.yul\":6780:6842   */\n      tag_284\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6770:6842   */\n      swap2\n      pop\n        /* \"#utility.yul\":6564:6852   */\n      pop\n        /* \"#utility.yul\":5770:6859   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6865:7333   */\n    tag_42:\n        /* \"#utility.yul\":6930:6936   */\n      0x00\n        /* \"#utility.yul\":6938:6944   */\n      dup1\n        /* \"#utility.yul\":6987:6989   */\n      0x40\n        /* \"#utility.yul\":6975:6984   */\n      dup4\n        /* \"#utility.yul\":6966:6973   */\n      dup6\n        /* \"#utility.yul\":6962:6985   */\n      sub\n        /* \"#utility.yul\":6958:6990   */\n      slt\n        /* \"#utility.yul\":6955:7074   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":6993:7072   */\n      tag_325\n      tag_295\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":6955:7074   */\n    tag_324:\n        /* \"#utility.yul\":7113:7114   */\n      0x00\n        /* \"#utility.yul\":7138:7191   */\n      tag_326\n        /* \"#utility.yul\":7183:7190   */\n      dup6\n        /* \"#utility.yul\":7174:7180   */\n      dup3\n        /* \"#utility.yul\":7163:7172   */\n      dup7\n        /* \"#utility.yul\":7159:7181   */\n      add\n        /* \"#utility.yul\":7138:7191   */\n      tag_236\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7128:7191   */\n      swap3\n      pop\n        /* \"#utility.yul\":7084:7201   */\n      pop\n        /* \"#utility.yul\":7240:7242   */\n      0x20\n        /* \"#utility.yul\":7266:7316   */\n      tag_327\n        /* \"#utility.yul\":7308:7315   */\n      dup6\n        /* \"#utility.yul\":7299:7305   */\n      dup3\n        /* \"#utility.yul\":7288:7297   */\n      dup7\n        /* \"#utility.yul\":7284:7306   */\n      add\n        /* \"#utility.yul\":7266:7316   */\n      tag_273\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7256:7316   */\n      swap2\n      pop\n        /* \"#utility.yul\":7211:7326   */\n      pop\n        /* \"#utility.yul\":6865:7333   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7339:7813   */\n    tag_14:\n        /* \"#utility.yul\":7407:7413   */\n      0x00\n        /* \"#utility.yul\":7415:7421   */\n      dup1\n        /* \"#utility.yul\":7464:7466   */\n      0x40\n        /* \"#utility.yul\":7452:7461   */\n      dup4\n        /* \"#utility.yul\":7443:7450   */\n      dup6\n        /* \"#utility.yul\":7439:7462   */\n      sub\n        /* \"#utility.yul\":7435:7467   */\n      slt\n        /* \"#utility.yul\":7432:7551   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":7470:7549   */\n      tag_330\n      tag_295\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7432:7551   */\n    tag_329:\n        /* \"#utility.yul\":7590:7591   */\n      0x00\n        /* \"#utility.yul\":7615:7668   */\n      tag_331\n        /* \"#utility.yul\":7660:7667   */\n      dup6\n        /* \"#utility.yul\":7651:7657   */\n      dup3\n        /* \"#utility.yul\":7640:7649   */\n      dup7\n        /* \"#utility.yul\":7636:7658   */\n      add\n        /* \"#utility.yul\":7615:7668   */\n      tag_236\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":7605:7668   */\n      swap3\n      pop\n        /* \"#utility.yul\":7561:7678   */\n      pop\n        /* \"#utility.yul\":7717:7719   */\n      0x20\n        /* \"#utility.yul\":7743:7796   */\n      tag_332\n        /* \"#utility.yul\":7788:7795   */\n      dup6\n        /* \"#utility.yul\":7779:7785   */\n      dup3\n        /* \"#utility.yul\":7768:7777   */\n      dup7\n        /* \"#utility.yul\":7764:7786   */\n      add\n        /* \"#utility.yul\":7743:7796   */\n      tag_248\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7733:7796   */\n      swap2\n      pop\n        /* \"#utility.yul\":7688:7806   */\n      pop\n        /* \"#utility.yul\":7339:7813   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:8713   */\n    tag_36:\n        /* \"#utility.yul\":7937:7943   */\n      0x00\n        /* \"#utility.yul\":7945:7951   */\n      dup1\n        /* \"#utility.yul\":7994:7996   */\n      0x40\n        /* \"#utility.yul\":7982:7991   */\n      dup4\n        /* \"#utility.yul\":7973:7980   */\n      dup6\n        /* \"#utility.yul\":7969:7992   */\n      sub\n        /* \"#utility.yul\":7965:7997   */\n      slt\n        /* \"#utility.yul\":7962:8081   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":8000:8079   */\n      tag_335\n      tag_295\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7962:8081   */\n    tag_334:\n        /* \"#utility.yul\":8148:8149   */\n      0x00\n        /* \"#utility.yul\":8137:8146   */\n      dup4\n        /* \"#utility.yul\":8133:8150   */\n      add\n        /* \"#utility.yul\":8120:8151   */\n      calldataload\n        /* \"#utility.yul\":8178:8196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8170:8176   */\n      dup2\n        /* \"#utility.yul\":8167:8197   */\n      gt\n        /* \"#utility.yul\":8164:8281   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":8200:8279   */\n      tag_337\n      tag_305\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":8164:8281   */\n    tag_336:\n        /* \"#utility.yul\":8305:8383   */\n      tag_338\n        /* \"#utility.yul\":8375:8382   */\n      dup6\n        /* \"#utility.yul\":8366:8372   */\n      dup3\n        /* \"#utility.yul\":8355:8364   */\n      dup7\n        /* \"#utility.yul\":8351:8373   */\n      add\n        /* \"#utility.yul\":8305:8383   */\n      tag_262\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8295:8383   */\n      swap3\n      pop\n        /* \"#utility.yul\":8091:8393   */\n      pop\n        /* \"#utility.yul\":8460:8462   */\n      0x20\n        /* \"#utility.yul\":8449:8458   */\n      dup4\n        /* \"#utility.yul\":8445:8463   */\n      add\n        /* \"#utility.yul\":8432:8464   */\n      calldataload\n        /* \"#utility.yul\":8491:8509   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8483:8489   */\n      dup2\n        /* \"#utility.yul\":8480:8510   */\n      gt\n        /* \"#utility.yul\":8477:8594   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":8513:8592   */\n      tag_340\n      tag_305\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8477:8594   */\n    tag_339:\n        /* \"#utility.yul\":8618:8696   */\n      tag_341\n        /* \"#utility.yul\":8688:8695   */\n      dup6\n        /* \"#utility.yul\":8679:8685   */\n      dup3\n        /* \"#utility.yul\":8668:8677   */\n      dup7\n        /* \"#utility.yul\":8664:8686   */\n      add\n        /* \"#utility.yul\":8618:8696   */\n      tag_268\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8608:8696   */\n      swap2\n      pop\n        /* \"#utility.yul\":8403:8706   */\n      pop\n        /* \"#utility.yul\":7819:8713   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8719:9046   */\n    tag_20:\n        /* \"#utility.yul\":8777:8783   */\n      0x00\n        /* \"#utility.yul\":8826:8828   */\n      0x20\n        /* \"#utility.yul\":8814:8823   */\n      dup3\n        /* \"#utility.yul\":8805:8812   */\n      dup5\n        /* \"#utility.yul\":8801:8824   */\n      sub\n        /* \"#utility.yul\":8797:8829   */\n      slt\n        /* \"#utility.yul\":8794:8913   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":8832:8911   */\n      tag_344\n      tag_295\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":8794:8913   */\n    tag_343:\n        /* \"#utility.yul\":8952:8953   */\n      0x00\n        /* \"#utility.yul\":8977:9029   */\n      tag_345\n        /* \"#utility.yul\":9021:9028   */\n      dup5\n        /* \"#utility.yul\":9012:9018   */\n      dup3\n        /* \"#utility.yul\":9001:9010   */\n      dup6\n        /* \"#utility.yul\":8997:9019   */\n      add\n        /* \"#utility.yul\":8977:9029   */\n      tag_277\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8967:9029   */\n      swap2\n      pop\n        /* \"#utility.yul\":8923:9039   */\n      pop\n        /* \"#utility.yul\":8719:9046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9052:9401   */\n    tag_178:\n        /* \"#utility.yul\":9121:9127   */\n      0x00\n        /* \"#utility.yul\":9170:9172   */\n      0x20\n        /* \"#utility.yul\":9158:9167   */\n      dup3\n        /* \"#utility.yul\":9149:9156   */\n      dup5\n        /* \"#utility.yul\":9145:9168   */\n      sub\n        /* \"#utility.yul\":9141:9173   */\n      slt\n        /* \"#utility.yul\":9138:9257   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":9176:9255   */\n      tag_348\n      tag_295\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":9138:9257   */\n    tag_347:\n        /* \"#utility.yul\":9296:9297   */\n      0x00\n        /* \"#utility.yul\":9321:9384   */\n      tag_349\n        /* \"#utility.yul\":9376:9383   */\n      dup5\n        /* \"#utility.yul\":9367:9373   */\n      dup3\n        /* \"#utility.yul\":9356:9365   */\n      dup6\n        /* \"#utility.yul\":9352:9374   */\n      add\n        /* \"#utility.yul\":9321:9384   */\n      tag_281\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9311:9384   */\n      swap2\n      pop\n        /* \"#utility.yul\":9267:9394   */\n      pop\n        /* \"#utility.yul\":9052:9401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9407:9736   */\n    tag_26:\n        /* \"#utility.yul\":9466:9472   */\n      0x00\n        /* \"#utility.yul\":9515:9517   */\n      0x20\n        /* \"#utility.yul\":9503:9512   */\n      dup3\n        /* \"#utility.yul\":9494:9501   */\n      dup5\n        /* \"#utility.yul\":9490:9513   */\n      sub\n        /* \"#utility.yul\":9486:9518   */\n      slt\n        /* \"#utility.yul\":9483:9602   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":9521:9600   */\n      tag_352\n      tag_295\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9483:9602   */\n    tag_351:\n        /* \"#utility.yul\":9641:9642   */\n      0x00\n        /* \"#utility.yul\":9666:9719   */\n      tag_353\n        /* \"#utility.yul\":9711:9718   */\n      dup5\n        /* \"#utility.yul\":9702:9708   */\n      dup3\n        /* \"#utility.yul\":9691:9700   */\n      dup6\n        /* \"#utility.yul\":9687:9709   */\n      add\n        /* \"#utility.yul\":9666:9719   */\n      tag_248\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":9656:9719   */\n      swap2\n      pop\n        /* \"#utility.yul\":9612:9729   */\n      pop\n        /* \"#utility.yul\":9407:9736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9742:9921   */\n    tag_354:\n        /* \"#utility.yul\":9811:9821   */\n      0x00\n        /* \"#utility.yul\":9832:9878   */\n      tag_356\n        /* \"#utility.yul\":9874:9877   */\n      dup4\n        /* \"#utility.yul\":9866:9872   */\n      dup4\n        /* \"#utility.yul\":9832:9878   */\n      tag_357\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9910:9914   */\n      0x20\n        /* \"#utility.yul\":9905:9908   */\n      dup4\n        /* \"#utility.yul\":9901:9915   */\n      add\n        /* \"#utility.yul\":9887:9915   */\n      swap1\n      pop\n        /* \"#utility.yul\":9742:9921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9927:10045   */\n    tag_358:\n        /* \"#utility.yul\":10014:10038   */\n      tag_360\n        /* \"#utility.yul\":10032:10037   */\n      dup2\n        /* \"#utility.yul\":10014:10038   */\n      tag_361\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":10009:10012   */\n      dup3\n        /* \"#utility.yul\":10002:10039   */\n      mstore\n        /* \"#utility.yul\":9927:10045   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10081:10813   */\n    tag_362:\n        /* \"#utility.yul\":10200:10203   */\n      0x00\n        /* \"#utility.yul\":10229:10283   */\n      tag_364\n        /* \"#utility.yul\":10277:10282   */\n      dup3\n        /* \"#utility.yul\":10229:10283   */\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10299:10385   */\n      tag_366\n        /* \"#utility.yul\":10378:10384   */\n      dup2\n        /* \"#utility.yul\":10373:10376   */\n      dup6\n        /* \"#utility.yul\":10299:10385   */\n      tag_367\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10292:10385   */\n      swap4\n      pop\n        /* \"#utility.yul\":10409:10465   */\n      tag_368\n        /* \"#utility.yul\":10459:10464   */\n      dup4\n        /* \"#utility.yul\":10409:10465   */\n      tag_369\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10488:10495   */\n      dup1\n        /* \"#utility.yul\":10519:10520   */\n      0x00\n        /* \"#utility.yul\":10504:10788   */\n    tag_370:\n        /* \"#utility.yul\":10529:10535   */\n      dup4\n        /* \"#utility.yul\":10526:10527   */\n      dup2\n        /* \"#utility.yul\":10523:10536   */\n      lt\n        /* \"#utility.yul\":10504:10788   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":10605:10611   */\n      dup2\n        /* \"#utility.yul\":10599:10612   */\n      mload\n        /* \"#utility.yul\":10632:10695   */\n      tag_373\n        /* \"#utility.yul\":10691:10694   */\n      dup9\n        /* \"#utility.yul\":10676:10689   */\n      dup3\n        /* \"#utility.yul\":10632:10695   */\n      tag_354\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10625:10695   */\n      swap8\n      pop\n        /* \"#utility.yul\":10718:10778   */\n      tag_374\n        /* \"#utility.yul\":10771:10777   */\n      dup4\n        /* \"#utility.yul\":10718:10778   */\n      tag_375\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":10708:10778   */\n      swap3\n      pop\n        /* \"#utility.yul\":10564:10788   */\n      pop\n        /* \"#utility.yul\":10551:10552   */\n      0x01\n        /* \"#utility.yul\":10548:10549   */\n      dup2\n        /* \"#utility.yul\":10544:10553   */\n      add\n        /* \"#utility.yul\":10539:10553   */\n      swap1\n      pop\n        /* \"#utility.yul\":10504:10788   */\n      jump(tag_370)\n    tag_372:\n        /* \"#utility.yul\":10508:10522   */\n      pop\n        /* \"#utility.yul\":10804:10807   */\n      dup6\n        /* \"#utility.yul\":10797:10807   */\n      swap4\n      pop\n        /* \"#utility.yul\":10205:10813   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10081:10813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10819:10928   */\n    tag_376:\n        /* \"#utility.yul\":10900:10921   */\n      tag_378\n        /* \"#utility.yul\":10915:10920   */\n      dup2\n        /* \"#utility.yul\":10900:10921   */\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10895:10898   */\n      dup3\n        /* \"#utility.yul\":10888:10922   */\n      mstore\n        /* \"#utility.yul\":10819:10928   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10934:11294   */\n    tag_380:\n        /* \"#utility.yul\":11020:11023   */\n      0x00\n        /* \"#utility.yul\":11048:11086   */\n      tag_382\n        /* \"#utility.yul\":11080:11085   */\n      dup3\n        /* \"#utility.yul\":11048:11086   */\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11102:11172   */\n      tag_384\n        /* \"#utility.yul\":11165:11171   */\n      dup2\n        /* \"#utility.yul\":11160:11163   */\n      dup6\n        /* \"#utility.yul\":11102:11172   */\n      tag_385\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11095:11172   */\n      swap4\n      pop\n        /* \"#utility.yul\":11181:11233   */\n      tag_386\n        /* \"#utility.yul\":11226:11232   */\n      dup2\n        /* \"#utility.yul\":11221:11224   */\n      dup6\n        /* \"#utility.yul\":11214:11218   */\n      0x20\n        /* \"#utility.yul\":11207:11212   */\n      dup7\n        /* \"#utility.yul\":11203:11219   */\n      add\n        /* \"#utility.yul\":11181:11233   */\n      tag_387\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11258:11287   */\n      tag_388\n        /* \"#utility.yul\":11280:11286   */\n      dup2\n        /* \"#utility.yul\":11258:11287   */\n      tag_389\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11253:11256   */\n      dup5\n        /* \"#utility.yul\":11249:11288   */\n      add\n        /* \"#utility.yul\":11242:11288   */\n      swap2\n      pop\n        /* \"#utility.yul\":11024:11294   */\n      pop\n        /* \"#utility.yul\":10934:11294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11300:11664   */\n    tag_390:\n        /* \"#utility.yul\":11388:11391   */\n      0x00\n        /* \"#utility.yul\":11416:11455   */\n      tag_392\n        /* \"#utility.yul\":11449:11454   */\n      dup3\n        /* \"#utility.yul\":11416:11455   */\n      tag_393\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11471:11542   */\n      tag_394\n        /* \"#utility.yul\":11535:11541   */\n      dup2\n        /* \"#utility.yul\":11530:11533   */\n      dup6\n        /* \"#utility.yul\":11471:11542   */\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11464:11542   */\n      swap4\n      pop\n        /* \"#utility.yul\":11551:11603   */\n      tag_396\n        /* \"#utility.yul\":11596:11602   */\n      dup2\n        /* \"#utility.yul\":11591:11594   */\n      dup6\n        /* \"#utility.yul\":11584:11588   */\n      0x20\n        /* \"#utility.yul\":11577:11582   */\n      dup7\n        /* \"#utility.yul\":11573:11589   */\n      add\n        /* \"#utility.yul\":11551:11603   */\n      tag_387\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":11628:11657   */\n      tag_397\n        /* \"#utility.yul\":11650:11656   */\n      dup2\n        /* \"#utility.yul\":11628:11657   */\n      tag_389\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":11623:11626   */\n      dup5\n        /* \"#utility.yul\":11619:11658   */\n      add\n        /* \"#utility.yul\":11612:11658   */\n      swap2\n      pop\n        /* \"#utility.yul\":11392:11664   */\n      pop\n        /* \"#utility.yul\":11300:11664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11670:12036   */\n    tag_398:\n        /* \"#utility.yul\":11812:11815   */\n      0x00\n        /* \"#utility.yul\":11833:11900   */\n      tag_400\n        /* \"#utility.yul\":11897:11899   */\n      0x28\n        /* \"#utility.yul\":11892:11895   */\n      dup4\n        /* \"#utility.yul\":11833:11900   */\n      tag_395\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":11826:11900   */\n      swap2\n      pop\n        /* \"#utility.yul\":11909:12002   */\n      tag_401\n        /* \"#utility.yul\":11998:12001   */\n      dup3\n        /* \"#utility.yul\":11909:12002   */\n      tag_402\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12027:12029   */\n      0x40\n        /* \"#utility.yul\":12022:12025   */\n      dup3\n        /* \"#utility.yul\":12018:12030   */\n      add\n        /* \"#utility.yul\":12011:12030   */\n      swap1\n      pop\n        /* \"#utility.yul\":11670:12036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12042:12408   */\n    tag_403:\n        /* \"#utility.yul\":12184:12187   */\n      0x00\n        /* \"#utility.yul\":12205:12272   */\n      tag_405\n        /* \"#utility.yul\":12269:12271   */\n      0x2a\n        /* \"#utility.yul\":12264:12267   */\n      dup4\n        /* \"#utility.yul\":12205:12272   */\n      tag_395\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":12198:12272   */\n      swap2\n      pop\n        /* \"#utility.yul\":12281:12374   */\n      tag_406\n        /* \"#utility.yul\":12370:12373   */\n      dup3\n        /* \"#utility.yul\":12281:12374   */\n      tag_407\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":12399:12401   */\n      0x40\n        /* \"#utility.yul\":12394:12397   */\n      dup3\n        /* \"#utility.yul\":12390:12402   */\n      add\n        /* \"#utility.yul\":12383:12402   */\n      swap1\n      pop\n        /* \"#utility.yul\":12042:12408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12414:12780   */\n    tag_408:\n        /* \"#utility.yul\":12556:12559   */\n      0x00\n        /* \"#utility.yul\":12577:12644   */\n      tag_410\n        /* \"#utility.yul\":12641:12643   */\n      0x2e\n        /* \"#utility.yul\":12636:12639   */\n      dup4\n        /* \"#utility.yul\":12577:12644   */\n      tag_395\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":12570:12644   */\n      swap2\n      pop\n        /* \"#utility.yul\":12653:12746   */\n      tag_411\n        /* \"#utility.yul\":12742:12745   */\n      dup3\n        /* \"#utility.yul\":12653:12746   */\n      tag_412\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":12771:12773   */\n      0x40\n        /* \"#utility.yul\":12766:12769   */\n      dup3\n        /* \"#utility.yul\":12762:12774   */\n      add\n        /* \"#utility.yul\":12755:12774   */\n      swap1\n      pop\n        /* \"#utility.yul\":12414:12780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12786:13152   */\n    tag_413:\n        /* \"#utility.yul\":12928:12931   */\n      0x00\n        /* \"#utility.yul\":12949:13016   */\n      tag_415\n        /* \"#utility.yul\":13013:13015   */\n      0x25\n        /* \"#utility.yul\":13008:13011   */\n      dup4\n        /* \"#utility.yul\":12949:13016   */\n      tag_395\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":12942:13016   */\n      swap2\n      pop\n        /* \"#utility.yul\":13025:13118   */\n      tag_416\n        /* \"#utility.yul\":13114:13117   */\n      dup3\n        /* \"#utility.yul\":13025:13118   */\n      tag_417\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":13143:13145   */\n      0x40\n        /* \"#utility.yul\":13138:13141   */\n      dup3\n        /* \"#utility.yul\":13134:13146   */\n      add\n        /* \"#utility.yul\":13127:13146   */\n      swap1\n      pop\n        /* \"#utility.yul\":12786:13152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13158:13524   */\n    tag_418:\n        /* \"#utility.yul\":13300:13303   */\n      0x00\n        /* \"#utility.yul\":13321:13388   */\n      tag_420\n        /* \"#utility.yul\":13385:13387   */\n      0x2a\n        /* \"#utility.yul\":13380:13383   */\n      dup4\n        /* \"#utility.yul\":13321:13388   */\n      tag_395\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":13314:13388   */\n      swap2\n      pop\n        /* \"#utility.yul\":13397:13490   */\n      tag_421\n        /* \"#utility.yul\":13486:13489   */\n      dup3\n        /* \"#utility.yul\":13397:13490   */\n      tag_422\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":13515:13517   */\n      0x40\n        /* \"#utility.yul\":13510:13513   */\n      dup3\n        /* \"#utility.yul\":13506:13518   */\n      add\n        /* \"#utility.yul\":13499:13518   */\n      swap1\n      pop\n        /* \"#utility.yul\":13158:13524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13530:13896   */\n    tag_423:\n        /* \"#utility.yul\":13672:13675   */\n      0x00\n        /* \"#utility.yul\":13693:13760   */\n      tag_425\n        /* \"#utility.yul\":13757:13759   */\n      0x29\n        /* \"#utility.yul\":13752:13755   */\n      dup4\n        /* \"#utility.yul\":13693:13760   */\n      tag_395\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13686:13760   */\n      swap2\n      pop\n        /* \"#utility.yul\":13769:13862   */\n      tag_426\n        /* \"#utility.yul\":13858:13861   */\n      dup3\n        /* \"#utility.yul\":13769:13862   */\n      tag_427\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":13887:13889   */\n      0x40\n        /* \"#utility.yul\":13882:13885   */\n      dup3\n        /* \"#utility.yul\":13878:13890   */\n      add\n        /* \"#utility.yul\":13871:13890   */\n      swap1\n      pop\n        /* \"#utility.yul\":13530:13896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13902:14268   */\n    tag_428:\n        /* \"#utility.yul\":14044:14047   */\n      0x00\n        /* \"#utility.yul\":14065:14132   */\n      tag_430\n        /* \"#utility.yul\":14129:14131   */\n      0x29\n        /* \"#utility.yul\":14124:14127   */\n      dup4\n        /* \"#utility.yul\":14065:14132   */\n      tag_395\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":14058:14132   */\n      swap2\n      pop\n        /* \"#utility.yul\":14141:14234   */\n      tag_431\n        /* \"#utility.yul\":14230:14233   */\n      dup3\n        /* \"#utility.yul\":14141:14234   */\n      tag_432\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":14259:14261   */\n      0x40\n        /* \"#utility.yul\":14254:14257   */\n      dup3\n        /* \"#utility.yul\":14250:14262   */\n      add\n        /* \"#utility.yul\":14243:14262   */\n      swap1\n      pop\n        /* \"#utility.yul\":13902:14268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14274:14640   */\n    tag_433:\n        /* \"#utility.yul\":14416:14419   */\n      0x00\n        /* \"#utility.yul\":14437:14504   */\n      tag_435\n        /* \"#utility.yul\":14501:14503   */\n      0x28\n        /* \"#utility.yul\":14496:14499   */\n      dup4\n        /* \"#utility.yul\":14437:14504   */\n      tag_395\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14430:14504   */\n      swap2\n      pop\n        /* \"#utility.yul\":14513:14606   */\n      tag_436\n        /* \"#utility.yul\":14602:14605   */\n      dup3\n        /* \"#utility.yul\":14513:14606   */\n      tag_437\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":14631:14633   */\n      0x40\n        /* \"#utility.yul\":14626:14629   */\n      dup3\n        /* \"#utility.yul\":14622:14634   */\n      add\n        /* \"#utility.yul\":14615:14634   */\n      swap1\n      pop\n        /* \"#utility.yul\":14274:14640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14646:15012   */\n    tag_438:\n        /* \"#utility.yul\":14788:14791   */\n      0x00\n        /* \"#utility.yul\":14809:14876   */\n      tag_440\n        /* \"#utility.yul\":14873:14875   */\n      0x34\n        /* \"#utility.yul\":14868:14871   */\n      dup4\n        /* \"#utility.yul\":14809:14876   */\n      tag_395\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":14802:14876   */\n      swap2\n      pop\n        /* \"#utility.yul\":14885:14978   */\n      tag_441\n        /* \"#utility.yul\":14974:14977   */\n      dup3\n        /* \"#utility.yul\":14885:14978   */\n      tag_442\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":15003:15005   */\n      0x40\n        /* \"#utility.yul\":14998:15001   */\n      dup3\n        /* \"#utility.yul\":14994:15006   */\n      add\n        /* \"#utility.yul\":14987:15006   */\n      swap1\n      pop\n        /* \"#utility.yul\":14646:15012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15018:15126   */\n    tag_357:\n        /* \"#utility.yul\":15095:15119   */\n      tag_444\n        /* \"#utility.yul\":15113:15118   */\n      dup2\n        /* \"#utility.yul\":15095:15119   */\n      tag_445\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15090:15093   */\n      dup3\n        /* \"#utility.yul\":15083:15120   */\n      mstore\n        /* \"#utility.yul\":15018:15126   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15132:15250   */\n    tag_446:\n        /* \"#utility.yul\":15219:15243   */\n      tag_448\n        /* \"#utility.yul\":15237:15242   */\n      dup2\n        /* \"#utility.yul\":15219:15243   */\n      tag_445\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":15214:15217   */\n      dup3\n        /* \"#utility.yul\":15207:15244   */\n      mstore\n        /* \"#utility.yul\":15132:15250   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15256:16309   */\n    tag_174:\n        /* \"#utility.yul\":15579:15583   */\n      0x00\n        /* \"#utility.yul\":15617:15620   */\n      0xa0\n        /* \"#utility.yul\":15606:15615   */\n      dup3\n        /* \"#utility.yul\":15602:15621   */\n      add\n        /* \"#utility.yul\":15594:15621   */\n      swap1\n      pop\n        /* \"#utility.yul\":15631:15702   */\n      tag_450\n        /* \"#utility.yul\":15699:15700   */\n      0x00\n        /* \"#utility.yul\":15688:15697   */\n      dup4\n        /* \"#utility.yul\":15684:15701   */\n      add\n        /* \"#utility.yul\":15675:15681   */\n      dup9\n        /* \"#utility.yul\":15631:15702   */\n      tag_358\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":15712:15784   */\n      tag_451\n        /* \"#utility.yul\":15780:15782   */\n      0x20\n        /* \"#utility.yul\":15769:15778   */\n      dup4\n        /* \"#utility.yul\":15765:15783   */\n      add\n        /* \"#utility.yul\":15756:15762   */\n      dup8\n        /* \"#utility.yul\":15712:15784   */\n      tag_358\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":15831:15840   */\n      dup2\n        /* \"#utility.yul\":15825:15829   */\n      dup2\n        /* \"#utility.yul\":15821:15841   */\n      sub\n        /* \"#utility.yul\":15816:15818   */\n      0x40\n        /* \"#utility.yul\":15805:15814   */\n      dup4\n        /* \"#utility.yul\":15801:15819   */\n      add\n        /* \"#utility.yul\":15794:15842   */\n      mstore\n        /* \"#utility.yul\":15859:15967   */\n      tag_452\n        /* \"#utility.yul\":15962:15966   */\n      dup2\n        /* \"#utility.yul\":15953:15959   */\n      dup7\n        /* \"#utility.yul\":15859:15967   */\n      tag_362\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":15851:15967   */\n      swap1\n      pop\n        /* \"#utility.yul\":16014:16023   */\n      dup2\n        /* \"#utility.yul\":16008:16012   */\n      dup2\n        /* \"#utility.yul\":16004:16024   */\n      sub\n        /* \"#utility.yul\":15999:16001   */\n      0x60\n        /* \"#utility.yul\":15988:15997   */\n      dup4\n        /* \"#utility.yul\":15984:16002   */\n      add\n        /* \"#utility.yul\":15977:16025   */\n      mstore\n        /* \"#utility.yul\":16042:16150   */\n      tag_453\n        /* \"#utility.yul\":16145:16149   */\n      dup2\n        /* \"#utility.yul\":16136:16142   */\n      dup6\n        /* \"#utility.yul\":16042:16150   */\n      tag_362\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":16034:16150   */\n      swap1\n      pop\n        /* \"#utility.yul\":16198:16207   */\n      dup2\n        /* \"#utility.yul\":16192:16196   */\n      dup2\n        /* \"#utility.yul\":16188:16208   */\n      sub\n        /* \"#utility.yul\":16182:16185   */\n      0x80\n        /* \"#utility.yul\":16171:16180   */\n      dup4\n        /* \"#utility.yul\":16167:16186   */\n      add\n        /* \"#utility.yul\":16160:16209   */\n      mstore\n        /* \"#utility.yul\":16226:16302   */\n      tag_454\n        /* \"#utility.yul\":16297:16301   */\n      dup2\n        /* \"#utility.yul\":16288:16294   */\n      dup5\n        /* \"#utility.yul\":16226:16302   */\n      tag_380\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":16218:16302   */\n      swap1\n      pop\n        /* \"#utility.yul\":15256:16309   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16315:17066   */\n    tag_205:\n        /* \"#utility.yul\":16538:16542   */\n      0x00\n        /* \"#utility.yul\":16576:16579   */\n      0xa0\n        /* \"#utility.yul\":16565:16574   */\n      dup3\n        /* \"#utility.yul\":16561:16580   */\n      add\n        /* \"#utility.yul\":16553:16580   */\n      swap1\n      pop\n        /* \"#utility.yul\":16590:16661   */\n      tag_456\n        /* \"#utility.yul\":16658:16659   */\n      0x00\n        /* \"#utility.yul\":16647:16656   */\n      dup4\n        /* \"#utility.yul\":16643:16660   */\n      add\n        /* \"#utility.yul\":16634:16640   */\n      dup9\n        /* \"#utility.yul\":16590:16661   */\n      tag_358\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":16671:16743   */\n      tag_457\n        /* \"#utility.yul\":16739:16741   */\n      0x20\n        /* \"#utility.yul\":16728:16737   */\n      dup4\n        /* \"#utility.yul\":16724:16742   */\n      add\n        /* \"#utility.yul\":16715:16721   */\n      dup8\n        /* \"#utility.yul\":16671:16743   */\n      tag_358\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":16753:16825   */\n      tag_458\n        /* \"#utility.yul\":16821:16823   */\n      0x40\n        /* \"#utility.yul\":16810:16819   */\n      dup4\n        /* \"#utility.yul\":16806:16824   */\n      add\n        /* \"#utility.yul\":16797:16803   */\n      dup7\n        /* \"#utility.yul\":16753:16825   */\n      tag_446\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":16835:16907   */\n      tag_459\n        /* \"#utility.yul\":16903:16905   */\n      0x60\n        /* \"#utility.yul\":16892:16901   */\n      dup4\n        /* \"#utility.yul\":16888:16906   */\n      add\n        /* \"#utility.yul\":16879:16885   */\n      dup6\n        /* \"#utility.yul\":16835:16907   */\n      tag_446\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":16955:16964   */\n      dup2\n        /* \"#utility.yul\":16949:16953   */\n      dup2\n        /* \"#utility.yul\":16945:16965   */\n      sub\n        /* \"#utility.yul\":16939:16942   */\n      0x80\n        /* \"#utility.yul\":16928:16937   */\n      dup4\n        /* \"#utility.yul\":16924:16943   */\n      add\n        /* \"#utility.yul\":16917:16966   */\n      mstore\n        /* \"#utility.yul\":16983:17059   */\n      tag_460\n        /* \"#utility.yul\":17054:17058   */\n      dup2\n        /* \"#utility.yul\":17045:17051   */\n      dup5\n        /* \"#utility.yul\":16983:17059   */\n      tag_380\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":16975:17059   */\n      swap1\n      pop\n        /* \"#utility.yul\":16315:17066   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17072:17445   */\n    tag_39:\n        /* \"#utility.yul\":17215:17219   */\n      0x00\n        /* \"#utility.yul\":17253:17255   */\n      0x20\n        /* \"#utility.yul\":17242:17251   */\n      dup3\n        /* \"#utility.yul\":17238:17256   */\n      add\n        /* \"#utility.yul\":17230:17256   */\n      swap1\n      pop\n        /* \"#utility.yul\":17302:17311   */\n      dup2\n        /* \"#utility.yul\":17296:17300   */\n      dup2\n        /* \"#utility.yul\":17292:17312   */\n      sub\n        /* \"#utility.yul\":17288:17289   */\n      0x00\n        /* \"#utility.yul\":17277:17286   */\n      dup4\n        /* \"#utility.yul\":17273:17290   */\n      add\n        /* \"#utility.yul\":17266:17313   */\n      mstore\n        /* \"#utility.yul\":17330:17438   */\n      tag_462\n        /* \"#utility.yul\":17433:17437   */\n      dup2\n        /* \"#utility.yul\":17424:17430   */\n      dup5\n        /* \"#utility.yul\":17330:17438   */\n      tag_362\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":17322:17438   */\n      swap1\n      pop\n        /* \"#utility.yul\":17072:17445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17451:18085   */\n    tag_141:\n        /* \"#utility.yul\":17672:17676   */\n      0x00\n        /* \"#utility.yul\":17710:17712   */\n      0x40\n        /* \"#utility.yul\":17699:17708   */\n      dup3\n        /* \"#utility.yul\":17695:17713   */\n      add\n        /* \"#utility.yul\":17687:17713   */\n      swap1\n      pop\n        /* \"#utility.yul\":17759:17768   */\n      dup2\n        /* \"#utility.yul\":17753:17757   */\n      dup2\n        /* \"#utility.yul\":17749:17769   */\n      sub\n        /* \"#utility.yul\":17745:17746   */\n      0x00\n        /* \"#utility.yul\":17734:17743   */\n      dup4\n        /* \"#utility.yul\":17730:17747   */\n      add\n        /* \"#utility.yul\":17723:17770   */\n      mstore\n        /* \"#utility.yul\":17787:17895   */\n      tag_464\n        /* \"#utility.yul\":17890:17894   */\n      dup2\n        /* \"#utility.yul\":17881:17887   */\n      dup6\n        /* \"#utility.yul\":17787:17895   */\n      tag_362\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":17779:17895   */\n      swap1\n      pop\n        /* \"#utility.yul\":17942:17951   */\n      dup2\n        /* \"#utility.yul\":17936:17940   */\n      dup2\n        /* \"#utility.yul\":17932:17952   */\n      sub\n        /* \"#utility.yul\":17927:17929   */\n      0x20\n        /* \"#utility.yul\":17916:17925   */\n      dup4\n        /* \"#utility.yul\":17912:17930   */\n      add\n        /* \"#utility.yul\":17905:17953   */\n      mstore\n        /* \"#utility.yul\":17970:18078   */\n      tag_465\n        /* \"#utility.yul\":18073:18077   */\n      dup2\n        /* \"#utility.yul\":18064:18070   */\n      dup5\n        /* \"#utility.yul\":17970:18078   */\n      tag_362\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":17962:18078   */\n      swap1\n      pop\n        /* \"#utility.yul\":17451:18085   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18091:18301   */\n    tag_23:\n        /* \"#utility.yul\":18178:18182   */\n      0x00\n        /* \"#utility.yul\":18216:18218   */\n      0x20\n        /* \"#utility.yul\":18205:18214   */\n      dup3\n        /* \"#utility.yul\":18201:18219   */\n      add\n        /* \"#utility.yul\":18193:18219   */\n      swap1\n      pop\n        /* \"#utility.yul\":18229:18294   */\n      tag_467\n        /* \"#utility.yul\":18291:18292   */\n      0x00\n        /* \"#utility.yul\":18280:18289   */\n      dup4\n        /* \"#utility.yul\":18276:18293   */\n      add\n        /* \"#utility.yul\":18267:18273   */\n      dup5\n        /* \"#utility.yul\":18229:18294   */\n      tag_376\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":18091:18301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18307:18620   */\n    tag_29:\n        /* \"#utility.yul\":18420:18424   */\n      0x00\n        /* \"#utility.yul\":18458:18460   */\n      0x20\n        /* \"#utility.yul\":18447:18456   */\n      dup3\n        /* \"#utility.yul\":18443:18461   */\n      add\n        /* \"#utility.yul\":18435:18461   */\n      swap1\n      pop\n        /* \"#utility.yul\":18507:18516   */\n      dup2\n        /* \"#utility.yul\":18501:18505   */\n      dup2\n        /* \"#utility.yul\":18497:18517   */\n      sub\n        /* \"#utility.yul\":18493:18494   */\n      0x00\n        /* \"#utility.yul\":18482:18491   */\n      dup4\n        /* \"#utility.yul\":18478:18495   */\n      add\n        /* \"#utility.yul\":18471:18518   */\n      mstore\n        /* \"#utility.yul\":18535:18613   */\n      tag_469\n        /* \"#utility.yul\":18608:18612   */\n      dup2\n        /* \"#utility.yul\":18599:18605   */\n      dup5\n        /* \"#utility.yul\":18535:18613   */\n      tag_390\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":18527:18613   */\n      swap1\n      pop\n        /* \"#utility.yul\":18307:18620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18626:19045   */\n    tag_194:\n        /* \"#utility.yul\":18792:18796   */\n      0x00\n        /* \"#utility.yul\":18830:18832   */\n      0x20\n        /* \"#utility.yul\":18819:18828   */\n      dup3\n        /* \"#utility.yul\":18815:18833   */\n      add\n        /* \"#utility.yul\":18807:18833   */\n      swap1\n      pop\n        /* \"#utility.yul\":18879:18888   */\n      dup2\n        /* \"#utility.yul\":18873:18877   */\n      dup2\n        /* \"#utility.yul\":18869:18889   */\n      sub\n        /* \"#utility.yul\":18865:18866   */\n      0x00\n        /* \"#utility.yul\":18854:18863   */\n      dup4\n        /* \"#utility.yul\":18850:18867   */\n      add\n        /* \"#utility.yul\":18843:18890   */\n      mstore\n        /* \"#utility.yul\":18907:19038   */\n      tag_471\n        /* \"#utility.yul\":19033:19037   */\n      dup2\n        /* \"#utility.yul\":18907:19038   */\n      tag_398\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":18899:19038   */\n      swap1\n      pop\n        /* \"#utility.yul\":18626:19045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19051:19470   */\n    tag_56:\n        /* \"#utility.yul\":19217:19221   */\n      0x00\n        /* \"#utility.yul\":19255:19257   */\n      0x20\n        /* \"#utility.yul\":19244:19253   */\n      dup3\n        /* \"#utility.yul\":19240:19258   */\n      add\n        /* \"#utility.yul\":19232:19258   */\n      swap1\n      pop\n        /* \"#utility.yul\":19304:19313   */\n      dup2\n        /* \"#utility.yul\":19298:19302   */\n      dup2\n        /* \"#utility.yul\":19294:19314   */\n      sub\n        /* \"#utility.yul\":19290:19291   */\n      0x00\n        /* \"#utility.yul\":19279:19288   */\n      dup4\n        /* \"#utility.yul\":19275:19292   */\n      add\n        /* \"#utility.yul\":19268:19315   */\n      mstore\n        /* \"#utility.yul\":19332:19463   */\n      tag_473\n        /* \"#utility.yul\":19458:19462   */\n      dup2\n        /* \"#utility.yul\":19332:19463   */\n      tag_403\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":19324:19463   */\n      swap1\n      pop\n        /* \"#utility.yul\":19051:19470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19476:19895   */\n    tag_77:\n        /* \"#utility.yul\":19642:19646   */\n      0x00\n        /* \"#utility.yul\":19680:19682   */\n      0x20\n        /* \"#utility.yul\":19669:19678   */\n      dup3\n        /* \"#utility.yul\":19665:19683   */\n      add\n        /* \"#utility.yul\":19657:19683   */\n      swap1\n      pop\n        /* \"#utility.yul\":19729:19738   */\n      dup2\n        /* \"#utility.yul\":19723:19727   */\n      dup2\n        /* \"#utility.yul\":19719:19739   */\n      sub\n        /* \"#utility.yul\":19715:19716   */\n      0x00\n        /* \"#utility.yul\":19704:19713   */\n      dup4\n        /* \"#utility.yul\":19700:19717   */\n      add\n        /* \"#utility.yul\":19693:19740   */\n      mstore\n        /* \"#utility.yul\":19757:19888   */\n      tag_475\n        /* \"#utility.yul\":19883:19887   */\n      dup2\n        /* \"#utility.yul\":19757:19888   */\n      tag_408\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":19749:19888   */\n      swap1\n      pop\n        /* \"#utility.yul\":19476:19895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19901:20320   */\n    tag_123:\n        /* \"#utility.yul\":20067:20071   */\n      0x00\n        /* \"#utility.yul\":20105:20107   */\n      0x20\n        /* \"#utility.yul\":20094:20103   */\n      dup3\n        /* \"#utility.yul\":20090:20108   */\n      add\n        /* \"#utility.yul\":20082:20108   */\n      swap1\n      pop\n        /* \"#utility.yul\":20154:20163   */\n      dup2\n        /* \"#utility.yul\":20148:20152   */\n      dup2\n        /* \"#utility.yul\":20144:20164   */\n      sub\n        /* \"#utility.yul\":20140:20141   */\n      0x00\n        /* \"#utility.yul\":20129:20138   */\n      dup4\n        /* \"#utility.yul\":20125:20142   */\n      add\n        /* \"#utility.yul\":20118:20165   */\n      mstore\n        /* \"#utility.yul\":20182:20313   */\n      tag_477\n        /* \"#utility.yul\":20308:20312   */\n      dup2\n        /* \"#utility.yul\":20182:20313   */\n      tag_413\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":20174:20313   */\n      swap1\n      pop\n        /* \"#utility.yul\":19901:20320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20326:20745   */\n    tag_136:\n        /* \"#utility.yul\":20492:20496   */\n      0x00\n        /* \"#utility.yul\":20530:20532   */\n      0x20\n        /* \"#utility.yul\":20519:20528   */\n      dup3\n        /* \"#utility.yul\":20515:20533   */\n      add\n        /* \"#utility.yul\":20507:20533   */\n      swap1\n      pop\n        /* \"#utility.yul\":20579:20588   */\n      dup2\n        /* \"#utility.yul\":20573:20577   */\n      dup2\n        /* \"#utility.yul\":20569:20589   */\n      sub\n        /* \"#utility.yul\":20565:20566   */\n      0x00\n        /* \"#utility.yul\":20554:20563   */\n      dup4\n        /* \"#utility.yul\":20550:20567   */\n      add\n        /* \"#utility.yul\":20543:20590   */\n      mstore\n        /* \"#utility.yul\":20607:20738   */\n      tag_479\n        /* \"#utility.yul\":20733:20737   */\n      dup2\n        /* \"#utility.yul\":20607:20738   */\n      tag_418\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":20599:20738   */\n      swap1\n      pop\n        /* \"#utility.yul\":20326:20745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20751:21170   */\n    tag_149:\n        /* \"#utility.yul\":20917:20921   */\n      0x00\n        /* \"#utility.yul\":20955:20957   */\n      0x20\n        /* \"#utility.yul\":20944:20953   */\n      dup3\n        /* \"#utility.yul\":20940:20958   */\n      add\n        /* \"#utility.yul\":20932:20958   */\n      swap1\n      pop\n        /* \"#utility.yul\":21004:21013   */\n      dup2\n        /* \"#utility.yul\":20998:21002   */\n      dup2\n        /* \"#utility.yul\":20994:21014   */\n      sub\n        /* \"#utility.yul\":20990:20991   */\n      0x00\n        /* \"#utility.yul\":20979:20988   */\n      dup4\n        /* \"#utility.yul\":20975:20992   */\n      add\n        /* \"#utility.yul\":20968:21015   */\n      mstore\n        /* \"#utility.yul\":21032:21163   */\n      tag_481\n        /* \"#utility.yul\":21158:21162   */\n      dup2\n        /* \"#utility.yul\":21032:21163   */\n      tag_423\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":21024:21163   */\n      swap1\n      pop\n        /* \"#utility.yul\":20751:21170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21176:21595   */\n    tag_83:\n        /* \"#utility.yul\":21342:21346   */\n      0x00\n        /* \"#utility.yul\":21380:21382   */\n      0x20\n        /* \"#utility.yul\":21369:21378   */\n      dup3\n        /* \"#utility.yul\":21365:21383   */\n      add\n        /* \"#utility.yul\":21357:21383   */\n      swap1\n      pop\n        /* \"#utility.yul\":21429:21438   */\n      dup2\n        /* \"#utility.yul\":21423:21427   */\n      dup2\n        /* \"#utility.yul\":21419:21439   */\n      sub\n        /* \"#utility.yul\":21415:21416   */\n      0x00\n        /* \"#utility.yul\":21404:21413   */\n      dup4\n        /* \"#utility.yul\":21400:21417   */\n      add\n        /* \"#utility.yul\":21393:21440   */\n      mstore\n        /* \"#utility.yul\":21457:21588   */\n      tag_483\n        /* \"#utility.yul\":21583:21587   */\n      dup2\n        /* \"#utility.yul\":21457:21588   */\n      tag_428\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":21449:21588   */\n      swap1\n      pop\n        /* \"#utility.yul\":21176:21595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21601:22020   */\n    tag_120:\n        /* \"#utility.yul\":21767:21771   */\n      0x00\n        /* \"#utility.yul\":21805:21807   */\n      0x20\n        /* \"#utility.yul\":21794:21803   */\n      dup3\n        /* \"#utility.yul\":21790:21808   */\n      add\n        /* \"#utility.yul\":21782:21808   */\n      swap1\n      pop\n        /* \"#utility.yul\":21854:21863   */\n      dup2\n        /* \"#utility.yul\":21848:21852   */\n      dup2\n        /* \"#utility.yul\":21844:21864   */\n      sub\n        /* \"#utility.yul\":21840:21841   */\n      0x00\n        /* \"#utility.yul\":21829:21838   */\n      dup4\n        /* \"#utility.yul\":21825:21842   */\n      add\n        /* \"#utility.yul\":21818:21865   */\n      mstore\n        /* \"#utility.yul\":21882:22013   */\n      tag_485\n        /* \"#utility.yul\":22008:22012   */\n      dup2\n        /* \"#utility.yul\":21882:22013   */\n      tag_433\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":21874:22013   */\n      swap1\n      pop\n        /* \"#utility.yul\":21601:22020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22026:22445   */\n    tag_190:\n        /* \"#utility.yul\":22192:22196   */\n      0x00\n        /* \"#utility.yul\":22230:22232   */\n      0x20\n        /* \"#utility.yul\":22219:22228   */\n      dup3\n        /* \"#utility.yul\":22215:22233   */\n      add\n        /* \"#utility.yul\":22207:22233   */\n      swap1\n      pop\n        /* \"#utility.yul\":22279:22288   */\n      dup2\n        /* \"#utility.yul\":22273:22277   */\n      dup2\n        /* \"#utility.yul\":22269:22289   */\n      sub\n        /* \"#utility.yul\":22265:22266   */\n      0x00\n        /* \"#utility.yul\":22254:22263   */\n      dup4\n        /* \"#utility.yul\":22250:22267   */\n      add\n        /* \"#utility.yul\":22243:22290   */\n      mstore\n        /* \"#utility.yul\":22307:22438   */\n      tag_487\n        /* \"#utility.yul\":22433:22437   */\n      dup2\n        /* \"#utility.yul\":22307:22438   */\n      tag_438\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":22299:22438   */\n      swap1\n      pop\n        /* \"#utility.yul\":22026:22445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22451:22673   */\n    tag_17:\n        /* \"#utility.yul\":22544:22548   */\n      0x00\n        /* \"#utility.yul\":22582:22584   */\n      0x20\n        /* \"#utility.yul\":22571:22580   */\n      dup3\n        /* \"#utility.yul\":22567:22585   */\n      add\n        /* \"#utility.yul\":22559:22585   */\n      swap1\n      pop\n        /* \"#utility.yul\":22595:22666   */\n      tag_489\n        /* \"#utility.yul\":22663:22664   */\n      0x00\n        /* \"#utility.yul\":22652:22661   */\n      dup4\n        /* \"#utility.yul\":22648:22665   */\n      add\n        /* \"#utility.yul\":22639:22645   */\n      dup5\n        /* \"#utility.yul\":22595:22666   */\n      tag_446\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":22451:22673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22679:23011   */\n    tag_163:\n        /* \"#utility.yul\":22800:22804   */\n      0x00\n        /* \"#utility.yul\":22838:22840   */\n      0x40\n        /* \"#utility.yul\":22827:22836   */\n      dup3\n        /* \"#utility.yul\":22823:22841   */\n      add\n        /* \"#utility.yul\":22815:22841   */\n      swap1\n      pop\n        /* \"#utility.yul\":22851:22922   */\n      tag_491\n        /* \"#utility.yul\":22919:22920   */\n      0x00\n        /* \"#utility.yul\":22908:22917   */\n      dup4\n        /* \"#utility.yul\":22904:22921   */\n      add\n        /* \"#utility.yul\":22895:22901   */\n      dup6\n        /* \"#utility.yul\":22851:22922   */\n      tag_446\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":22932:23004   */\n      tag_492\n        /* \"#utility.yul\":23000:23002   */\n      0x20\n        /* \"#utility.yul\":22989:22998   */\n      dup4\n        /* \"#utility.yul\":22985:23003   */\n      add\n        /* \"#utility.yul\":22976:22982   */\n      dup5\n        /* \"#utility.yul\":22932:23004   */\n      tag_446\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":22679:23011   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23017:23146   */\n    tag_228:\n        /* \"#utility.yul\":23051:23057   */\n      0x00\n        /* \"#utility.yul\":23078:23098   */\n      tag_494\n      tag_495\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":23068:23098   */\n      swap1\n      pop\n        /* \"#utility.yul\":23107:23140   */\n      tag_496\n        /* \"#utility.yul\":23135:23139   */\n      dup3\n        /* \"#utility.yul\":23127:23133   */\n      dup3\n        /* \"#utility.yul\":23107:23140   */\n      tag_497\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":23017:23146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23152:23227   */\n    tag_495:\n        /* \"#utility.yul\":23185:23191   */\n      0x00\n        /* \"#utility.yul\":23218:23220   */\n      0x40\n        /* \"#utility.yul\":23212:23221   */\n      mload\n        /* \"#utility.yul\":23202:23221   */\n      swap1\n      pop\n        /* \"#utility.yul\":23152:23227   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":23233:23544   */\n    tag_227:\n        /* \"#utility.yul\":23310:23314   */\n      0x00\n        /* \"#utility.yul\":23400:23418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23392:23398   */\n      dup3\n        /* \"#utility.yul\":23389:23419   */\n      gt\n        /* \"#utility.yul\":23386:23442   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":23422:23440   */\n      tag_501\n      tag_86\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":23386:23442   */\n    tag_500:\n        /* \"#utility.yul\":23472:23476   */\n      0x20\n        /* \"#utility.yul\":23464:23470   */\n      dup3\n        /* \"#utility.yul\":23460:23477   */\n      mul\n        /* \"#utility.yul\":23452:23477   */\n      swap1\n      pop\n        /* \"#utility.yul\":23532:23536   */\n      0x20\n        /* \"#utility.yul\":23526:23530   */\n      dup2\n        /* \"#utility.yul\":23522:23537   */\n      add\n        /* \"#utility.yul\":23514:23537   */\n      swap1\n      pop\n        /* \"#utility.yul\":23233:23544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23550:23861   */\n    tag_241:\n        /* \"#utility.yul\":23627:23631   */\n      0x00\n        /* \"#utility.yul\":23717:23735   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23709:23715   */\n      dup3\n        /* \"#utility.yul\":23706:23736   */\n      gt\n        /* \"#utility.yul\":23703:23759   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":23739:23757   */\n      tag_504\n      tag_86\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":23703:23759   */\n    tag_503:\n        /* \"#utility.yul\":23789:23793   */\n      0x20\n        /* \"#utility.yul\":23781:23787   */\n      dup3\n        /* \"#utility.yul\":23777:23794   */\n      mul\n        /* \"#utility.yul\":23769:23794   */\n      swap1\n      pop\n        /* \"#utility.yul\":23849:23853   */\n      0x20\n        /* \"#utility.yul\":23843:23847   */\n      dup2\n        /* \"#utility.yul\":23839:23854   */\n      add\n        /* \"#utility.yul\":23831:23854   */\n      swap1\n      pop\n        /* \"#utility.yul\":23550:23861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23867:24174   */\n    tag_253:\n        /* \"#utility.yul\":23928:23932   */\n      0x00\n        /* \"#utility.yul\":24018:24036   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24010:24016   */\n      dup3\n        /* \"#utility.yul\":24007:24037   */\n      gt\n        /* \"#utility.yul\":24004:24060   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":24040:24058   */\n      tag_507\n      tag_86\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":24004:24060   */\n    tag_506:\n        /* \"#utility.yul\":24078:24107   */\n      tag_508\n        /* \"#utility.yul\":24100:24106   */\n      dup3\n        /* \"#utility.yul\":24078:24107   */\n      tag_389\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":24070:24107   */\n      swap1\n      pop\n        /* \"#utility.yul\":24162:24166   */\n      0x20\n        /* \"#utility.yul\":24156:24160   */\n      dup2\n        /* \"#utility.yul\":24152:24167   */\n      add\n        /* \"#utility.yul\":24144:24167   */\n      swap1\n      pop\n        /* \"#utility.yul\":23867:24174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24180:24312   */\n    tag_369:\n        /* \"#utility.yul\":24247:24251   */\n      0x00\n        /* \"#utility.yul\":24270:24273   */\n      dup2\n        /* \"#utility.yul\":24262:24273   */\n      swap1\n      pop\n        /* \"#utility.yul\":24300:24304   */\n      0x20\n        /* \"#utility.yul\":24295:24298   */\n      dup3\n        /* \"#utility.yul\":24291:24305   */\n      add\n        /* \"#utility.yul\":24283:24305   */\n      swap1\n      pop\n        /* \"#utility.yul\":24180:24312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24318:24432   */\n    tag_365:\n        /* \"#utility.yul\":24385:24391   */\n      0x00\n        /* \"#utility.yul\":24419:24424   */\n      dup2\n        /* \"#utility.yul\":24413:24425   */\n      mload\n        /* \"#utility.yul\":24403:24425   */\n      swap1\n      pop\n        /* \"#utility.yul\":24318:24432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24438:24536   */\n    tag_383:\n        /* \"#utility.yul\":24489:24495   */\n      0x00\n        /* \"#utility.yul\":24523:24528   */\n      dup2\n        /* \"#utility.yul\":24517:24529   */\n      mload\n        /* \"#utility.yul\":24507:24529   */\n      swap1\n      pop\n        /* \"#utility.yul\":24438:24536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24542:24641   */\n    tag_393:\n        /* \"#utility.yul\":24594:24600   */\n      0x00\n        /* \"#utility.yul\":24628:24633   */\n      dup2\n        /* \"#utility.yul\":24622:24634   */\n      mload\n        /* \"#utility.yul\":24612:24634   */\n      swap1\n      pop\n        /* \"#utility.yul\":24542:24641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24647:24760   */\n    tag_375:\n        /* \"#utility.yul\":24717:24721   */\n      0x00\n        /* \"#utility.yul\":24749:24753   */\n      0x20\n        /* \"#utility.yul\":24744:24747   */\n      dup3\n        /* \"#utility.yul\":24740:24754   */\n      add\n        /* \"#utility.yul\":24732:24754   */\n      swap1\n      pop\n        /* \"#utility.yul\":24647:24760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24766:24950   */\n    tag_367:\n        /* \"#utility.yul\":24865:24876   */\n      0x00\n        /* \"#utility.yul\":24899:24905   */\n      dup3\n        /* \"#utility.yul\":24894:24897   */\n      dup3\n        /* \"#utility.yul\":24887:24906   */\n      mstore\n        /* \"#utility.yul\":24939:24943   */\n      0x20\n        /* \"#utility.yul\":24934:24937   */\n      dup3\n        /* \"#utility.yul\":24930:24944   */\n      add\n        /* \"#utility.yul\":24915:24944   */\n      swap1\n      pop\n        /* \"#utility.yul\":24766:24950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24956:25124   */\n    tag_385:\n        /* \"#utility.yul\":25039:25050   */\n      0x00\n        /* \"#utility.yul\":25073:25079   */\n      dup3\n        /* \"#utility.yul\":25068:25071   */\n      dup3\n        /* \"#utility.yul\":25061:25080   */\n      mstore\n        /* \"#utility.yul\":25113:25117   */\n      0x20\n        /* \"#utility.yul\":25108:25111   */\n      dup3\n        /* \"#utility.yul\":25104:25118   */\n      add\n        /* \"#utility.yul\":25089:25118   */\n      swap1\n      pop\n        /* \"#utility.yul\":24956:25124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25130:25299   */\n    tag_395:\n        /* \"#utility.yul\":25214:25225   */\n      0x00\n        /* \"#utility.yul\":25248:25254   */\n      dup3\n        /* \"#utility.yul\":25243:25246   */\n      dup3\n        /* \"#utility.yul\":25236:25255   */\n      mstore\n        /* \"#utility.yul\":25288:25292   */\n      0x20\n        /* \"#utility.yul\":25283:25286   */\n      dup3\n        /* \"#utility.yul\":25279:25293   */\n      add\n        /* \"#utility.yul\":25264:25293   */\n      swap1\n      pop\n        /* \"#utility.yul\":25130:25299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25305:25610   */\n    tag_138:\n        /* \"#utility.yul\":25345:25348   */\n      0x00\n        /* \"#utility.yul\":25364:25384   */\n      tag_518\n        /* \"#utility.yul\":25382:25383   */\n      dup3\n        /* \"#utility.yul\":25364:25384   */\n      tag_445\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":25359:25384   */\n      swap2\n      pop\n        /* \"#utility.yul\":25398:25418   */\n      tag_519\n        /* \"#utility.yul\":25416:25417   */\n      dup4\n        /* \"#utility.yul\":25398:25418   */\n      tag_445\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":25393:25418   */\n      swap3\n      pop\n        /* \"#utility.yul\":25552:25553   */\n      dup3\n        /* \"#utility.yul\":25484:25550   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25480:25554   */\n      sub\n        /* \"#utility.yul\":25477:25478   */\n      dup3\n        /* \"#utility.yul\":25474:25555   */\n      gt\n        /* \"#utility.yul\":25471:25578   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":25558:25576   */\n      tag_521\n      tag_522\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":25471:25578   */\n    tag_520:\n        /* \"#utility.yul\":25602:25603   */\n      dup3\n        /* \"#utility.yul\":25599:25600   */\n      dup3\n        /* \"#utility.yul\":25595:25604   */\n      add\n        /* \"#utility.yul\":25588:25604   */\n      swap1\n      pop\n        /* \"#utility.yul\":25305:25610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25616:25712   */\n    tag_361:\n        /* \"#utility.yul\":25653:25660   */\n      0x00\n        /* \"#utility.yul\":25682:25706   */\n      tag_524\n        /* \"#utility.yul\":25700:25705   */\n      dup3\n        /* \"#utility.yul\":25682:25706   */\n      tag_525\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":25671:25706   */\n      swap1\n      pop\n        /* \"#utility.yul\":25616:25712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25718:25808   */\n    tag_379:\n        /* \"#utility.yul\":25752:25759   */\n      0x00\n        /* \"#utility.yul\":25795:25800   */\n      dup2\n        /* \"#utility.yul\":25788:25801   */\n      iszero\n        /* \"#utility.yul\":25781:25802   */\n      iszero\n        /* \"#utility.yul\":25770:25802   */\n      swap1\n      pop\n        /* \"#utility.yul\":25718:25808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25814:25963   */\n    tag_527:\n        /* \"#utility.yul\":25850:25857   */\n      0x00\n        /* \"#utility.yul\":25890:25956   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25883:25888   */\n      dup3\n        /* \"#utility.yul\":25879:25957   */\n      and\n        /* \"#utility.yul\":25868:25957   */\n      swap1\n      pop\n        /* \"#utility.yul\":25814:25963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25969:26095   */\n    tag_525:\n        /* \"#utility.yul\":26006:26013   */\n      0x00\n        /* \"#utility.yul\":26046:26088   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26039:26044   */\n      dup3\n        /* \"#utility.yul\":26035:26089   */\n      and\n        /* \"#utility.yul\":26024:26089   */\n      swap1\n      pop\n        /* \"#utility.yul\":25969:26095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26101:26178   */\n    tag_445:\n        /* \"#utility.yul\":26138:26145   */\n      0x00\n        /* \"#utility.yul\":26167:26172   */\n      dup2\n        /* \"#utility.yul\":26156:26172   */\n      swap1\n      pop\n        /* \"#utility.yul\":26101:26178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26184:26338   */\n    tag_258:\n        /* \"#utility.yul\":26268:26274   */\n      dup3\n        /* \"#utility.yul\":26263:26266   */\n      dup2\n        /* \"#utility.yul\":26258:26261   */\n      dup4\n        /* \"#utility.yul\":26245:26275   */\n      calldatacopy\n        /* \"#utility.yul\":26330:26331   */\n      0x00\n        /* \"#utility.yul\":26321:26327   */\n      dup4\n        /* \"#utility.yul\":26316:26319   */\n      dup4\n        /* \"#utility.yul\":26312:26328   */\n      add\n        /* \"#utility.yul\":26305:26332   */\n      mstore\n        /* \"#utility.yul\":26184:26338   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26344:26651   */\n    tag_387:\n        /* \"#utility.yul\":26412:26413   */\n      0x00\n        /* \"#utility.yul\":26422:26535   */\n    tag_533:\n        /* \"#utility.yul\":26436:26442   */\n      dup4\n        /* \"#utility.yul\":26433:26434   */\n      dup2\n        /* \"#utility.yul\":26430:26443   */\n      lt\n        /* \"#utility.yul\":26422:26535   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":26521:26522   */\n      dup1\n        /* \"#utility.yul\":26516:26519   */\n      dup3\n        /* \"#utility.yul\":26512:26523   */\n      add\n        /* \"#utility.yul\":26506:26524   */\n      mload\n        /* \"#utility.yul\":26502:26503   */\n      dup2\n        /* \"#utility.yul\":26497:26500   */\n      dup5\n        /* \"#utility.yul\":26493:26504   */\n      add\n        /* \"#utility.yul\":26486:26525   */\n      mstore\n        /* \"#utility.yul\":26458:26460   */\n      0x20\n        /* \"#utility.yul\":26455:26456   */\n      dup2\n        /* \"#utility.yul\":26451:26461   */\n      add\n        /* \"#utility.yul\":26446:26461   */\n      swap1\n      pop\n        /* \"#utility.yul\":26422:26535   */\n      jump(tag_533)\n    tag_535:\n        /* \"#utility.yul\":26553:26559   */\n      dup4\n        /* \"#utility.yul\":26550:26551   */\n      dup2\n        /* \"#utility.yul\":26547:26560   */\n      gt\n        /* \"#utility.yul\":26544:26645   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":26633:26634   */\n      0x00\n        /* \"#utility.yul\":26624:26630   */\n      dup5\n        /* \"#utility.yul\":26619:26622   */\n      dup5\n        /* \"#utility.yul\":26615:26631   */\n      add\n        /* \"#utility.yul\":26608:26635   */\n      mstore\n        /* \"#utility.yul\":26544:26645   */\n    tag_536:\n        /* \"#utility.yul\":26393:26651   */\n      pop\n        /* \"#utility.yul\":26344:26651   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26657:26977   */\n    tag_64:\n        /* \"#utility.yul\":26701:26707   */\n      0x00\n        /* \"#utility.yul\":26738:26739   */\n      0x02\n        /* \"#utility.yul\":26732:26736   */\n      dup3\n        /* \"#utility.yul\":26728:26740   */\n      div\n        /* \"#utility.yul\":26718:26740   */\n      swap1\n      pop\n        /* \"#utility.yul\":26785:26786   */\n      0x01\n        /* \"#utility.yul\":26779:26783   */\n      dup3\n        /* \"#utility.yul\":26775:26787   */\n      and\n        /* \"#utility.yul\":26806:26824   */\n      dup1\n        /* \"#utility.yul\":26796:26877   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":26862:26866   */\n      0x7f\n        /* \"#utility.yul\":26854:26860   */\n      dup3\n        /* \"#utility.yul\":26850:26867   */\n      and\n        /* \"#utility.yul\":26840:26867   */\n      swap2\n      pop\n        /* \"#utility.yul\":26796:26877   */\n    tag_538:\n        /* \"#utility.yul\":26924:26926   */\n      0x20\n        /* \"#utility.yul\":26916:26922   */\n      dup3\n        /* \"#utility.yul\":26913:26927   */\n      lt\n        /* \"#utility.yul\":26893:26911   */\n      dup2\n        /* \"#utility.yul\":26890:26928   */\n      eq\n        /* \"#utility.yul\":26887:26971   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":26943:26961   */\n      tag_540\n      tag_541\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":26887:26971   */\n    tag_539:\n        /* \"#utility.yul\":26708:26977   */\n      pop\n        /* \"#utility.yul\":26657:26977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26983:27264   */\n    tag_497:\n        /* \"#utility.yul\":27066:27093   */\n      tag_543\n        /* \"#utility.yul\":27088:27092   */\n      dup3\n        /* \"#utility.yul\":27066:27093   */\n      tag_389\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":27058:27064   */\n      dup2\n        /* \"#utility.yul\":27054:27094   */\n      add\n        /* \"#utility.yul\":27196:27202   */\n      dup2\n        /* \"#utility.yul\":27184:27194   */\n      dup2\n        /* \"#utility.yul\":27181:27203   */\n      lt\n        /* \"#utility.yul\":27160:27178   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":27148:27158   */\n      dup3\n        /* \"#utility.yul\":27145:27179   */\n      gt\n        /* \"#utility.yul\":27142:27204   */\n      or\n        /* \"#utility.yul\":27139:27227   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":27207:27225   */\n      tag_545\n      tag_86\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":27139:27227   */\n    tag_544:\n        /* \"#utility.yul\":27247:27257   */\n      dup1\n        /* \"#utility.yul\":27243:27245   */\n      0x40\n        /* \"#utility.yul\":27236:27258   */\n      mstore\n        /* \"#utility.yul\":27026:27264   */\n      pop\n        /* \"#utility.yul\":26983:27264   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27270:27503   */\n    tag_100:\n        /* \"#utility.yul\":27309:27312   */\n      0x00\n        /* \"#utility.yul\":27332:27356   */\n      tag_547\n        /* \"#utility.yul\":27350:27355   */\n      dup3\n        /* \"#utility.yul\":27332:27356   */\n      tag_445\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":27323:27356   */\n      swap2\n      pop\n        /* \"#utility.yul\":27378:27444   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":27371:27376   */\n      dup3\n        /* \"#utility.yul\":27368:27445   */\n      eq\n        /* \"#utility.yul\":27365:27468   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":27448:27466   */\n      tag_549\n      tag_522\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":27365:27468   */\n    tag_548:\n        /* \"#utility.yul\":27495:27496   */\n      0x01\n        /* \"#utility.yul\":27488:27493   */\n      dup3\n        /* \"#utility.yul\":27484:27497   */\n      add\n        /* \"#utility.yul\":27477:27497   */\n      swap1\n      pop\n        /* \"#utility.yul\":27270:27503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27509:27689   */\n    tag_522:\n        /* \"#utility.yul\":27557:27634   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27554:27555   */\n      0x00\n        /* \"#utility.yul\":27547:27635   */\n      mstore\n        /* \"#utility.yul\":27654:27658   */\n      0x11\n        /* \"#utility.yul\":27651:27652   */\n      0x04\n        /* \"#utility.yul\":27644:27659   */\n      mstore\n        /* \"#utility.yul\":27678:27682   */\n      0x24\n        /* \"#utility.yul\":27675:27676   */\n      0x00\n        /* \"#utility.yul\":27668:27683   */\n      revert\n        /* \"#utility.yul\":27695:27875   */\n    tag_541:\n        /* \"#utility.yul\":27743:27820   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27740:27741   */\n      0x00\n        /* \"#utility.yul\":27733:27821   */\n      mstore\n        /* \"#utility.yul\":27840:27844   */\n      0x22\n        /* \"#utility.yul\":27837:27838   */\n      0x04\n        /* \"#utility.yul\":27830:27845   */\n      mstore\n        /* \"#utility.yul\":27864:27868   */\n      0x24\n        /* \"#utility.yul\":27861:27862   */\n      0x00\n        /* \"#utility.yul\":27854:27869   */\n      revert\n        /* \"#utility.yul\":27881:28061   */\n    tag_94:\n        /* \"#utility.yul\":27929:28006   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27926:27927   */\n      0x00\n        /* \"#utility.yul\":27919:28007   */\n      mstore\n        /* \"#utility.yul\":28026:28030   */\n      0x32\n        /* \"#utility.yul\":28023:28024   */\n      0x04\n        /* \"#utility.yul\":28016:28031   */\n      mstore\n        /* \"#utility.yul\":28050:28054   */\n      0x24\n        /* \"#utility.yul\":28047:28048   */\n      0x00\n        /* \"#utility.yul\":28040:28055   */\n      revert\n        /* \"#utility.yul\":28067:28247   */\n    tag_86:\n        /* \"#utility.yul\":28115:28192   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28112:28113   */\n      0x00\n        /* \"#utility.yul\":28105:28193   */\n      mstore\n        /* \"#utility.yul\":28212:28216   */\n      0x41\n        /* \"#utility.yul\":28209:28210   */\n      0x04\n        /* \"#utility.yul\":28202:28217   */\n      mstore\n        /* \"#utility.yul\":28236:28240   */\n      0x24\n        /* \"#utility.yul\":28233:28234   */\n      0x00\n        /* \"#utility.yul\":28226:28241   */\n      revert\n        /* \"#utility.yul\":28253:28436   */\n    tag_184:\n        /* \"#utility.yul\":28288:28291   */\n      0x00\n        /* \"#utility.yul\":28326:28327   */\n      0x03\n        /* \"#utility.yul\":28308:28324   */\n      returndatasize\n        /* \"#utility.yul\":28305:28328   */\n      gt\n        /* \"#utility.yul\":28302:28430   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":28364:28365   */\n      0x04\n        /* \"#utility.yul\":28361:28362   */\n      0x00\n        /* \"#utility.yul\":28358:28359   */\n      dup1\n        /* \"#utility.yul\":28343:28366   */\n      returndatacopy\n        /* \"#utility.yul\":28386:28420   */\n      tag_556\n        /* \"#utility.yul\":28417:28418   */\n      0x00\n        /* \"#utility.yul\":28411:28419   */\n      mload\n        /* \"#utility.yul\":28386:28420   */\n      tag_557\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":28379:28420   */\n      swap1\n      pop\n        /* \"#utility.yul\":28302:28430   */\n    tag_555:\n        /* \"#utility.yul\":28253:28436   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":28442:28559   */\n    tag_266:\n        /* \"#utility.yul\":28551:28552   */\n      0x00\n        /* \"#utility.yul\":28548:28549   */\n      dup1\n        /* \"#utility.yul\":28541:28553   */\n      revert\n        /* \"#utility.yul\":28565:28682   */\n    tag_231:\n        /* \"#utility.yul\":28674:28675   */\n      0x00\n        /* \"#utility.yul\":28671:28672   */\n      dup1\n        /* \"#utility.yul\":28664:28676   */\n      revert\n        /* \"#utility.yul\":28688:28805   */\n    tag_256:\n        /* \"#utility.yul\":28797:28798   */\n      0x00\n        /* \"#utility.yul\":28794:28795   */\n      dup1\n        /* \"#utility.yul\":28787:28799   */\n      revert\n        /* \"#utility.yul\":28811:28928   */\n    tag_305:\n        /* \"#utility.yul\":28920:28921   */\n      0x00\n        /* \"#utility.yul\":28917:28918   */\n      dup1\n        /* \"#utility.yul\":28910:28922   */\n      revert\n        /* \"#utility.yul\":28934:29051   */\n    tag_295:\n        /* \"#utility.yul\":29043:29044   */\n      0x00\n        /* \"#utility.yul\":29040:29041   */\n      dup1\n        /* \"#utility.yul\":29033:29045   */\n      revert\n        /* \"#utility.yul\":29057:29159   */\n    tag_389:\n        /* \"#utility.yul\":29098:29104   */\n      0x00\n        /* \"#utility.yul\":29149:29151   */\n      0x1f\n        /* \"#utility.yul\":29145:29152   */\n      not\n        /* \"#utility.yul\":29140:29142   */\n      0x1f\n        /* \"#utility.yul\":29133:29138   */\n      dup4\n        /* \"#utility.yul\":29129:29143   */\n      add\n        /* \"#utility.yul\":29125:29153   */\n      and\n        /* \"#utility.yul\":29115:29153   */\n      swap1\n      pop\n        /* \"#utility.yul\":29057:29159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29165:29271   */\n    tag_557:\n        /* \"#utility.yul\":29209:29217   */\n      0x00\n        /* \"#utility.yul\":29258:29263   */\n      dup2\n        /* \"#utility.yul\":29253:29256   */\n      0xe0\n        /* \"#utility.yul\":29249:29264   */\n      shr\n        /* \"#utility.yul\":29228:29264   */\n      swap1\n      pop\n        /* \"#utility.yul\":29165:29271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29277:29504   */\n    tag_402:\n        /* \"#utility.yul\":29417:29451   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":29413:29414   */\n      0x00\n        /* \"#utility.yul\":29405:29411   */\n      dup3\n        /* \"#utility.yul\":29401:29415   */\n      add\n        /* \"#utility.yul\":29394:29452   */\n      mstore\n        /* \"#utility.yul\":29486:29496   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29481:29483   */\n      0x20\n        /* \"#utility.yul\":29473:29479   */\n      dup3\n        /* \"#utility.yul\":29469:29484   */\n      add\n        /* \"#utility.yul\":29462:29497   */\n      mstore\n        /* \"#utility.yul\":29277:29504   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29510:29739   */\n    tag_407:\n        /* \"#utility.yul\":29650:29684   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":29646:29647   */\n      0x00\n        /* \"#utility.yul\":29638:29644   */\n      dup3\n        /* \"#utility.yul\":29634:29648   */\n      add\n        /* \"#utility.yul\":29627:29685   */\n      mstore\n        /* \"#utility.yul\":29719:29731   */\n      0x616c6964206f776e657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29714:29716   */\n      0x20\n        /* \"#utility.yul\":29706:29712   */\n      dup3\n        /* \"#utility.yul\":29702:29717   */\n      add\n        /* \"#utility.yul\":29695:29732   */\n      mstore\n        /* \"#utility.yul\":29510:29739   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29745:29978   */\n    tag_412:\n        /* \"#utility.yul\":29885:29919   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":29881:29882   */\n      0x00\n        /* \"#utility.yul\":29873:29879   */\n      dup3\n        /* \"#utility.yul\":29869:29883   */\n      add\n        /* \"#utility.yul\":29862:29920   */\n      mstore\n        /* \"#utility.yul\":29954:29970   */\n      0x6572206f7220617070726f766564000000000000000000000000000000000000\n        /* \"#utility.yul\":29949:29951   */\n      0x20\n        /* \"#utility.yul\":29941:29947   */\n      dup3\n        /* \"#utility.yul\":29937:29952   */\n      add\n        /* \"#utility.yul\":29930:29971   */\n      mstore\n        /* \"#utility.yul\":29745:29978   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29984:30208   */\n    tag_417:\n        /* \"#utility.yul\":30124:30158   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":30120:30121   */\n      0x00\n        /* \"#utility.yul\":30112:30118   */\n      dup3\n        /* \"#utility.yul\":30108:30122   */\n      add\n        /* \"#utility.yul\":30101:30159   */\n      mstore\n        /* \"#utility.yul\":30193:30200   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30188:30190   */\n      0x20\n        /* \"#utility.yul\":30180:30186   */\n      dup3\n        /* \"#utility.yul\":30176:30191   */\n      add\n        /* \"#utility.yul\":30169:30201   */\n      mstore\n        /* \"#utility.yul\":29984:30208   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30214:30443   */\n    tag_422:\n        /* \"#utility.yul\":30354:30388   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":30350:30351   */\n      0x00\n        /* \"#utility.yul\":30342:30348   */\n      dup3\n        /* \"#utility.yul\":30338:30352   */\n      add\n        /* \"#utility.yul\":30331:30389   */\n      mstore\n        /* \"#utility.yul\":30423:30435   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30418:30420   */\n      0x20\n        /* \"#utility.yul\":30410:30416   */\n      dup3\n        /* \"#utility.yul\":30406:30421   */\n      add\n        /* \"#utility.yul\":30399:30436   */\n      mstore\n        /* \"#utility.yul\":30214:30443   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30449:30677   */\n    tag_427:\n        /* \"#utility.yul\":30589:30623   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":30585:30586   */\n      0x00\n        /* \"#utility.yul\":30577:30583   */\n      dup3\n        /* \"#utility.yul\":30573:30587   */\n      add\n        /* \"#utility.yul\":30566:30624   */\n      mstore\n        /* \"#utility.yul\":30658:30669   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30653:30655   */\n      0x20\n        /* \"#utility.yul\":30645:30651   */\n      dup3\n        /* \"#utility.yul\":30641:30656   */\n      add\n        /* \"#utility.yul\":30634:30670   */\n      mstore\n        /* \"#utility.yul\":30449:30677   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30683:30911   */\n    tag_432:\n        /* \"#utility.yul\":30823:30857   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":30819:30820   */\n      0x00\n        /* \"#utility.yul\":30811:30817   */\n      dup3\n        /* \"#utility.yul\":30807:30821   */\n      add\n        /* \"#utility.yul\":30800:30858   */\n      mstore\n        /* \"#utility.yul\":30892:30903   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30887:30889   */\n      0x20\n        /* \"#utility.yul\":30879:30885   */\n      dup3\n        /* \"#utility.yul\":30875:30890   */\n      add\n        /* \"#utility.yul\":30868:30904   */\n      mstore\n        /* \"#utility.yul\":30683:30911   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30917:31144   */\n    tag_437:\n        /* \"#utility.yul\":31057:31091   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":31053:31054   */\n      0x00\n        /* \"#utility.yul\":31045:31051   */\n      dup3\n        /* \"#utility.yul\":31041:31055   */\n      add\n        /* \"#utility.yul\":31034:31092   */\n      mstore\n        /* \"#utility.yul\":31126:31136   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31121:31123   */\n      0x20\n        /* \"#utility.yul\":31113:31119   */\n      dup3\n        /* \"#utility.yul\":31109:31124   */\n      add\n        /* \"#utility.yul\":31102:31137   */\n      mstore\n        /* \"#utility.yul\":30917:31144   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31150:31389   */\n    tag_442:\n        /* \"#utility.yul\":31290:31324   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2d45524331313535\n        /* \"#utility.yul\":31286:31287   */\n      0x00\n        /* \"#utility.yul\":31278:31284   */\n      dup3\n        /* \"#utility.yul\":31274:31288   */\n      add\n        /* \"#utility.yul\":31267:31325   */\n      mstore\n        /* \"#utility.yul\":31359:31381   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":31354:31356   */\n      0x20\n        /* \"#utility.yul\":31346:31352   */\n      dup3\n        /* \"#utility.yul\":31342:31357   */\n      add\n        /* \"#utility.yul\":31335:31382   */\n      mstore\n        /* \"#utility.yul\":31150:31389   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31395:32106   */\n    tag_186:\n        /* \"#utility.yul\":31434:31437   */\n      0x00\n        /* \"#utility.yul\":31472:31476   */\n      0x44\n        /* \"#utility.yul\":31454:31470   */\n      returndatasize\n        /* \"#utility.yul\":31451:31477   */\n      lt\n        /* \"#utility.yul\":31448:31487   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":31480:31485   */\n      jump(tag_574)\n        /* \"#utility.yul\":31448:31487   */\n    tag_575:\n        /* \"#utility.yul\":31509:31529   */\n      tag_576\n      tag_495\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":31584:31585   */\n      0x04\n        /* \"#utility.yul\":31566:31582   */\n      returndatasize\n        /* \"#utility.yul\":31562:31586   */\n      sub\n        /* \"#utility.yul\":31559:31560   */\n      0x04\n        /* \"#utility.yul\":31553:31557   */\n      dup3\n        /* \"#utility.yul\":31538:31587   */\n      returndatacopy\n        /* \"#utility.yul\":31617:31621   */\n      dup1\n        /* \"#utility.yul\":31611:31622   */\n      mload\n        /* \"#utility.yul\":31716:31732   */\n      returndatasize\n        /* \"#utility.yul\":31709:31713   */\n      0x24\n        /* \"#utility.yul\":31701:31707   */\n      dup3\n        /* \"#utility.yul\":31697:31714   */\n      add\n        /* \"#utility.yul\":31694:31733   */\n      gt\n        /* \"#utility.yul\":31661:31679   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":31653:31659   */\n      dup3\n        /* \"#utility.yul\":31650:31680   */\n      gt\n        /* \"#utility.yul\":31634:31747   */\n      or\n        /* \"#utility.yul\":31631:31777   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":31762:31767   */\n      pop\n      pop\n      jump(tag_574)\n        /* \"#utility.yul\":31631:31777   */\n    tag_577:\n        /* \"#utility.yul\":31808:31814   */\n      dup1\n        /* \"#utility.yul\":31802:31806   */\n      dup3\n        /* \"#utility.yul\":31798:31815   */\n      add\n        /* \"#utility.yul\":31844:31847   */\n      dup1\n        /* \"#utility.yul\":31838:31848   */\n      mload\n        /* \"#utility.yul\":31871:31889   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":31863:31869   */\n      dup2\n        /* \"#utility.yul\":31860:31890   */\n      gt\n        /* \"#utility.yul\":31857:31900   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":31893:31898   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_574)\n        /* \"#utility.yul\":31857:31900   */\n    tag_578:\n        /* \"#utility.yul\":31941:31947   */\n      dup1\n        /* \"#utility.yul\":31934:31938   */\n      0x20\n        /* \"#utility.yul\":31929:31932   */\n      dup4\n        /* \"#utility.yul\":31925:31939   */\n      add\n        /* \"#utility.yul\":31921:31948   */\n      add\n        /* \"#utility.yul\":32000:32001   */\n      0x04\n        /* \"#utility.yul\":31982:31998   */\n      returndatasize\n        /* \"#utility.yul\":31978:32002   */\n      sub\n        /* \"#utility.yul\":31972:31976   */\n      dup6\n        /* \"#utility.yul\":31968:32003   */\n      add\n        /* \"#utility.yul\":31963:31966   */\n      dup2\n        /* \"#utility.yul\":31960:32004   */\n      gt\n        /* \"#utility.yul\":31957:32014   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":32007:32012   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_574)\n        /* \"#utility.yul\":31957:32014   */\n    tag_579:\n        /* \"#utility.yul\":32024:32081   */\n      tag_580\n        /* \"#utility.yul\":32072:32078   */\n      dup3\n        /* \"#utility.yul\":32066:32070   */\n      0x20\n        /* \"#utility.yul\":32062:32079   */\n      add\n        /* \"#utility.yul\":32054:32060   */\n      dup6\n        /* \"#utility.yul\":32050:32080   */\n      add\n        /* \"#utility.yul\":32044:32048   */\n      dup7\n        /* \"#utility.yul\":32024:32081   */\n      tag_497\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":32097:32100   */\n      dup3\n        /* \"#utility.yul\":32090:32100   */\n      swap6\n      pop\n        /* \"#utility.yul\":31438:32106   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":31395:32106   */\n    tag_574:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":32112:32234   */\n    tag_261:\n        /* \"#utility.yul\":32185:32209   */\n      tag_582\n        /* \"#utility.yul\":32203:32208   */\n      dup2\n        /* \"#utility.yul\":32185:32209   */\n      tag_361\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":32178:32183   */\n      dup2\n        /* \"#utility.yul\":32175:32210   */\n      eq\n        /* \"#utility.yul\":32165:32228   */\n      tag_583\n      jumpi\n        /* \"#utility.yul\":32224:32225   */\n      0x00\n        /* \"#utility.yul\":32221:32222   */\n      dup1\n        /* \"#utility.yul\":32214:32226   */\n      revert\n        /* \"#utility.yul\":32165:32228   */\n    tag_583:\n        /* \"#utility.yul\":32112:32234   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32240:32356   */\n    tag_276:\n        /* \"#utility.yul\":32310:32331   */\n      tag_585\n        /* \"#utility.yul\":32325:32330   */\n      dup2\n        /* \"#utility.yul\":32310:32331   */\n      tag_379\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":32303:32308   */\n      dup2\n        /* \"#utility.yul\":32300:32332   */\n      eq\n        /* \"#utility.yul\":32290:32350   */\n      tag_586\n      jumpi\n        /* \"#utility.yul\":32346:32347   */\n      0x00\n        /* \"#utility.yul\":32343:32344   */\n      dup1\n        /* \"#utility.yul\":32336:32348   */\n      revert\n        /* \"#utility.yul\":32290:32350   */\n    tag_586:\n        /* \"#utility.yul\":32240:32356   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32362:32482   */\n    tag_280:\n        /* \"#utility.yul\":32434:32457   */\n      tag_588\n        /* \"#utility.yul\":32451:32456   */\n      dup2\n        /* \"#utility.yul\":32434:32457   */\n      tag_527\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":32427:32432   */\n      dup2\n        /* \"#utility.yul\":32424:32458   */\n      eq\n        /* \"#utility.yul\":32414:32476   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":32472:32473   */\n      0x00\n        /* \"#utility.yul\":32469:32470   */\n      dup1\n        /* \"#utility.yul\":32462:32474   */\n      revert\n        /* \"#utility.yul\":32414:32476   */\n    tag_589:\n        /* \"#utility.yul\":32362:32482   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32488:32610   */\n    tag_291:\n        /* \"#utility.yul\":32561:32585   */\n      tag_591\n        /* \"#utility.yul\":32579:32584   */\n      dup2\n        /* \"#utility.yul\":32561:32585   */\n      tag_445\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":32554:32559   */\n      dup2\n        /* \"#utility.yul\":32551:32586   */\n      eq\n        /* \"#utility.yul\":32541:32604   */\n      tag_592\n      jumpi\n        /* \"#utility.yul\":32600:32601   */\n      0x00\n        /* \"#utility.yul\":32597:32598   */\n      dup1\n        /* \"#utility.yul\":32590:32602   */\n      revert\n        /* \"#utility.yul\":32541:32604   */\n    tag_592:\n        /* \"#utility.yul\":32488:32610   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220af1a036d8409d69ac76667f69dba7d8b528df0563c1b01fdebeda29d99ba313b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_555": {
									"entryPoint": 79,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3764:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:9"
															},
															"nodeType": "YulIf",
															"src": "262:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:9",
														"type": ""
													}
												],
												"src": "7:421:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:9"
															},
															"nodeType": "YulIf",
															"src": "531:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:9",
														"type": ""
													}
												],
												"src": "448:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "896:437:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "944:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "944:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "944:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "917:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "926:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "938:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "909:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:32:9"
															},
															"nodeType": "YulIf",
															"src": "906:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1035:291:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1050:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1074:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1085:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1064:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1064:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1054:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1135:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1137:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1137:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1137:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1115:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1104:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1104:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "1101:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1232:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1288:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1299:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1284:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1284:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1308:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1242:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1242:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1232:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "866:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "877:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "889:6:9",
														"type": ""
													}
												],
												"src": "809:524:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1380:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1390:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1400:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1449:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1457:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1429:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1429:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1364:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1373:6:9",
														"type": ""
													}
												],
												"src": "1339:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1514:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1524:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1534:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1534:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1524:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1507:6:9",
														"type": ""
													}
												],
												"src": "1474:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1622:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1727:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1729:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1729:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1729:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:30:9"
															},
															"nodeType": "YulIf",
															"src": "1693:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1759:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1767:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1759:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1833:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1845:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1606:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1617:4:9",
														"type": ""
													}
												],
												"src": "1555:308:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1928:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1937:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1932:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1997:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2022:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2027:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2018:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2018:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2041:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2046:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2037:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2037:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2031:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2031:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2011:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2011:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2011:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1958:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1961:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1955:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1969:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1971:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1980:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1983:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1976:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1976:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1971:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1951:3:9",
																"statements": []
															},
															"src": "1947:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2144:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2149:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2140:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2140:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2158:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2133:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2133:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2078:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2072:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:13:9"
															},
															"nodeType": "YulIf",
															"src": "2069:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1900:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1905:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1910:6:9",
														"type": ""
													}
												],
												"src": "1869:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2233:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2243:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2257:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2253:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2253:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2274:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2304:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2278:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2351:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2365:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2379:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2387:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2375:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2331:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:26:9"
															},
															"nodeType": "YulIf",
															"src": "2321:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2454:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2468:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2468:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2468:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2418:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2441:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2449:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2438:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2415:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:38:9"
															},
															"nodeType": "YulIf",
															"src": "2412:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2217:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2226:6:9",
														"type": ""
													}
												],
												"src": "2182:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2561:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2583:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2613:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2591:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2579:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2565:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2730:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2732:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2732:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2673:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2685:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2670:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2670:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2709:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2706:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2706:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2667:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:62:9"
															},
															"nodeType": "YulIf",
															"src": "2664:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2768:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2772:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2761:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2537:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2545:4:9",
														"type": ""
													}
												],
												"src": "2508:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2823:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2843:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2833:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2940:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2930:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2930:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2961:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2964:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2954:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2954:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2795:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3009:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3026:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3019:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3019:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3123:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3126:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3147:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2981:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3256:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3273:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3266:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3167:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3379:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3396:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3399:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3389:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3290:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3502:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3519:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3512:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3512:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3413:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3625:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3645:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3635:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3536:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3707:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3717:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3735:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3742:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3731:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3751:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3747:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3747:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3727:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3727:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3717:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3690:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3700:6:9",
														"type": ""
													}
												],
												"src": "3659:102:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620028da380380620028da833981810160405281019062000037919062000199565b62000048816200004f60201b60201c565b506200036e565b8060029080519060200190620000679291906200006b565b5050565b82805462000079906200027f565b90600052602060002090601f0160209004810192826200009d5760008555620000e9565b82601f10620000b857805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e8578251825591602001919060010190620000cb565b5b509050620000f89190620000fc565b5090565b5b8082111562000117576000816000905550600101620000fd565b5090565b6000620001326200012c8462000213565b620001ea565b9050828152602081018484840111156200015157620001506200034e565b5b6200015e84828562000249565b509392505050565b600082601f8301126200017e576200017d62000349565b5b8151620001908482602086016200011b565b91505092915050565b600060208284031215620001b257620001b162000358565b5b600082015167ffffffffffffffff811115620001d357620001d262000353565b5b620001e18482850162000166565b91505092915050565b6000620001f662000209565b9050620002048282620002b5565b919050565b6000604051905090565b600067ffffffffffffffff8211156200023157620002306200031a565b5b6200023c826200035d565b9050602081019050919050565b60005b83811015620002695780820151818401526020810190506200024c565b8381111562000279576000848401525b50505050565b600060028204905060018216806200029857607f821691505b60208210811415620002af57620002ae620002eb565b5b50919050565b620002c0826200035d565b810181811067ffffffffffffffff82111715620002e257620002e16200031a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61255c806200037e6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a19190611727565b6101d0565b6040516100b39190611d3d565b60405180910390f35b6100d660048036038101906100d191906117df565b610299565b6040516100e39190611be0565b60405180910390f35b61010660048036038101906101019190611839565b61037b565b6040516101139190611bfb565b60405180910390f35b61013660048036038101906101319190611581565b61040f565b005b610152600480360381019061014d9190611767565b6104b0565b60405161015f9190611b87565b60405180910390f35b610182600480360381019061017d91906116e7565b6105c9565b005b61019e60048036038101906101999190611541565b6105df565b6040516101ab9190611be0565b60405180910390f35b6101ce60048036038101906101c99190611650565b610673565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611c3d565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610374575061037382610714565b5b9050919050565b60606002805461038a90611fac565b80601f01602080910402602001604051908101604052809291908181526020018280546103b690611fac565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509050919050565b61041761077e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045d575061045c8561045761077e565b6105df565b5b61049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611c5d565b60405180910390fd5b6104a98585858585610786565b5050505050565b606081518351146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611cdd565b60405180910390fd5b6000835167ffffffffffffffff811115610513576105126120e5565b5b6040519080825280602002602001820160405280156105415781602001602082028036833780820191505090505b50905060005b84518110156105be5761058e858281518110610566576105656120b6565b5b6020026020010151858381518110610581576105806120b6565b5b60200260200101516101d0565b8282815181106105a1576105a06120b6565b5b602002602001018181525050806105b79061200f565b9050610547565b508091505092915050565b6105db6105d461077e565b8383610aa8565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067b61077e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c157506106c0856106bb61077e565b6105df565b5b610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f790611c5d565b60405180910390fd5b61070d8585858585610c15565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190611cfd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561083a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083190611c7d565b60405180910390fd5b600061084461077e565b9050610854818787878787610eb1565b60005b8451811015610a05576000858281518110610875576108746120b6565b5b602002602001015190506000858381518110610894576108936120b6565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90611c9d565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109ea9190611ea0565b92505081905550505050806109fe9061200f565b9050610857565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a7c929190611ba9565b60405180910390a4610a92818787878787610eb9565b610aa0818787878787610ec1565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e90611cbd565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c089190611be0565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610c85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7c90611c7d565b60405180910390fd5b6000610c8f61077e565b90506000610c9c856110a8565b90506000610ca9856110a8565b9050610cb9838989858589610eb1565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4790611c9d565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e059190611ea0565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610e82929190611d58565b60405180910390a4610e98848a8a86868a610eb9565b610ea6848a8a8a8a8a611122565b505050505050505050565b505050505050565b505050505050565b610ee08473ffffffffffffffffffffffffffffffffffffffff16611309565b156110a0578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f26959493929190611ac5565b602060405180830381600087803b158015610f4057600080fd5b505af1925050508015610f7157506040513d601f19601f82011682018060405250810190610f6e919061180c565b60015b61101757610f7d612114565b806308c379a01415610fda5750610f92612434565b80610f9d5750610fdc565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd19190611bfb565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100e90611d1d565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461109e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109590611c1d565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156110c7576110c66120e5565b5b6040519080825280602002602001820160405280156110f55781602001602082028036833780820191505090505b509050828160008151811061110d5761110c6120b6565b5b60200260200101818152505080915050919050565b6111418473ffffffffffffffffffffffffffffffffffffffff16611309565b15611301578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611187959493929190611b2d565b602060405180830381600087803b1580156111a157600080fd5b505af19250505080156111d257506040513d601f19601f820116820180604052508101906111cf919061180c565b60015b611278576111de612114565b806308c379a0141561123b57506111f3612434565b806111fe575061123d565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112329190611bfb565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126f90611d1d565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f690611c1d565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061133f61133a84611da6565b611d81565b905080838252602082019050828560208602820111156113625761136161213b565b5b60005b858110156113925781611378888261144e565b845260208401935060208301925050600181019050611365565b5050509392505050565b60006113af6113aa84611dd2565b611d81565b905080838252602082019050828560208602820111156113d2576113d161213b565b5b60005b8581101561140257816113e8888261152c565b8452602084019350602083019250506001810190506113d5565b5050509392505050565b600061141f61141a84611dfe565b611d81565b90508281526020810184848401111561143b5761143a612140565b5b611446848285611f6a565b509392505050565b60008135905061145d816124ca565b92915050565b600082601f83011261147857611477612136565b5b813561148884826020860161132c565b91505092915050565b600082601f8301126114a6576114a5612136565b5b81356114b684826020860161139c565b91505092915050565b6000813590506114ce816124e1565b92915050565b6000813590506114e3816124f8565b92915050565b6000815190506114f8816124f8565b92915050565b600082601f83011261151357611512612136565b5b813561152384826020860161140c565b91505092915050565b60008135905061153b8161250f565b92915050565b600080604083850312156115585761155761214a565b5b60006115668582860161144e565b92505060206115778582860161144e565b9150509250929050565b600080600080600060a0868803121561159d5761159c61214a565b5b60006115ab8882890161144e565b95505060206115bc8882890161144e565b945050604086013567ffffffffffffffff8111156115dd576115dc612145565b5b6115e988828901611491565b935050606086013567ffffffffffffffff81111561160a57611609612145565b5b61161688828901611491565b925050608086013567ffffffffffffffff81111561163757611636612145565b5b611643888289016114fe565b9150509295509295909350565b600080600080600060a0868803121561166c5761166b61214a565b5b600061167a8882890161144e565b955050602061168b8882890161144e565b945050604061169c8882890161152c565b93505060606116ad8882890161152c565b925050608086013567ffffffffffffffff8111156116ce576116cd612145565b5b6116da888289016114fe565b9150509295509295909350565b600080604083850312156116fe576116fd61214a565b5b600061170c8582860161144e565b925050602061171d858286016114bf565b9150509250929050565b6000806040838503121561173e5761173d61214a565b5b600061174c8582860161144e565b925050602061175d8582860161152c565b9150509250929050565b6000806040838503121561177e5761177d61214a565b5b600083013567ffffffffffffffff81111561179c5761179b612145565b5b6117a885828601611463565b925050602083013567ffffffffffffffff8111156117c9576117c8612145565b5b6117d585828601611491565b9150509250929050565b6000602082840312156117f5576117f461214a565b5b6000611803848285016114d4565b91505092915050565b6000602082840312156118225761182161214a565b5b6000611830848285016114e9565b91505092915050565b60006020828403121561184f5761184e61214a565b5b600061185d8482850161152c565b91505092915050565b60006118728383611aa7565b60208301905092915050565b61188781611ef6565b82525050565b600061189882611e3f565b6118a28185611e6d565b93506118ad83611e2f565b8060005b838110156118de5781516118c58882611866565b97506118d083611e60565b9250506001810190506118b1565b5085935050505092915050565b6118f481611f08565b82525050565b600061190582611e4a565b61190f8185611e7e565b935061191f818560208601611f79565b6119288161214f565b840191505092915050565b600061193e82611e55565b6119488185611e8f565b9350611958818560208601611f79565b6119618161214f565b840191505092915050565b6000611979602883611e8f565b91506119848261216d565b604082019050919050565b600061199c602a83611e8f565b91506119a7826121bc565b604082019050919050565b60006119bf602e83611e8f565b91506119ca8261220b565b604082019050919050565b60006119e2602583611e8f565b91506119ed8261225a565b604082019050919050565b6000611a05602a83611e8f565b9150611a10826122a9565b604082019050919050565b6000611a28602983611e8f565b9150611a33826122f8565b604082019050919050565b6000611a4b602983611e8f565b9150611a5682612347565b604082019050919050565b6000611a6e602883611e8f565b9150611a7982612396565b604082019050919050565b6000611a91603483611e8f565b9150611a9c826123e5565b604082019050919050565b611ab081611f60565b82525050565b611abf81611f60565b82525050565b600060a082019050611ada600083018861187e565b611ae7602083018761187e565b8181036040830152611af9818661188d565b90508181036060830152611b0d818561188d565b90508181036080830152611b2181846118fa565b90509695505050505050565b600060a082019050611b42600083018861187e565b611b4f602083018761187e565b611b5c6040830186611ab6565b611b696060830185611ab6565b8181036080830152611b7b81846118fa565b90509695505050505050565b60006020820190508181036000830152611ba1818461188d565b905092915050565b60006040820190508181036000830152611bc3818561188d565b90508181036020830152611bd7818461188d565b90509392505050565b6000602082019050611bf560008301846118eb565b92915050565b60006020820190508181036000830152611c158184611933565b905092915050565b60006020820190508181036000830152611c368161196c565b9050919050565b60006020820190508181036000830152611c568161198f565b9050919050565b60006020820190508181036000830152611c76816119b2565b9050919050565b60006020820190508181036000830152611c96816119d5565b9050919050565b60006020820190508181036000830152611cb6816119f8565b9050919050565b60006020820190508181036000830152611cd681611a1b565b9050919050565b60006020820190508181036000830152611cf681611a3e565b9050919050565b60006020820190508181036000830152611d1681611a61565b9050919050565b60006020820190508181036000830152611d3681611a84565b9050919050565b6000602082019050611d526000830184611ab6565b92915050565b6000604082019050611d6d6000830185611ab6565b611d7a6020830184611ab6565b9392505050565b6000611d8b611d9c565b9050611d978282611fde565b919050565b6000604051905090565b600067ffffffffffffffff821115611dc157611dc06120e5565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611ded57611dec6120e5565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611e1957611e186120e5565b5b611e228261214f565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611eab82611f60565b9150611eb683611f60565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611eeb57611eea612058565b5b828201905092915050565b6000611f0182611f40565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611f97578082015181840152602081019050611f7c565b83811115611fa6576000848401525b50505050565b60006002820490506001821680611fc457607f821691505b60208210811415611fd857611fd7612087565b5b50919050565b611fe78261214f565b810181811067ffffffffffffffff82111715612006576120056120e5565b5b80604052505050565b600061201a82611f60565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561204d5761204c612058565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d11156121335760046000803e612130600051612160565b90505b90565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206f7220617070726f766564000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600060443d1015612444576124c7565b61244c611d9c565b60043d036004823e80513d602482011167ffffffffffffffff821117156124745750506124c7565b808201805167ffffffffffffffff81111561249257505050506124c7565b80602083010160043d0385018111156124af5750505050506124c7565b6124be82602001850186611fde565b82955050505050505b90565b6124d381611ef6565b81146124de57600080fd5b50565b6124ea81611f08565b81146124f557600080fd5b50565b61250181611f14565b811461250c57600080fd5b50565b61251881611f60565b811461252357600080fd5b5056fea2646970667358221220af1a036d8409d69ac76667f69dba7d8b528df0563c1b01fdebeda29d99ba313b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x28DA CODESIZE SUB DUP1 PUSH3 0x28DA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x199 JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x36E JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x67 SWAP3 SWAP2 SWAP1 PUSH3 0x6B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x79 SWAP1 PUSH3 0x27F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xF8 SWAP2 SWAP1 PUSH3 0xFC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x117 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0xFD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x132 PUSH3 0x12C DUP5 PUSH3 0x213 JUMP JUMPDEST PUSH3 0x1EA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH3 0x150 PUSH3 0x34E JUMP JUMPDEST JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x249 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x17E JUMPI PUSH3 0x17D PUSH3 0x349 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x190 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x11B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1B2 JUMPI PUSH3 0x1B1 PUSH3 0x358 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1D3 JUMPI PUSH3 0x1D2 PUSH3 0x353 JUMP JUMPDEST JUMPDEST PUSH3 0x1E1 DUP5 DUP3 DUP6 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F6 PUSH3 0x209 JUMP JUMPDEST SWAP1 POP PUSH3 0x204 DUP3 DUP3 PUSH3 0x2B5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x31A JUMP JUMPDEST JUMPDEST PUSH3 0x23C DUP3 PUSH3 0x35D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x269 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x24C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x279 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x298 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2AF JUMPI PUSH3 0x2AE PUSH3 0x2EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C0 DUP3 PUSH3 0x35D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2E2 JUMPI PUSH3 0x2E1 PUSH3 0x31A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x255C DUP1 PUSH3 0x37E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1767 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x714 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x1FAC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x403 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP6 PUSH2 0x457 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x786 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x513 JUMPI PUSH2 0x512 PUSH2 0x20E5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x541 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x58E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x566 JUMPI PUSH2 0x565 PUSH2 0x20B6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x20B6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x20B6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B7 SWAP1 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP PUSH2 0x547 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x5D4 PUSH2 0x77E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAA8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67B PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C1 JUMPI POP PUSH2 0x6C0 DUP6 PUSH2 0x6BB PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC15 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C1 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x844 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH2 0x854 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x20B6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0x20B6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FE SWAP1 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP PUSH2 0x857 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7C SWAP3 SWAP2 SWAP1 PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA92 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xAA0 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7C SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8F PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC9C DUP6 PUSH2 0x10A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA9 DUP6 PUSH2 0x10A8 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB9 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE82 SWAP3 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE98 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xEA6 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1122 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEE0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1309 JUMP JUMPDEST ISZERO PUSH2 0x10A0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF71 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF6E SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1017 JUMPI PUSH2 0xF7D PUSH2 0x2114 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xFDA JUMPI POP PUSH2 0xF92 PUSH2 0x2434 JUMP JUMPDEST DUP1 PUSH2 0xF9D JUMPI POP PUSH2 0xFDC JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100E SWAP1 PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1095 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10C7 JUMPI PUSH2 0x10C6 PUSH2 0x20E5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10F5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x110D JUMPI PUSH2 0x110C PUSH2 0x20B6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1141 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1309 JUMP JUMPDEST ISZERO PUSH2 0x1301 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B2D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11CF SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1278 JUMPI PUSH2 0x11DE PUSH2 0x2114 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x123B JUMPI POP PUSH2 0x11F3 PUSH2 0x2434 JUMP JUMPDEST DUP1 PUSH2 0x11FE JUMPI POP PUSH2 0x123D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1232 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126F SWAP1 PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F6 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133F PUSH2 0x133A DUP5 PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0x1D81 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1362 JUMPI PUSH2 0x1361 PUSH2 0x213B JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1392 JUMPI DUP2 PUSH2 0x1378 DUP9 DUP3 PUSH2 0x144E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1365 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13AF PUSH2 0x13AA DUP5 PUSH2 0x1DD2 JUMP JUMPDEST PUSH2 0x1D81 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x213B JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1402 JUMPI DUP2 PUSH2 0x13E8 DUP9 DUP3 PUSH2 0x152C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x13D5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141F PUSH2 0x141A DUP5 PUSH2 0x1DFE JUMP JUMPDEST PUSH2 0x1D81 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x143B JUMPI PUSH2 0x143A PUSH2 0x2140 JUMP JUMPDEST JUMPDEST PUSH2 0x1446 DUP5 DUP3 DUP6 PUSH2 0x1F6A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x145D DUP2 PUSH2 0x24CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1478 JUMPI PUSH2 0x1477 PUSH2 0x2136 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1488 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x132C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14A6 JUMPI PUSH2 0x14A5 PUSH2 0x2136 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14B6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x139C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14CE DUP2 PUSH2 0x24E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E3 DUP2 PUSH2 0x24F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14F8 DUP2 PUSH2 0x24F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1513 JUMPI PUSH2 0x1512 PUSH2 0x2136 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1523 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x140C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x153B DUP2 PUSH2 0x250F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1558 JUMPI PUSH2 0x1557 PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1566 DUP6 DUP3 DUP7 ADD PUSH2 0x144E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1577 DUP6 DUP3 DUP7 ADD PUSH2 0x144E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x159D JUMPI PUSH2 0x159C PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15AB DUP9 DUP3 DUP10 ADD PUSH2 0x144E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x15BC DUP9 DUP3 DUP10 ADD PUSH2 0x144E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DC PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x15E9 DUP9 DUP3 DUP10 ADD PUSH2 0x1491 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x160A JUMPI PUSH2 0x1609 PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x1616 DUP9 DUP3 DUP10 ADD PUSH2 0x1491 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1637 JUMPI PUSH2 0x1636 PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x1643 DUP9 DUP3 DUP10 ADD PUSH2 0x14FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x166C JUMPI PUSH2 0x166B PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x167A DUP9 DUP3 DUP10 ADD PUSH2 0x144E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x168B DUP9 DUP3 DUP10 ADD PUSH2 0x144E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x169C DUP9 DUP3 DUP10 ADD PUSH2 0x152C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x16AD DUP9 DUP3 DUP10 ADD PUSH2 0x152C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16CE JUMPI PUSH2 0x16CD PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x16DA DUP9 DUP3 DUP10 ADD PUSH2 0x14FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16FE JUMPI PUSH2 0x16FD PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x170C DUP6 DUP3 DUP7 ADD PUSH2 0x144E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x171D DUP6 DUP3 DUP7 ADD PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x173E JUMPI PUSH2 0x173D PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x174C DUP6 DUP3 DUP7 ADD PUSH2 0x144E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x175D DUP6 DUP3 DUP7 ADD PUSH2 0x152C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x177E JUMPI PUSH2 0x177D PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179C JUMPI PUSH2 0x179B PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x17A8 DUP6 DUP3 DUP7 ADD PUSH2 0x1463 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17C9 JUMPI PUSH2 0x17C8 PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x17D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1491 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F5 JUMPI PUSH2 0x17F4 PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1803 DUP5 DUP3 DUP6 ADD PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1822 JUMPI PUSH2 0x1821 PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1830 DUP5 DUP3 DUP6 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x184F JUMPI PUSH2 0x184E PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x185D DUP5 DUP3 DUP6 ADD PUSH2 0x152C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1872 DUP4 DUP4 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1887 DUP2 PUSH2 0x1EF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1898 DUP3 PUSH2 0x1E3F JUMP JUMPDEST PUSH2 0x18A2 DUP2 DUP6 PUSH2 0x1E6D JUMP JUMPDEST SWAP4 POP PUSH2 0x18AD DUP4 PUSH2 0x1E2F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18DE JUMPI DUP2 MLOAD PUSH2 0x18C5 DUP9 DUP3 PUSH2 0x1866 JUMP JUMPDEST SWAP8 POP PUSH2 0x18D0 DUP4 PUSH2 0x1E60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18B1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18F4 DUP2 PUSH2 0x1F08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1905 DUP3 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x190F DUP2 DUP6 PUSH2 0x1E7E JUMP JUMPDEST SWAP4 POP PUSH2 0x191F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F79 JUMP JUMPDEST PUSH2 0x1928 DUP2 PUSH2 0x214F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193E DUP3 PUSH2 0x1E55 JUMP JUMPDEST PUSH2 0x1948 DUP2 DUP6 PUSH2 0x1E8F JUMP JUMPDEST SWAP4 POP PUSH2 0x1958 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F79 JUMP JUMPDEST PUSH2 0x1961 DUP2 PUSH2 0x214F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1979 PUSH1 0x28 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1984 DUP3 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x199C PUSH1 0x2A DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x19A7 DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BF PUSH1 0x2E DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x19CA DUP3 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E2 PUSH1 0x25 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x19ED DUP3 PUSH2 0x225A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A05 PUSH1 0x2A DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A10 DUP3 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 PUSH1 0x29 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A33 DUP3 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4B PUSH1 0x29 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A56 DUP3 PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6E PUSH1 0x28 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A79 DUP3 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A91 PUSH1 0x34 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9C DUP3 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB0 DUP2 PUSH2 0x1F60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1ABF DUP2 PUSH2 0x1F60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1ADA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x187E JUMP JUMPDEST PUSH2 0x1AE7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x187E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1AF9 DUP2 DUP7 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B0D DUP2 DUP6 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B21 DUP2 DUP5 PUSH2 0x18FA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1B42 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x187E JUMP JUMPDEST PUSH2 0x1B4F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x187E JUMP JUMPDEST PUSH2 0x1B5C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1B69 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1AB6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B7B DUP2 DUP5 PUSH2 0x18FA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BA1 DUP2 DUP5 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BC3 DUP2 DUP6 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1BD7 DUP2 DUP5 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C15 DUP2 DUP5 PUSH2 0x1933 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C36 DUP2 PUSH2 0x196C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C56 DUP2 PUSH2 0x198F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x19D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB6 DUP2 PUSH2 0x19F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD6 DUP2 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF6 DUP2 PUSH2 0x1A3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D16 DUP2 PUSH2 0x1A61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D36 DUP2 PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D6D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1D7A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AB6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8B PUSH2 0x1D9C JUMP JUMPDEST SWAP1 POP PUSH2 0x1D97 DUP3 DUP3 PUSH2 0x1FDE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DC1 JUMPI PUSH2 0x1DC0 PUSH2 0x20E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DED JUMPI PUSH2 0x1DEC PUSH2 0x20E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E19 JUMPI PUSH2 0x1E18 PUSH2 0x20E5 JUMP JUMPDEST JUMPDEST PUSH2 0x1E22 DUP3 PUSH2 0x214F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAB DUP3 PUSH2 0x1F60 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB6 DUP4 PUSH2 0x1F60 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EEB JUMPI PUSH2 0x1EEA PUSH2 0x2058 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F01 DUP3 PUSH2 0x1F40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F97 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F7C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1FA6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FC4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x2087 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE7 DUP3 PUSH2 0x214F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2006 JUMPI PUSH2 0x2005 PUSH2 0x20E5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201A DUP3 PUSH2 0x1F60 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x204D JUMPI PUSH2 0x204C PUSH2 0x2058 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2133 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2130 PUSH1 0x0 MLOAD PUSH2 0x2160 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2444 JUMPI PUSH2 0x24C7 JUMP JUMPDEST PUSH2 0x244C PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2474 JUMPI POP POP PUSH2 0x24C7 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2492 JUMPI POP POP POP POP PUSH2 0x24C7 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x24AF JUMPI POP POP POP POP POP PUSH2 0x24C7 JUMP JUMPDEST PUSH2 0x24BE DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x1FDE JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x24D3 DUP2 PUSH2 0x1EF6 JUMP JUMPDEST DUP2 EQ PUSH2 0x24DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24EA DUP2 PUSH2 0x1F08 JUMP JUMPDEST DUP2 EQ PUSH2 0x24F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2501 DUP2 PUSH2 0x1F14 JUMP JUMPDEST DUP2 EQ PUSH2 0x250C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2518 DUP2 PUSH2 0x1F60 JUMP JUMPDEST DUP2 EQ PUSH2 0x2523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF BYTE SUB PUSH14 0x8409D69AC76667F69DBA7D8B528D CREATE JUMP EXTCODECOPY SHL ADD REVERT 0xEB 0xED LOG2 SWAP14 SWAP10 0xBA BALANCE EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "570:16689:0:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;;;:13;;:::i;:::-;1107:62;570:16689;;8171:86;8244:6;8237:4;:13;;;;;;;;;;;;:::i;:::-;;8171:86;:::o;570:16689::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:9:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:524::-;889:6;938:2;926:9;917:7;913:23;909:32;906:119;;;944:79;;:::i;:::-;906:119;1085:1;1074:9;1070:17;1064:24;1115:18;1107:6;1104:30;1101:117;;;1137:79;;:::i;:::-;1101:117;1242:74;1308:7;1299:6;1288:9;1284:22;1242:74;:::i;:::-;1232:84;;1035:291;809:524;;;;:::o;1339:129::-;1373:6;1400:20;;:::i;:::-;1390:30;;1429:33;1457:4;1449:6;1429:33;:::i;:::-;1339:129;;;:::o;1474:75::-;1507:6;1540:2;1534:9;1524:19;;1474:75;:::o;1555:308::-;1617:4;1707:18;1699:6;1696:30;1693:56;;;1729:18;;:::i;:::-;1693:56;1767:29;1789:6;1767:29;:::i;:::-;1759:37;;1851:4;1845;1841:15;1833:23;;1555:308;;;:::o;1869:307::-;1937:1;1947:113;1961:6;1958:1;1955:13;1947:113;;;2046:1;2041:3;2037:11;2031:18;2027:1;2022:3;2018:11;2011:39;1983:2;1980:1;1976:10;1971:15;;1947:113;;;2078:6;2075:1;2072:13;2069:101;;;2158:1;2149:6;2144:3;2140:16;2133:27;2069:101;1918:258;1869:307;;;:::o;2182:320::-;2226:6;2263:1;2257:4;2253:12;2243:22;;2310:1;2304:4;2300:12;2331:18;2321:81;;2387:4;2379:6;2375:17;2365:27;;2321:81;2449:2;2441:6;2438:14;2418:18;2415:38;2412:84;;;2468:18;;:::i;:::-;2412:84;2233:269;2182:320;;;:::o;2508:281::-;2591:27;2613:4;2591:27;:::i;:::-;2583:6;2579:40;2721:6;2709:10;2706:22;2685:18;2673:10;2670:34;2667:62;2664:88;;;2732:18;;:::i;:::-;2664:88;2772:10;2768:2;2761:22;2551:238;2508:281;;:::o;2795:180::-;2843:77;2840:1;2833:88;2940:4;2937:1;2930:15;2964:4;2961:1;2954:15;2981:180;3029:77;3026:1;3019:88;3126:4;3123:1;3116:15;3150:4;3147:1;3140:15;3167:117;3276:1;3273;3266:12;3290:117;3399:1;3396;3389:12;3413:117;3522:1;3519;3512:12;3536:117;3645:1;3642;3635:12;3659:102;3700:6;3751:2;3747:7;3742:2;3735:5;3731:14;3727:28;3717:38;;3659:102;;;:::o;570:16689:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1065": {
									"entryPoint": 3769,
									"id": 1065,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1221": {
									"entryPoint": 4264,
									"id": 1221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1046": {
									"entryPoint": 3761,
									"id": 1046,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1193": {
									"entryPoint": 3777,
									"id": 1193,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1128": {
									"entryPoint": 4386,
									"id": 1128,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1742": {
									"entryPoint": 1918,
									"id": 1742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_544": {
									"entryPoint": 1926,
									"id": 544,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_409": {
									"entryPoint": 3093,
									"id": 409,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1027": {
									"entryPoint": 2728,
									"id": 1027,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_179": {
									"entryPoint": 1200,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_115": {
									"entryPoint": 464,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_214": {
									"entryPoint": 1503,
									"id": 214,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1418": {
									"entryPoint": 4873,
									"id": 1418,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_292": {
									"entryPoint": 1039,
									"id": 292,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_252": {
									"entryPoint": 1651,
									"id": 252,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_196": {
									"entryPoint": 1481,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1775": {
									"entryPoint": 1812,
									"id": 1775,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_75": {
									"entryPoint": 665,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_87": {
									"entryPoint": 891,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4908,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5020,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5132,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 5353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6853,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6957,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7580,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 8042,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 8057,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8421,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 8468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8502,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8517,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 8544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 8557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad": {
									"entryPoint": 8636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156": {
									"entryPoint": 8715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 8794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 8873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 8952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 9031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 9110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d": {
									"entryPoint": 9189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 9268,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 9418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 9464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:32613:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:9",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:9"
															},
															"nodeType": "YulIf",
															"src": "350:143:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:9",
														"type": ""
													}
												],
												"src": "24:722:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:620:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "906:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "890:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "881:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "980:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "991:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "984:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1020:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1006:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1036:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1069:17:9",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1080:6:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1073:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1149:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1105:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1114:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:27:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1098:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:36:9"
															},
															"nodeType": "YulIf",
															"src": "1095:143:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1307:178:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1322:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1326:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1364:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1390:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1402:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1369:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1369:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1357:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1420:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1436:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1427:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1420:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1454:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1465:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1470:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1461:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1454:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1269:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1266:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1280:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1282:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1291:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1294:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1287:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1287:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1282:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1251:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1253:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1262:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1257:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1247:238:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "841:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "849:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "857:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "865:5:9",
														"type": ""
													}
												],
												"src": "769:722:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:327:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1656:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1615:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1599:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1590:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1680:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1687:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1703:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1718:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1725:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1714:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1707:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1768:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1770:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1770:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1770:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1749:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1754:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1745:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1763:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1742:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:25:9"
															},
															"nodeType": "YulIf",
															"src": "1739:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1884:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1889:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1894:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1860:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1860:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1553:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1558:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1566:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1574:5:9",
														"type": ""
													}
												],
												"src": "1497:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1965:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1975:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1997:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1984:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1984:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1975:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2040:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2013:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2013:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1943:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1951:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1959:5:9",
														"type": ""
													}
												],
												"src": "1913:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2152:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2203:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2180:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2188:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2176:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2176:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2195:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:35:9"
															},
															"nodeType": "YulIf",
															"src": "2162:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2293:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2297:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2336:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2412:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2420:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2427:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2435:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2345:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2345:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2336:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2130:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2138:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2146:5:9",
														"type": ""
													}
												],
												"src": "2075:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2594:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2596:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2596:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2596:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2573:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2581:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2569:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2569:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2565:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2565:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:35:9"
															},
															"nodeType": "YulIf",
															"src": "2555:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2686:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2713:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2700:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2690:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2729:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2805:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2813:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2801:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2801:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2820:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2828:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2738:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2729:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2523:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2531:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2539:5:9",
														"type": ""
													}
												],
												"src": "2468:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2893:84:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2903:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2925:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2912:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2903:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2965:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2941:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2871:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2879:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:9",
														"type": ""
													}
												],
												"src": "2844:133:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3044:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3066:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3053:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3053:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3044:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3108:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3082:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3082:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3012:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3020:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3028:5:9",
														"type": ""
													}
												],
												"src": "2983:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3188:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3198:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3213:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3207:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3207:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3198:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3255:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3229:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3229:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3166:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3174:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3182:5:9",
														"type": ""
													}
												],
												"src": "3126:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3347:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3396:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3398:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3398:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3398:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3375:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3383:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3371:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3371:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3390:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:35:9"
															},
															"nodeType": "YulIf",
															"src": "3357:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3488:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3515:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3502:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3492:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3531:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3591:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3599:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3587:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3587:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3606:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3614:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3540:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3531:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3325:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3333:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3341:5:9",
														"type": ""
													}
												],
												"src": "3286:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3682:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3692:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3714:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3701:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3692:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3757:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3730:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3730:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3730:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3660:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3668:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3676:5:9",
														"type": ""
													}
												],
												"src": "3630:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3858:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3904:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3906:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3906:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3906:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3879:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3888:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3875:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3900:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:32:9"
															},
															"nodeType": "YulIf",
															"src": "3868:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3997:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4012:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4026:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4016:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4041:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4076:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4087:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4072:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4072:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4096:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4051:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4051:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4041:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4124:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4139:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4143:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4169:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4204:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4215:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4200:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4200:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4224:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4179:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4179:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4169:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3820:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3831:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3843:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3851:6:9",
														"type": ""
													}
												],
												"src": "3775:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4448:1316:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4495:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4497:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4497:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4497:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4469:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4478:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:33:9"
															},
															"nodeType": "YulIf",
															"src": "4458:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4588:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4603:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4617:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4607:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4632:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4667:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4678:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4663:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4663:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4687:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4642:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4632:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4715:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4730:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4744:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4734:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4760:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4795:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4806:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4791:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4791:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4815:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4770:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4770:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4760:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4843:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4858:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4889:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4900:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4885:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4885:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4872:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4872:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4862:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4951:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4953:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4953:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4953:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4923:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4931:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4920:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4920:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "4917:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5048:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5108:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5119:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5104:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5104:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5128:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5058:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5058:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5048:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5156:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5171:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5202:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5213:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5198:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5198:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5185:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5185:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5175:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5264:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5266:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5266:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5266:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5236:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5244:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5233:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5233:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "5230:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5361:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5421:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5432:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5417:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5417:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5441:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5371:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5371:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5361:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5469:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5484:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5515:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5526:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5511:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5511:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5498:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5488:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5578:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5580:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5580:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5580:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5550:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5558:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5547:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "5544:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5675:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5719:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5730:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5715:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5715:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5739:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5685:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5675:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4386:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4397:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4409:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4417:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4425:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4433:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4441:6:9",
														"type": ""
													}
												],
												"src": "4255:1509:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5913:946:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5960:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5962:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5962:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5962:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5934:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5930:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5930:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5955:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5926:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5926:33:9"
															},
															"nodeType": "YulIf",
															"src": "5923:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "6053:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6068:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6082:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6072:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6097:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6132:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6143:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6128:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6128:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6152:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6107:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6107:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6097:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6180:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6195:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6209:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6199:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6225:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6260:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6271:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6256:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6256:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6280:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6235:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6235:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6225:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6308:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6323:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6337:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6327:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6353:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6388:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6399:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6384:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6408:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6363:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6363:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6353:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6436:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6451:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6465:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6455:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6481:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6516:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6527:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6512:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6512:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6536:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6491:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6491:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6481:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6564:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6579:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6610:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6621:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6606:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6606:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6593:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6593:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6583:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6673:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6675:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6675:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6675:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6645:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6642:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6642:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "6639:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6770:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6814:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6825:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6810:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6834:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6780:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6780:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6770:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5851:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5862:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5874:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5882:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5890:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5898:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5906:6:9",
														"type": ""
													}
												],
												"src": "5770:1089:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6945:388:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6991:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6993:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6993:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6993:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6966:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6975:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6962:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6962:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6987:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6958:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:32:9"
															},
															"nodeType": "YulIf",
															"src": "6955:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7084:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7099:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7113:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7103:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7128:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7163:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7174:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7159:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7159:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7183:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7138:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7138:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7128:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7211:115:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7226:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7240:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7230:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7256:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7288:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7299:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7284:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7284:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7308:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7266:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7266:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7256:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6907:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6918:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6930:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6938:6:9",
														"type": ""
													}
												],
												"src": "6865:468:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7422:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7468:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7470:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7443:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7439:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7439:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7464:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7435:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7435:32:9"
															},
															"nodeType": "YulIf",
															"src": "7432:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7561:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7576:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7590:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7580:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7605:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7640:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7651:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7636:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7636:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7660:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7615:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7605:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7688:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7703:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7717:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7707:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7733:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7768:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7779:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7764:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7764:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7788:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7743:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7733:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7384:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7395:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7407:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7415:6:9",
														"type": ""
													}
												],
												"src": "7339:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7952:761:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7998:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8000:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8000:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8000:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7973:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7982:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7969:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7969:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7994:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7965:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7965:32:9"
															},
															"nodeType": "YulIf",
															"src": "7962:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8091:302:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8106:45:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8137:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8148:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8133:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8133:17:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8120:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8120:31:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8110:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8198:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8200:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8200:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8200:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8170:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8178:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8167:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "8164:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8295:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8355:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8366:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8351:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8351:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8375:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8305:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8305:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8295:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8403:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8418:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8449:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8460:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8445:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8445:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8432:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8422:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8511:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8513:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8513:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8513:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8483:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8491:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8480:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "8477:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8608:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8668:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8679:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8664:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8664:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8688:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8618:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8618:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8608:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7914:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7925:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7937:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7945:6:9",
														"type": ""
													}
												],
												"src": "7819:894:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8784:262:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8830:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8832:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8832:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8832:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8805:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8814:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8801:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8826:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8797:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8797:32:9"
															},
															"nodeType": "YulIf",
															"src": "8794:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8923:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8938:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8952:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8942:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8967:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9001:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9012:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8997:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8997:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9021:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "8977:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8977:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8967:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8754:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8765:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8777:6:9",
														"type": ""
													}
												],
												"src": "8719:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9128:273:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9174:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9176:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9176:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9176:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9149:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9158:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9145:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9145:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9170:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9141:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9141:32:9"
															},
															"nodeType": "YulIf",
															"src": "9138:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9267:127:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9282:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9296:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9286:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9311:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9356:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9367:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9352:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9352:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9376:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9321:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9321:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9311:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9098:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9109:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9121:6:9",
														"type": ""
													}
												],
												"src": "9052:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9473:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9519:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9521:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9521:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9521:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9494:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9503:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9490:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9515:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9486:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:32:9"
															},
															"nodeType": "YulIf",
															"src": "9483:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9612:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9627:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9641:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9631:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9656:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9691:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9702:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9687:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9687:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9711:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9666:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9666:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9656:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9443:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9454:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9466:6:9",
														"type": ""
													}
												],
												"src": "9407:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9822:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9866:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9874:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9832:33:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9832:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9887:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9905:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9910:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9901:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9901:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9887:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9795:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9803:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9811:10:9",
														"type": ""
													}
												],
												"src": "9742:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9992:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10009:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10032:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10014:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10014:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10002:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10002:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10002:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9980:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9987:3:9",
														"type": ""
													}
												],
												"src": "9927:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10205:608:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10215:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10277:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10229:47:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10229:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10219:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10292:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10373:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10378:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10299:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10299:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10292:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10394:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10459:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10409:49:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10409:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "10398:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10474:21:9",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "10488:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10478:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10564:224:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10578:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10605:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10599:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10599:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "10582:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10625:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "10676:13:9"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10691:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "10632:43:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10632:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10625:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10708:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10771:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10718:52:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10718:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10708:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10526:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10529:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10523:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10523:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10537:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10539:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10548:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10551:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10544:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10544:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10539:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10508:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10510:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10519:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "10514:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10504:284:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10797:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10804:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10797:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10184:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10191:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10200:3:9",
														"type": ""
													}
												],
												"src": "10081:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10878:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10895:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10915:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "10900:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10900:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10888:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10888:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10866:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10873:3:9",
														"type": ""
													}
												],
												"src": "10819:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11024:270:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11034:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11080:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11048:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11048:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11038:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11095:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11160:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11165:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11102:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11102:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11095:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11207:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11214:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11203:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11203:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11221:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11226:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11181:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11181:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11181:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11242:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11253:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11280:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11258:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11258:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11249:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11242:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11005:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11012:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11020:3:9",
														"type": ""
													}
												],
												"src": "10934:360:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11392:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11402:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11449:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11416:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11416:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11406:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11464:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11530:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11535:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11471:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11471:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11464:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11577:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11584:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11573:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11573:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11591:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11596:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11551:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11551:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11551:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11612:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11623:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11650:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11628:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11628:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11619:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11619:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11612:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11373:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11380:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11388:3:9",
														"type": ""
													}
												],
												"src": "11300:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11816:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11826:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11892:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11897:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11833:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11833:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11826:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11998:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "11909:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11909:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11909:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12011:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12022:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12027:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12018:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12018:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12011:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11804:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11812:3:9",
														"type": ""
													}
												],
												"src": "11670:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12188:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12198:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12264:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12269:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12205:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12205:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12198:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12370:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																	"nodeType": "YulIdentifier",
																	"src": "12281:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12281:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12281:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12383:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12394:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12399:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12390:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12390:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12383:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12176:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12184:3:9",
														"type": ""
													}
												],
												"src": "12042:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12560:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12570:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12636:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12641:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12577:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12577:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12570:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12742:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																	"nodeType": "YulIdentifier",
																	"src": "12653:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12653:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12653:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12755:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12766:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12771:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12762:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12762:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12755:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12548:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12556:3:9",
														"type": ""
													}
												],
												"src": "12414:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12932:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12942:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13008:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13013:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12949:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12949:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12942:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13114:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "13025:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13025:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13025:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13127:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13138:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13143:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13134:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13134:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13127:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12920:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12928:3:9",
														"type": ""
													}
												],
												"src": "12786:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13304:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13314:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13380:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13385:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13321:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13321:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13314:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13486:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "13397:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13397:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13397:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13499:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13510:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13515:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13506:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13506:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13499:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13292:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13300:3:9",
														"type": ""
													}
												],
												"src": "13158:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13676:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13686:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13752:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13757:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13693:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13693:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13686:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13858:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "13769:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13769:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13769:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13871:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13882:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13887:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13878:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13878:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13871:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13664:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13672:3:9",
														"type": ""
													}
												],
												"src": "13530:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14048:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14058:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14124:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14129:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14065:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14065:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14058:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14230:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "14141:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14141:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14141:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14243:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14254:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14259:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14250:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14250:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14243:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14036:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14044:3:9",
														"type": ""
													}
												],
												"src": "13902:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14420:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14430:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14496:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14501:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14437:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14437:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14430:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14602:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "14513:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14513:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14513:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14615:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14626:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14631:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14622:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14622:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14615:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14408:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14416:3:9",
														"type": ""
													}
												],
												"src": "14274:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14792:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14802:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14868:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14873:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14809:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14809:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14802:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14974:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																	"nodeType": "YulIdentifier",
																	"src": "14885:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14885:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14885:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14987:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14998:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15003:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14994:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14994:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14987:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14780:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14788:3:9",
														"type": ""
													}
												],
												"src": "14646:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15073:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15090:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15113:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "15095:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15095:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15083:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15083:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15083:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15061:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15068:3:9",
														"type": ""
													}
												],
												"src": "15018:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15197:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15214:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15237:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "15219:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15219:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15207:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15207:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15207:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15185:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15192:3:9",
														"type": ""
													}
												],
												"src": "15132:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15584:725:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15594:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15606:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15617:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15602:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15602:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15594:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15675:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15688:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15699:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15684:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15684:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15631:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15631:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15631:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15756:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15769:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15780:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15765:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15765:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15712:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15712:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15712:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15805:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15816:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15801:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15801:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15825:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15831:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15821:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15821:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15794:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15794:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15794:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15851:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15953:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15962:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15859:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15859:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15851:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15988:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15999:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15984:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15984:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16008:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16014:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16004:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16004:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15977:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15977:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15977:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16034:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16136:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16145:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16042:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16042:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16034:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16171:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16182:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16167:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16167:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16192:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16198:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16188:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16188:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16160:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16160:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16160:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16218:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16288:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16297:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16226:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16226:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16218:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15524:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15536:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15544:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15552:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15560:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15568:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15579:4:9",
														"type": ""
													}
												],
												"src": "15256:1053:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16543:523:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16553:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16565:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16576:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16561:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16561:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16553:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16634:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16647:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16658:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16643:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16643:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16590:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16590:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16590:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16715:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16728:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16739:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16724:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16724:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16671:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16671:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16671:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16797:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16810:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16821:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16806:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16806:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16753:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16753:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16753:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16879:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16892:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16903:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16888:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16888:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16835:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16835:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16835:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16928:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16939:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16924:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16949:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16955:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16945:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16945:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16917:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16917:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16917:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16975:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "17045:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17054:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16983:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16983:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16975:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16483:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "16495:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16503:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16511:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16519:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16527:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16538:4:9",
														"type": ""
													}
												],
												"src": "16315:751:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17220:225:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17230:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17242:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17253:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17238:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17238:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17230:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17277:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17288:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17273:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17273:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17296:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17302:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17292:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17292:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17266:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17266:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17266:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17322:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17424:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17433:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17330:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17330:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17322:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17192:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17204:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17215:4:9",
														"type": ""
													}
												],
												"src": "17072:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17677:408:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17687:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17699:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17710:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17695:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17695:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17687:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17734:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17745:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17730:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17730:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17753:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17759:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17749:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17749:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17723:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17723:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17723:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17779:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17881:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17890:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17787:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17787:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17779:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17916:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17927:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17912:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17912:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17936:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17942:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17932:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17932:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17905:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17905:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17905:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17962:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18064:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18073:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17970:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17970:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17962:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17641:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17653:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17661:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17672:4:9",
														"type": ""
													}
												],
												"src": "17451:634:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18183:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18193:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18205:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18216:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18201:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18201:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18193:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18267:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18280:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18291:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18276:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18276:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18229:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18229:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18229:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18155:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18167:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18178:4:9",
														"type": ""
													}
												],
												"src": "18091:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18425:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18435:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18447:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18458:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18443:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18443:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18435:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18482:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18493:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18478:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18478:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18501:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18507:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18497:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18497:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18471:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18471:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18471:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18527:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18599:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18608:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18535:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18535:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18527:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18397:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18409:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18420:4:9",
														"type": ""
													}
												],
												"src": "18307:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18797:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18807:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18819:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18830:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18815:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18815:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18807:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18854:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18865:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18850:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18850:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18873:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18879:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18869:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18869:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18843:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18843:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18843:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18899:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19033:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18907:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18907:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18899:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18777:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18792:4:9",
														"type": ""
													}
												],
												"src": "18626:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19222:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19232:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19244:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19255:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19240:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19240:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19232:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19279:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19290:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19275:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19275:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19298:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19304:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19294:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19294:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19268:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19268:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19268:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19324:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19458:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19332:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19332:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19324:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19202:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19217:4:9",
														"type": ""
													}
												],
												"src": "19051:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19647:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19657:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19669:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19680:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19665:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19665:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19657:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19704:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19715:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19700:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19700:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19723:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19729:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19719:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19719:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19693:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19693:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19693:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19749:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19883:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19757:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19757:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19749:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19627:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19642:4:9",
														"type": ""
													}
												],
												"src": "19476:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20072:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20082:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20094:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20105:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20090:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20090:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20082:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20129:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20140:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20125:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20125:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20148:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20154:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20144:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20144:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20118:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20118:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20118:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20174:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20308:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20182:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20182:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20174:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20052:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20067:4:9",
														"type": ""
													}
												],
												"src": "19901:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20497:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20507:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20519:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20530:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20515:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20515:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20507:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20554:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20565:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20550:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20550:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20573:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20579:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20569:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20569:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20543:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20543:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20543:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20599:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20733:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20607:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20607:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20599:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20477:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20492:4:9",
														"type": ""
													}
												],
												"src": "20326:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20922:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20932:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20944:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20955:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20940:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20940:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20932:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20979:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20990:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20975:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20975:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20998:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21004:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20994:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20994:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20968:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20968:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20968:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21024:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21158:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21032:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21032:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21024:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20902:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20917:4:9",
														"type": ""
													}
												],
												"src": "20751:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21347:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21357:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21369:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21380:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21365:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21365:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21357:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21404:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21415:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21400:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21400:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21423:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21429:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21419:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21419:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21393:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21393:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21393:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21449:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21583:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21457:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21457:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21449:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21327:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21342:4:9",
														"type": ""
													}
												],
												"src": "21176:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21772:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21782:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21794:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21805:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21790:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21790:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21782:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21829:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21840:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21825:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21825:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21848:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21854:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21844:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21844:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21818:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21818:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21818:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21874:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22008:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21882:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21882:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21874:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21752:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21767:4:9",
														"type": ""
													}
												],
												"src": "21601:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22197:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22207:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22219:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22230:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22215:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22215:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22207:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22254:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22265:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22250:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22250:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22273:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22279:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22269:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22269:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22243:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22243:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22243:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22299:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22433:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22307:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22307:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22299:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22177:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22192:4:9",
														"type": ""
													}
												],
												"src": "22026:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22549:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22559:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22571:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22582:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22567:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22567:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22559:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22639:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22652:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22663:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22648:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22648:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22595:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22595:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22595:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22521:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22533:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22544:4:9",
														"type": ""
													}
												],
												"src": "22451:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22805:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22815:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22827:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22838:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22823:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22823:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22815:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22895:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22908:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22919:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22904:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22904:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22851:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22851:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22851:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22976:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22989:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23000:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22985:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22985:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22932:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22932:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22932:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22769:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22781:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22789:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22800:4:9",
														"type": ""
													}
												],
												"src": "22679:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23058:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23068:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "23078:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23078:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "23068:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "23127:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "23135:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "23107:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23107:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23107:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23042:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23051:6:9",
														"type": ""
													}
												],
												"src": "23017:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23192:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23202:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23218:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23212:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23212:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "23202:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23185:6:9",
														"type": ""
													}
												],
												"src": "23152:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23315:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23420:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "23422:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23422:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23422:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23392:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23400:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23389:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23389:30:9"
															},
															"nodeType": "YulIf",
															"src": "23386:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23452:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23464:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23472:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "23460:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23460:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23452:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23514:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "23526:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23532:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23522:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23522:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23514:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23299:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23310:4:9",
														"type": ""
													}
												],
												"src": "23233:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23632:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23737:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "23739:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23739:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23739:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23709:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23717:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23706:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23706:30:9"
															},
															"nodeType": "YulIf",
															"src": "23703:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23769:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23781:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23789:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "23777:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23777:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23769:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23831:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "23843:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23849:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23839:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23839:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23831:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23616:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23627:4:9",
														"type": ""
													}
												],
												"src": "23550:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23933:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24038:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "24040:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24040:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24040:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24010:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24018:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24007:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24007:30:9"
															},
															"nodeType": "YulIf",
															"src": "24004:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24070:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24100:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "24078:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24078:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24070:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24144:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "24156:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24162:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24152:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24152:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24144:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23917:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23928:4:9",
														"type": ""
													}
												],
												"src": "23867:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24252:60:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24262:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "24270:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "24262:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24283:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "24295:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24300:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24291:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24291:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "24283:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "24239:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "24247:4:9",
														"type": ""
													}
												],
												"src": "24180:132:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24392:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24403:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24419:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24413:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24413:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24403:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24375:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24385:6:9",
														"type": ""
													}
												],
												"src": "24318:114:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24496:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24507:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24523:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24517:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24517:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24507:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24479:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24489:6:9",
														"type": ""
													}
												],
												"src": "24438:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24601:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24612:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24628:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24622:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24622:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24612:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24584:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24594:6:9",
														"type": ""
													}
												],
												"src": "24542:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24722:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24732:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "24744:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24749:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24740:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24740:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "24732:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "24709:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "24717:4:9",
														"type": ""
													}
												],
												"src": "24647:113:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24877:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24894:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24899:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24887:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24887:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24887:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24915:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24934:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24939:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24930:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24930:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24915:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24849:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24854:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24865:11:9",
														"type": ""
													}
												],
												"src": "24766:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25051:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25068:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25073:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25061:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25061:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25061:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25089:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25108:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25113:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25104:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25104:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25089:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25023:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25028:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25039:11:9",
														"type": ""
													}
												],
												"src": "24956:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25226:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25243:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25248:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25236:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25236:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25236:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25264:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25283:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25288:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25279:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25279:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25264:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25198:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25203:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25214:11:9",
														"type": ""
													}
												],
												"src": "25130:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25349:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25359:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25382:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25364:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25364:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25359:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25393:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25416:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25398:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25398:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25393:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25556:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25558:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25558:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25558:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25477:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25484:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25552:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25480:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25480:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25474:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25474:81:9"
															},
															"nodeType": "YulIf",
															"src": "25471:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25588:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25599:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25602:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25595:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25595:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "25588:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25336:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25339:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "25345:3:9",
														"type": ""
													}
												],
												"src": "25305:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25661:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25671:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25700:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "25682:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25682:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25671:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25643:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25653:7:9",
														"type": ""
													}
												],
												"src": "25616:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25760:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25770:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25795:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "25788:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25788:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25781:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25781:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25770:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25742:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25752:7:9",
														"type": ""
													}
												],
												"src": "25718:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25858:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25868:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25883:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25890:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25879:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25879:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25868:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25840:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25850:7:9",
														"type": ""
													}
												],
												"src": "25814:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26014:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26024:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26039:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26046:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26035:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26035:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26024:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25996:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26006:7:9",
														"type": ""
													}
												],
												"src": "25969:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26146:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26156:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "26167:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26156:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26128:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26138:7:9",
														"type": ""
													}
												],
												"src": "26101:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26235:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "26258:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "26263:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26268:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "26245:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26245:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26245:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "26316:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26321:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26312:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26312:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26330:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26305:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26305:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26305:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26217:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "26222:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26227:6:9",
														"type": ""
													}
												],
												"src": "26184:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26393:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26403:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26412:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "26407:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26472:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26497:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "26502:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26493:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26493:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "26516:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "26521:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "26512:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26512:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "26506:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26506:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26486:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26486:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26486:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26433:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26436:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26430:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26430:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "26444:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26446:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "26455:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26458:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "26451:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26451:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "26446:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "26426:3:9",
																"statements": []
															},
															"src": "26422:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26569:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26619:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "26624:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26615:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26615:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26633:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26608:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26608:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26608:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26550:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26553:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26547:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26547:13:9"
															},
															"nodeType": "YulIf",
															"src": "26544:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26375:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "26380:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26385:6:9",
														"type": ""
													}
												],
												"src": "26344:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26708:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26718:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "26732:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26738:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "26728:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26728:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26718:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26749:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "26779:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26785:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26775:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26775:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "26753:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26826:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26840:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "26854:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26862:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "26850:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26850:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26840:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "26806:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26799:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26799:26:9"
															},
															"nodeType": "YulIf",
															"src": "26796:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26929:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "26943:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26943:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26943:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "26893:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26916:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26924:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "26913:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26913:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "26890:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26890:38:9"
															},
															"nodeType": "YulIf",
															"src": "26887:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "26692:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26701:6:9",
														"type": ""
													}
												],
												"src": "26657:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27026:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27036:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "27058:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "27088:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "27066:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27066:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27054:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27054:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "27040:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27205:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "27207:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27207:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27207:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "27148:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27160:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "27145:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27145:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "27184:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27196:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "27181:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27181:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "27142:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27142:62:9"
															},
															"nodeType": "YulIf",
															"src": "27139:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27243:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "27247:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27236:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27236:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27236:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27012:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "27020:4:9",
														"type": ""
													}
												],
												"src": "26983:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27313:190:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27323:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27350:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27332:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27332:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "27323:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27446:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27448:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27448:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27448:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27371:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27378:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "27368:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27368:77:9"
															},
															"nodeType": "YulIf",
															"src": "27365:103:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27477:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27488:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27495:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27484:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27484:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "27477:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27299:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "27309:3:9",
														"type": ""
													}
												],
												"src": "27270:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27537:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27554:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27557:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27547:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27547:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27547:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27651:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27654:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27644:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27644:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27644:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27675:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27678:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27668:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27668:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27668:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "27509:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27723:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27740:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27743:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27733:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27733:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27733:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27837:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27840:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27830:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27830:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27830:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27861:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27864:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27854:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27854:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27854:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "27695:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27909:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27926:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27929:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27919:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27919:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27919:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28023:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28026:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28016:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28016:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28016:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28047:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28050:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28040:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28040:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28040:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "27881:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28095:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28112:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28115:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28105:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28105:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28105:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28209:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28212:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28202:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28202:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28202:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28233:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28236:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28226:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28226:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28226:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "28067:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28292:144:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28329:101:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28358:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28361:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28364:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "28343:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28343:23:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28343:23:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "28379:41:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "28417:1:9",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "28411:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "28411:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "28386:24:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28386:34:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "28379:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "28308:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28308:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28326:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "28305:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28305:23:9"
															},
															"nodeType": "YulIf",
															"src": "28302:128:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "28288:3:9",
														"type": ""
													}
												],
												"src": "28253:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28531:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28548:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28551:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28541:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28541:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28541:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "28442:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28654:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28671:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28674:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28664:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28664:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28664:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "28565:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28777:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28794:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28797:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28787:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28787:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28787:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "28688:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28900:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28917:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28920:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28910:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28910:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28910:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "28811:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29023:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29040:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29043:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29033:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29033:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29033:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "28934:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29105:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29115:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29133:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29140:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29129:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29129:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29149:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "29145:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29145:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "29125:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29125:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "29115:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29088:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "29098:6:9",
														"type": ""
													}
												],
												"src": "29057:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29218:53:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29228:36:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29253:3:9",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29258:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "29249:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29249:15:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "29228:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29199:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "29209:8:9",
														"type": ""
													}
												],
												"src": "29165:106:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29383:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29405:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29413:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29401:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29401:14:9"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29417:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29394:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29394:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29394:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29473:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29481:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29469:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29469:15:9"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29486:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29462:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29462:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29462:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29375:6:9",
														"type": ""
													}
												],
												"src": "29277:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29616:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29638:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29646:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29634:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29634:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29650:34:9",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29627:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29627:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29627:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29706:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29714:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29702:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29702:15:9"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29719:12:9",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29695:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29695:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29608:6:9",
														"type": ""
													}
												],
												"src": "29510:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29851:127:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29873:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29881:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29869:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29869:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29885:34:9",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29862:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29862:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29862:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29941:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29949:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29937:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29937:15:9"
																	},
																	{
																		"hexValue": "6572206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29954:16:9",
																		"type": "",
																		"value": "er or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29930:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29930:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29930:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29843:6:9",
														"type": ""
													}
												],
												"src": "29745:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30090:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30112:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30120:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30108:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30108:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30124:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30101:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30101:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30101:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30180:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30188:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30176:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30176:15:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30193:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30169:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30169:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30169:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30082:6:9",
														"type": ""
													}
												],
												"src": "29984:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30320:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30342:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30350:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30338:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30338:14:9"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30354:34:9",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30331:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30331:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30331:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30410:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30418:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30406:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30406:15:9"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30423:12:9",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30399:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30399:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30399:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30312:6:9",
														"type": ""
													}
												],
												"src": "30214:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30555:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30577:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30585:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30573:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30573:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30589:34:9",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30566:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30566:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30566:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30645:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30653:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30641:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30641:15:9"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30658:11:9",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30634:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30634:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30634:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30547:6:9",
														"type": ""
													}
												],
												"src": "30449:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30789:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30811:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30819:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30807:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30807:14:9"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30823:34:9",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30800:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30800:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30800:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30879:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30887:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30875:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30875:15:9"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30892:11:9",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30868:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30868:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30868:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30781:6:9",
														"type": ""
													}
												],
												"src": "30683:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31023:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31045:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31053:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31041:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31041:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31057:34:9",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31034:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31034:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31034:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31113:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31121:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31109:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31109:15:9"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31126:10:9",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31102:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31102:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31102:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31015:6:9",
														"type": ""
													}
												],
												"src": "30917:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31256:133:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31278:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31286:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31274:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31274:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31290:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non-ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31267:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31267:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31267:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31346:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31354:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31342:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31342:15:9"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31359:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31335:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31335:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31335:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31248:6:9",
														"type": ""
													}
												],
												"src": "31150:239:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31438:668:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31478:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "31480:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "31454:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31454:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31472:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "31451:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31451:26:9"
															},
															"nodeType": "YulIf",
															"src": "31448:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31497:32:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "31509:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31509:20:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "31501:4:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "31553:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31559:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "31566:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31566:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31584:1:9",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31562:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31562:24:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "31538:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31538:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31538:49:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31597:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "31617:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "31611:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31611:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "31601:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31748:29:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "31762:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "31653:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31661:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "31650:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31650:30:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "31701:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "31709:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "31697:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31697:17:9"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "31716:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31716:16:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "31694:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31694:39:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "31634:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31634:113:9"
															},
															"nodeType": "YulIf",
															"src": "31631:146:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31787:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "31802:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "31808:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31798:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31798:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "31791:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31824:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "31844:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "31838:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31838:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "31828:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31891:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "31893:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31863:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31871:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "31860:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31860:30:9"
															},
															"nodeType": "YulIf",
															"src": "31857:43:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31910:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "31929:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31934:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31925:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31925:14:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31941:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31921:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31921:27:9"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "31914:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32005:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "32007:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "31963:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "31972:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "31982:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "31982:16:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "32000:1:9",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "31978:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31978:24:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31968:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31968:35:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "31960:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31960:44:9"
															},
															"nodeType": "YulIf",
															"src": "31957:57:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "32044:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "32054:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "32066:4:9",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "32072:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "32062:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32062:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32050:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32050:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "32024:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32024:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32024:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32090:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "32097:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "32090:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "31434:3:9",
														"type": ""
													}
												],
												"src": "31395:711:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32155:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32212:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32221:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32224:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32214:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32214:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32214:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32178:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32203:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "32185:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32185:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32175:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32175:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32168:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32168:43:9"
															},
															"nodeType": "YulIf",
															"src": "32165:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32148:5:9",
														"type": ""
													}
												],
												"src": "32112:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32280:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32334:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32343:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32346:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32336:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32336:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32336:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32303:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32325:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "32310:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32310:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32300:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32300:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32293:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32293:40:9"
															},
															"nodeType": "YulIf",
															"src": "32290:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32273:5:9",
														"type": ""
													}
												],
												"src": "32240:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32404:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32460:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32469:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32472:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32462:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32462:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32462:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32427:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32451:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "32434:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32434:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32424:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32424:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32417:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32417:42:9"
															},
															"nodeType": "YulIf",
															"src": "32414:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32397:5:9",
														"type": ""
													}
												],
												"src": "32362:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32531:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32588:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32597:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32600:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "32590:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32590:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32590:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32554:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32579:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "32561:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32561:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "32551:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32551:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32544:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32544:43:9"
															},
															"nodeType": "YulIf",
															"src": "32541:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32524:5:9",
														"type": ""
													}
												],
												"src": "32488:122:9"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: address zero is not a v\")\n\n        mstore(add(memPtr, 32), \"alid owner\")\n\n    }\n\n    function store_literal_in_memory_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not token own\")\n\n        mstore(add(memPtr, 32), \"er or approved\")\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function store_literal_in_memory_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non-ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1767 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x714 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x1FAC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x403 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP6 PUSH2 0x457 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x786 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x513 JUMPI PUSH2 0x512 PUSH2 0x20E5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x541 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x58E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x566 JUMPI PUSH2 0x565 PUSH2 0x20B6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x20B6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x20B6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B7 SWAP1 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP PUSH2 0x547 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x5D4 PUSH2 0x77E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAA8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67B PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C1 JUMPI POP PUSH2 0x6C0 DUP6 PUSH2 0x6BB PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC15 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C1 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x844 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH2 0x854 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x20B6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0x20B6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FE SWAP1 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP PUSH2 0x857 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7C SWAP3 SWAP2 SWAP1 PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA92 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xAA0 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7C SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8F PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC9C DUP6 PUSH2 0x10A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA9 DUP6 PUSH2 0x10A8 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB9 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE82 SWAP3 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE98 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xEA6 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1122 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEE0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1309 JUMP JUMPDEST ISZERO PUSH2 0x10A0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF71 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF6E SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1017 JUMPI PUSH2 0xF7D PUSH2 0x2114 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xFDA JUMPI POP PUSH2 0xF92 PUSH2 0x2434 JUMP JUMPDEST DUP1 PUSH2 0xF9D JUMPI POP PUSH2 0xFDC JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100E SWAP1 PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1095 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10C7 JUMPI PUSH2 0x10C6 PUSH2 0x20E5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10F5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x110D JUMPI PUSH2 0x110C PUSH2 0x20B6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1141 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1309 JUMP JUMPDEST ISZERO PUSH2 0x1301 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B2D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11D2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11CF SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1278 JUMPI PUSH2 0x11DE PUSH2 0x2114 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x123B JUMPI POP PUSH2 0x11F3 PUSH2 0x2434 JUMP JUMPDEST DUP1 PUSH2 0x11FE JUMPI POP PUSH2 0x123D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1232 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126F SWAP1 PUSH2 0x1D1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F6 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133F PUSH2 0x133A DUP5 PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0x1D81 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1362 JUMPI PUSH2 0x1361 PUSH2 0x213B JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1392 JUMPI DUP2 PUSH2 0x1378 DUP9 DUP3 PUSH2 0x144E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1365 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13AF PUSH2 0x13AA DUP5 PUSH2 0x1DD2 JUMP JUMPDEST PUSH2 0x1D81 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x213B JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1402 JUMPI DUP2 PUSH2 0x13E8 DUP9 DUP3 PUSH2 0x152C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x13D5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141F PUSH2 0x141A DUP5 PUSH2 0x1DFE JUMP JUMPDEST PUSH2 0x1D81 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x143B JUMPI PUSH2 0x143A PUSH2 0x2140 JUMP JUMPDEST JUMPDEST PUSH2 0x1446 DUP5 DUP3 DUP6 PUSH2 0x1F6A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x145D DUP2 PUSH2 0x24CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1478 JUMPI PUSH2 0x1477 PUSH2 0x2136 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1488 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x132C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14A6 JUMPI PUSH2 0x14A5 PUSH2 0x2136 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14B6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x139C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14CE DUP2 PUSH2 0x24E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E3 DUP2 PUSH2 0x24F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14F8 DUP2 PUSH2 0x24F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1513 JUMPI PUSH2 0x1512 PUSH2 0x2136 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1523 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x140C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x153B DUP2 PUSH2 0x250F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1558 JUMPI PUSH2 0x1557 PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1566 DUP6 DUP3 DUP7 ADD PUSH2 0x144E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1577 DUP6 DUP3 DUP7 ADD PUSH2 0x144E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x159D JUMPI PUSH2 0x159C PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15AB DUP9 DUP3 DUP10 ADD PUSH2 0x144E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x15BC DUP9 DUP3 DUP10 ADD PUSH2 0x144E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DC PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x15E9 DUP9 DUP3 DUP10 ADD PUSH2 0x1491 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x160A JUMPI PUSH2 0x1609 PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x1616 DUP9 DUP3 DUP10 ADD PUSH2 0x1491 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1637 JUMPI PUSH2 0x1636 PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x1643 DUP9 DUP3 DUP10 ADD PUSH2 0x14FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x166C JUMPI PUSH2 0x166B PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x167A DUP9 DUP3 DUP10 ADD PUSH2 0x144E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x168B DUP9 DUP3 DUP10 ADD PUSH2 0x144E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x169C DUP9 DUP3 DUP10 ADD PUSH2 0x152C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x16AD DUP9 DUP3 DUP10 ADD PUSH2 0x152C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16CE JUMPI PUSH2 0x16CD PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x16DA DUP9 DUP3 DUP10 ADD PUSH2 0x14FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16FE JUMPI PUSH2 0x16FD PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x170C DUP6 DUP3 DUP7 ADD PUSH2 0x144E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x171D DUP6 DUP3 DUP7 ADD PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x173E JUMPI PUSH2 0x173D PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x174C DUP6 DUP3 DUP7 ADD PUSH2 0x144E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x175D DUP6 DUP3 DUP7 ADD PUSH2 0x152C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x177E JUMPI PUSH2 0x177D PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179C JUMPI PUSH2 0x179B PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x17A8 DUP6 DUP3 DUP7 ADD PUSH2 0x1463 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17C9 JUMPI PUSH2 0x17C8 PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x17D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1491 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F5 JUMPI PUSH2 0x17F4 PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1803 DUP5 DUP3 DUP6 ADD PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1822 JUMPI PUSH2 0x1821 PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1830 DUP5 DUP3 DUP6 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x184F JUMPI PUSH2 0x184E PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x185D DUP5 DUP3 DUP6 ADD PUSH2 0x152C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1872 DUP4 DUP4 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1887 DUP2 PUSH2 0x1EF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1898 DUP3 PUSH2 0x1E3F JUMP JUMPDEST PUSH2 0x18A2 DUP2 DUP6 PUSH2 0x1E6D JUMP JUMPDEST SWAP4 POP PUSH2 0x18AD DUP4 PUSH2 0x1E2F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18DE JUMPI DUP2 MLOAD PUSH2 0x18C5 DUP9 DUP3 PUSH2 0x1866 JUMP JUMPDEST SWAP8 POP PUSH2 0x18D0 DUP4 PUSH2 0x1E60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18B1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18F4 DUP2 PUSH2 0x1F08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1905 DUP3 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x190F DUP2 DUP6 PUSH2 0x1E7E JUMP JUMPDEST SWAP4 POP PUSH2 0x191F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F79 JUMP JUMPDEST PUSH2 0x1928 DUP2 PUSH2 0x214F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193E DUP3 PUSH2 0x1E55 JUMP JUMPDEST PUSH2 0x1948 DUP2 DUP6 PUSH2 0x1E8F JUMP JUMPDEST SWAP4 POP PUSH2 0x1958 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F79 JUMP JUMPDEST PUSH2 0x1961 DUP2 PUSH2 0x214F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1979 PUSH1 0x28 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1984 DUP3 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x199C PUSH1 0x2A DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x19A7 DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BF PUSH1 0x2E DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x19CA DUP3 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E2 PUSH1 0x25 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x19ED DUP3 PUSH2 0x225A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A05 PUSH1 0x2A DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A10 DUP3 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A28 PUSH1 0x29 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A33 DUP3 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4B PUSH1 0x29 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A56 DUP3 PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6E PUSH1 0x28 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A79 DUP3 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A91 PUSH1 0x34 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9C DUP3 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB0 DUP2 PUSH2 0x1F60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1ABF DUP2 PUSH2 0x1F60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1ADA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x187E JUMP JUMPDEST PUSH2 0x1AE7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x187E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1AF9 DUP2 DUP7 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B0D DUP2 DUP6 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B21 DUP2 DUP5 PUSH2 0x18FA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1B42 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x187E JUMP JUMPDEST PUSH2 0x1B4F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x187E JUMP JUMPDEST PUSH2 0x1B5C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1B69 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1AB6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B7B DUP2 DUP5 PUSH2 0x18FA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BA1 DUP2 DUP5 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BC3 DUP2 DUP6 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1BD7 DUP2 DUP5 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C15 DUP2 DUP5 PUSH2 0x1933 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C36 DUP2 PUSH2 0x196C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C56 DUP2 PUSH2 0x198F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x19D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB6 DUP2 PUSH2 0x19F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD6 DUP2 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF6 DUP2 PUSH2 0x1A3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D16 DUP2 PUSH2 0x1A61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D36 DUP2 PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D6D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1D7A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AB6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8B PUSH2 0x1D9C JUMP JUMPDEST SWAP1 POP PUSH2 0x1D97 DUP3 DUP3 PUSH2 0x1FDE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DC1 JUMPI PUSH2 0x1DC0 PUSH2 0x20E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DED JUMPI PUSH2 0x1DEC PUSH2 0x20E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E19 JUMPI PUSH2 0x1E18 PUSH2 0x20E5 JUMP JUMPDEST JUMPDEST PUSH2 0x1E22 DUP3 PUSH2 0x214F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAB DUP3 PUSH2 0x1F60 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB6 DUP4 PUSH2 0x1F60 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EEB JUMPI PUSH2 0x1EEA PUSH2 0x2058 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F01 DUP3 PUSH2 0x1F40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F97 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F7C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1FA6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FC4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x2087 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE7 DUP3 PUSH2 0x214F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2006 JUMPI PUSH2 0x2005 PUSH2 0x20E5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201A DUP3 PUSH2 0x1F60 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x204D JUMPI PUSH2 0x204C PUSH2 0x2058 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2133 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2130 PUSH1 0x0 MLOAD PUSH2 0x2160 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2444 JUMPI PUSH2 0x24C7 JUMP JUMPDEST PUSH2 0x244C PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2474 JUMPI POP POP PUSH2 0x24C7 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2492 JUMPI POP POP POP POP PUSH2 0x24C7 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x24AF JUMPI POP POP POP POP POP PUSH2 0x24C7 JUMP JUMPDEST PUSH2 0x24BE DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x1FDE JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x24D3 DUP2 PUSH2 0x1EF6 JUMP JUMPDEST DUP2 EQ PUSH2 0x24DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24EA DUP2 PUSH2 0x1F08 JUMP JUMPDEST DUP2 EQ PUSH2 0x24F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2501 DUP2 PUSH2 0x1F14 JUMP JUMPDEST DUP2 EQ PUSH2 0x250C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2518 DUP2 PUSH2 0x1F60 JUMP JUMPDEST DUP2 EQ PUSH2 0x2523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF BYTE SUB PUSH14 0x8409D69AC76667F69DBA7D8B528D CREATE JUMP EXTCODECOPY SHL ADD REVERT 0xEB 0xED LOG2 SWAP14 SWAP10 0xBA BALANCE EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "570:16689:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1236:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1940:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4064:426;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2569:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3145:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3365:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3598:394;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:227;2271:7;2317:1;2298:21;;:7;:21;;;;2290:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2383:9;:13;2393:2;2383:13;;;;;;;;;;;:22;2397:7;2383:22;;;;;;;;;;;;;;;;2376:29;;2185:227;;;;:::o;1236:305::-;1338:4;1388:26;1373:41;;;:11;:41;;;;:109;;;;1445:37;1430:52;;;:11;:52;;;;1373:109;:161;;;;1498:36;1522:11;1498:23;:36::i;:::-;1373:161;1354:180;;1236:305;;;:::o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4064:426::-;4297:12;:10;:12::i;:::-;4289:20;;:4;:20;;;:60;;;;4313:36;4330:4;4336:12;:10;:12::i;:::-;4313:16;:36::i;:::-;4289:60;4268:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;:::-;4064:426;;;;;:::o;2569:508::-;2720:16;2779:3;:10;2760:8;:15;:29;2752:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2846:30;2893:8;:15;2879:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2846:63;;2925:9;2920:120;2944:8;:15;2940:1;:19;2920:120;;;2999:30;3009:8;3018:1;3009:11;;;;;;;;:::i;:::-;;;;;;;;3022:3;3026:1;3022:6;;;;;;;;:::i;:::-;;;;;;;;2999:9;:30::i;:::-;2980:13;2994:1;2980:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;2961:3;;;;:::i;:::-;;;2920:120;;;;3057:13;3050:20;;;2569:508;;;;:::o;3145:153::-;3239:52;3258:12;:10;:12::i;:::-;3272:8;3282;3239:18;:52::i;:::-;3145:153;;:::o;3365:166::-;3464:4;3487:18;:27;3506:7;3487:27;;;;;;;;;;;;;;;:37;3515:8;3487:37;;;;;;;;;;;;;;;;;;;;;;;;;3480:44;;3365:166;;;;:::o;3598:394::-;3806:12;:10;:12::i;:::-;3798:20;;:4;:20;;;:60;;;;3822:36;3839:4;3845:12;:10;:12::i;:::-;3822:16;:36::i;:::-;3798:60;3777:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;3940:45;3958:4;3964:2;3968;3972:6;3980:4;3940:17;:45::i;:::-;3598:394;;;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;6233:1115:0:-;6453:7;:14;6439:3;:10;:28;6431:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6544:1;6530:16;;:2;:16;;;;6522:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6599:16;6618:12;:10;:12::i;:::-;6599:31;;6641:60;6662:8;6672:4;6678:2;6682:3;6687:7;6696:4;6641:20;:60::i;:::-;6717:9;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;6800:27;;6842:19;6864:9;:13;6874:2;6864:13;;;;;;;;;;;:19;6878:4;6864:19;;;;;;;;;;;;;;;;6842:41;;6920:6;6905:11;:21;;6897:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7051:6;7037:11;:20;7015:9;:13;7025:2;7015:13;;;;;;;;;;;:19;7029:4;7015:19;;;;;;;;;;;;;;;:42;;;;7106:6;7085:9;:13;7095:2;7085:13;;;;;;;;;;;:17;7099:2;7085:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;7138:47;;7162:4;7138:47;;7152:8;7138:47;;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7196:59;7216:8;7226:4;7232:2;7236:3;7241:7;7250:4;7196:19;:59::i;:::-;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;12910:323::-;13060:8;13051:17;;:5;:17;;;;13043:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;13162:8;13124:18;:25;13143:5;13124:25;;;;;;;;;;;;;;;:35;13150:8;13124:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13207:8;13185:41;;13200:5;13185:41;;;13217:8;13185:41;;;;;;:::i;:::-;;;;;;;;12910:323;;;:::o;4940:947::-;5135:1;5121:16;;:2;:16;;;;5113:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5190:16;5209:12;:10;:12::i;:::-;5190:31;;5231:20;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5348:60;5369:8;5379:4;5385:2;5389:3;5394:7;5403:4;5348:20;:60::i;:::-;5419:19;5441:9;:13;5451:2;5441:13;;;;;;;;;;;:19;5455:4;5441:19;;;;;;;;;;;;;;;;5419:41;;5493:6;5478:11;:21;;5470:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5616:6;5602:11;:20;5580:9;:13;5590:2;5580:13;;;;;;;;;;;:19;5594:4;5580:19;;;;;;;;;;;;;;;:42;;;;5663:6;5642:9;:13;5652:2;5642:13;;;;;;;;;;;:17;5656:2;5642:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5716:2;5685:46;;5710:4;5685:46;;5700:8;5685:46;;;5720:2;5724:6;5685:46;;;;;;;:::i;:::-;;;;;;;;5742:59;5762:8;5772:4;5778:2;5782:3;5787:7;5796:4;5742:19;:59::i;:::-;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;14169:214::-;;;;;;;:::o;15316:213::-;;;;;;;:::o;16266:792::-;16498:15;:2;:13;;;:15::i;:::-;16494:558;;;16550:2;16533:43;;;16577:8;16587:4;16593:3;16598:7;16607:4;16533:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16529:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16918:6;16911:14;;;;;;;;;;;:::i;:::-;;;;;;;;16529:513;;;16965:62;;;;;;;;;;:::i;:::-;;;;;;;;16529:513;16703:48;;;16691:60;;;:8;:60;;;;16687:157;;16775:50;;;;;;;;;;:::i;:::-;;;;;;;;16687:157;16613:245;16494:558;16266:792;;;;;;:::o;17064:193::-;17130:16;17158:22;17197:1;17183:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17158:41;;17220:7;17209:5;17215:1;17209:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;17245:5;17238:12;;;17064:193;;;:::o;15535:725::-;15742:15;:2;:13;;;:15::i;:::-;15738:516;;;15794:2;15777:38;;;15816:8;15826:4;15832:2;15836:6;15844:4;15777:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15773:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16120:6;16113:14;;;;;;;;;;;:::i;:::-;;;;;;;;15773:471;;;16167:62;;;;;;;;;;:::i;:::-;;;;;;;;15773:471;15910:43;;;15898:55;;;:8;:55;;;;15894:152;;15977:50;;;;;;;;;;:::i;:::-;;;;;;;;15894:152;15850:210;15738:516;15535:725;;;;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;24:722:9:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;769:::-;865:5;890:81;906:64;963:6;906:64;:::i;:::-;890:81;:::i;:::-;881:90;;991:5;1020:6;1013:5;1006:21;1054:4;1047:5;1043:16;1036:23;;1080:6;1130:3;1122:4;1114:6;1110:17;1105:3;1101:27;1098:36;1095:143;;;1149:79;;:::i;:::-;1095:143;1262:1;1247:238;1272:6;1269:1;1266:13;1247:238;;;1340:3;1369:37;1402:3;1390:10;1369:37;:::i;:::-;1364:3;1357:50;1436:4;1431:3;1427:14;1420:21;;1470:4;1465:3;1461:14;1454:21;;1307:178;1294:1;1291;1287:9;1282:14;;1247:238;;;1251:14;871:620;;769:722;;;;;:::o;1497:410::-;1574:5;1599:65;1615:48;1656:6;1615:48;:::i;:::-;1599:65;:::i;:::-;1590:74;;1687:6;1680:5;1673:21;1725:4;1718:5;1714:16;1763:3;1754:6;1749:3;1745:16;1742:25;1739:112;;;1770:79;;:::i;:::-;1739:112;1860:41;1894:6;1889:3;1884;1860:41;:::i;:::-;1580:327;1497:410;;;;;:::o;1913:139::-;1959:5;1997:6;1984:20;1975:29;;2013:33;2040:5;2013:33;:::i;:::-;1913:139;;;;:::o;2075:370::-;2146:5;2195:3;2188:4;2180:6;2176:17;2172:27;2162:122;;2203:79;;:::i;:::-;2162:122;2320:6;2307:20;2345:94;2435:3;2427:6;2420:4;2412:6;2408:17;2345:94;:::i;:::-;2336:103;;2152:293;2075:370;;;;:::o;2468:::-;2539:5;2588:3;2581:4;2573:6;2569:17;2565:27;2555:122;;2596:79;;:::i;:::-;2555:122;2713:6;2700:20;2738:94;2828:3;2820:6;2813:4;2805:6;2801:17;2738:94;:::i;:::-;2729:103;;2545:293;2468:370;;;;:::o;2844:133::-;2887:5;2925:6;2912:20;2903:29;;2941:30;2965:5;2941:30;:::i;:::-;2844:133;;;;:::o;2983:137::-;3028:5;3066:6;3053:20;3044:29;;3082:32;3108:5;3082:32;:::i;:::-;2983:137;;;;:::o;3126:141::-;3182:5;3213:6;3207:13;3198:22;;3229:32;3255:5;3229:32;:::i;:::-;3126:141;;;;:::o;3286:338::-;3341:5;3390:3;3383:4;3375:6;3371:17;3367:27;3357:122;;3398:79;;:::i;:::-;3357:122;3515:6;3502:20;3540:78;3614:3;3606:6;3599:4;3591:6;3587:17;3540:78;:::i;:::-;3531:87;;3347:277;3286:338;;;;:::o;3630:139::-;3676:5;3714:6;3701:20;3692:29;;3730:33;3757:5;3730:33;:::i;:::-;3630:139;;;;:::o;3775:474::-;3843:6;3851;3900:2;3888:9;3879:7;3875:23;3871:32;3868:119;;;3906:79;;:::i;:::-;3868:119;4026:1;4051:53;4096:7;4087:6;4076:9;4072:22;4051:53;:::i;:::-;4041:63;;3997:117;4153:2;4179:53;4224:7;4215:6;4204:9;4200:22;4179:53;:::i;:::-;4169:63;;4124:118;3775:474;;;;;:::o;4255:1509::-;4409:6;4417;4425;4433;4441;4490:3;4478:9;4469:7;4465:23;4461:33;4458:120;;;4497:79;;:::i;:::-;4458:120;4617:1;4642:53;4687:7;4678:6;4667:9;4663:22;4642:53;:::i;:::-;4632:63;;4588:117;4744:2;4770:53;4815:7;4806:6;4795:9;4791:22;4770:53;:::i;:::-;4760:63;;4715:118;4900:2;4889:9;4885:18;4872:32;4931:18;4923:6;4920:30;4917:117;;;4953:79;;:::i;:::-;4917:117;5058:78;5128:7;5119:6;5108:9;5104:22;5058:78;:::i;:::-;5048:88;;4843:303;5213:2;5202:9;5198:18;5185:32;5244:18;5236:6;5233:30;5230:117;;;5266:79;;:::i;:::-;5230:117;5371:78;5441:7;5432:6;5421:9;5417:22;5371:78;:::i;:::-;5361:88;;5156:303;5526:3;5515:9;5511:19;5498:33;5558:18;5550:6;5547:30;5544:117;;;5580:79;;:::i;:::-;5544:117;5685:62;5739:7;5730:6;5719:9;5715:22;5685:62;:::i;:::-;5675:72;;5469:288;4255:1509;;;;;;;;:::o;5770:1089::-;5874:6;5882;5890;5898;5906;5955:3;5943:9;5934:7;5930:23;5926:33;5923:120;;;5962:79;;:::i;:::-;5923:120;6082:1;6107:53;6152:7;6143:6;6132:9;6128:22;6107:53;:::i;:::-;6097:63;;6053:117;6209:2;6235:53;6280:7;6271:6;6260:9;6256:22;6235:53;:::i;:::-;6225:63;;6180:118;6337:2;6363:53;6408:7;6399:6;6388:9;6384:22;6363:53;:::i;:::-;6353:63;;6308:118;6465:2;6491:53;6536:7;6527:6;6516:9;6512:22;6491:53;:::i;:::-;6481:63;;6436:118;6621:3;6610:9;6606:19;6593:33;6653:18;6645:6;6642:30;6639:117;;;6675:79;;:::i;:::-;6639:117;6780:62;6834:7;6825:6;6814:9;6810:22;6780:62;:::i;:::-;6770:72;;6564:288;5770:1089;;;;;;;;:::o;6865:468::-;6930:6;6938;6987:2;6975:9;6966:7;6962:23;6958:32;6955:119;;;6993:79;;:::i;:::-;6955:119;7113:1;7138:53;7183:7;7174:6;7163:9;7159:22;7138:53;:::i;:::-;7128:63;;7084:117;7240:2;7266:50;7308:7;7299:6;7288:9;7284:22;7266:50;:::i;:::-;7256:60;;7211:115;6865:468;;;;;:::o;7339:474::-;7407:6;7415;7464:2;7452:9;7443:7;7439:23;7435:32;7432:119;;;7470:79;;:::i;:::-;7432:119;7590:1;7615:53;7660:7;7651:6;7640:9;7636:22;7615:53;:::i;:::-;7605:63;;7561:117;7717:2;7743:53;7788:7;7779:6;7768:9;7764:22;7743:53;:::i;:::-;7733:63;;7688:118;7339:474;;;;;:::o;7819:894::-;7937:6;7945;7994:2;7982:9;7973:7;7969:23;7965:32;7962:119;;;8000:79;;:::i;:::-;7962:119;8148:1;8137:9;8133:17;8120:31;8178:18;8170:6;8167:30;8164:117;;;8200:79;;:::i;:::-;8164:117;8305:78;8375:7;8366:6;8355:9;8351:22;8305:78;:::i;:::-;8295:88;;8091:302;8460:2;8449:9;8445:18;8432:32;8491:18;8483:6;8480:30;8477:117;;;8513:79;;:::i;:::-;8477:117;8618:78;8688:7;8679:6;8668:9;8664:22;8618:78;:::i;:::-;8608:88;;8403:303;7819:894;;;;;:::o;8719:327::-;8777:6;8826:2;8814:9;8805:7;8801:23;8797:32;8794:119;;;8832:79;;:::i;:::-;8794:119;8952:1;8977:52;9021:7;9012:6;9001:9;8997:22;8977:52;:::i;:::-;8967:62;;8923:116;8719:327;;;;:::o;9052:349::-;9121:6;9170:2;9158:9;9149:7;9145:23;9141:32;9138:119;;;9176:79;;:::i;:::-;9138:119;9296:1;9321:63;9376:7;9367:6;9356:9;9352:22;9321:63;:::i;:::-;9311:73;;9267:127;9052:349;;;;:::o;9407:329::-;9466:6;9515:2;9503:9;9494:7;9490:23;9486:32;9483:119;;;9521:79;;:::i;:::-;9483:119;9641:1;9666:53;9711:7;9702:6;9691:9;9687:22;9666:53;:::i;:::-;9656:63;;9612:117;9407:329;;;;:::o;9742:179::-;9811:10;9832:46;9874:3;9866:6;9832:46;:::i;:::-;9910:4;9905:3;9901:14;9887:28;;9742:179;;;;:::o;9927:118::-;10014:24;10032:5;10014:24;:::i;:::-;10009:3;10002:37;9927:118;;:::o;10081:732::-;10200:3;10229:54;10277:5;10229:54;:::i;:::-;10299:86;10378:6;10373:3;10299:86;:::i;:::-;10292:93;;10409:56;10459:5;10409:56;:::i;:::-;10488:7;10519:1;10504:284;10529:6;10526:1;10523:13;10504:284;;;10605:6;10599:13;10632:63;10691:3;10676:13;10632:63;:::i;:::-;10625:70;;10718:60;10771:6;10718:60;:::i;:::-;10708:70;;10564:224;10551:1;10548;10544:9;10539:14;;10504:284;;;10508:14;10804:3;10797:10;;10205:608;;;10081:732;;;;:::o;10819:109::-;10900:21;10915:5;10900:21;:::i;:::-;10895:3;10888:34;10819:109;;:::o;10934:360::-;11020:3;11048:38;11080:5;11048:38;:::i;:::-;11102:70;11165:6;11160:3;11102:70;:::i;:::-;11095:77;;11181:52;11226:6;11221:3;11214:4;11207:5;11203:16;11181:52;:::i;:::-;11258:29;11280:6;11258:29;:::i;:::-;11253:3;11249:39;11242:46;;11024:270;10934:360;;;;:::o;11300:364::-;11388:3;11416:39;11449:5;11416:39;:::i;:::-;11471:71;11535:6;11530:3;11471:71;:::i;:::-;11464:78;;11551:52;11596:6;11591:3;11584:4;11577:5;11573:16;11551:52;:::i;:::-;11628:29;11650:6;11628:29;:::i;:::-;11623:3;11619:39;11612:46;;11392:272;11300:364;;;;:::o;11670:366::-;11812:3;11833:67;11897:2;11892:3;11833:67;:::i;:::-;11826:74;;11909:93;11998:3;11909:93;:::i;:::-;12027:2;12022:3;12018:12;12011:19;;11670:366;;;:::o;12042:::-;12184:3;12205:67;12269:2;12264:3;12205:67;:::i;:::-;12198:74;;12281:93;12370:3;12281:93;:::i;:::-;12399:2;12394:3;12390:12;12383:19;;12042:366;;;:::o;12414:::-;12556:3;12577:67;12641:2;12636:3;12577:67;:::i;:::-;12570:74;;12653:93;12742:3;12653:93;:::i;:::-;12771:2;12766:3;12762:12;12755:19;;12414:366;;;:::o;12786:::-;12928:3;12949:67;13013:2;13008:3;12949:67;:::i;:::-;12942:74;;13025:93;13114:3;13025:93;:::i;:::-;13143:2;13138:3;13134:12;13127:19;;12786:366;;;:::o;13158:::-;13300:3;13321:67;13385:2;13380:3;13321:67;:::i;:::-;13314:74;;13397:93;13486:3;13397:93;:::i;:::-;13515:2;13510:3;13506:12;13499:19;;13158:366;;;:::o;13530:::-;13672:3;13693:67;13757:2;13752:3;13693:67;:::i;:::-;13686:74;;13769:93;13858:3;13769:93;:::i;:::-;13887:2;13882:3;13878:12;13871:19;;13530:366;;;:::o;13902:::-;14044:3;14065:67;14129:2;14124:3;14065:67;:::i;:::-;14058:74;;14141:93;14230:3;14141:93;:::i;:::-;14259:2;14254:3;14250:12;14243:19;;13902:366;;;:::o;14274:::-;14416:3;14437:67;14501:2;14496:3;14437:67;:::i;:::-;14430:74;;14513:93;14602:3;14513:93;:::i;:::-;14631:2;14626:3;14622:12;14615:19;;14274:366;;;:::o;14646:::-;14788:3;14809:67;14873:2;14868:3;14809:67;:::i;:::-;14802:74;;14885:93;14974:3;14885:93;:::i;:::-;15003:2;14998:3;14994:12;14987:19;;14646:366;;;:::o;15018:108::-;15095:24;15113:5;15095:24;:::i;:::-;15090:3;15083:37;15018:108;;:::o;15132:118::-;15219:24;15237:5;15219:24;:::i;:::-;15214:3;15207:37;15132:118;;:::o;15256:1053::-;15579:4;15617:3;15606:9;15602:19;15594:27;;15631:71;15699:1;15688:9;15684:17;15675:6;15631:71;:::i;:::-;15712:72;15780:2;15769:9;15765:18;15756:6;15712:72;:::i;:::-;15831:9;15825:4;15821:20;15816:2;15805:9;15801:18;15794:48;15859:108;15962:4;15953:6;15859:108;:::i;:::-;15851:116;;16014:9;16008:4;16004:20;15999:2;15988:9;15984:18;15977:48;16042:108;16145:4;16136:6;16042:108;:::i;:::-;16034:116;;16198:9;16192:4;16188:20;16182:3;16171:9;16167:19;16160:49;16226:76;16297:4;16288:6;16226:76;:::i;:::-;16218:84;;15256:1053;;;;;;;;:::o;16315:751::-;16538:4;16576:3;16565:9;16561:19;16553:27;;16590:71;16658:1;16647:9;16643:17;16634:6;16590:71;:::i;:::-;16671:72;16739:2;16728:9;16724:18;16715:6;16671:72;:::i;:::-;16753;16821:2;16810:9;16806:18;16797:6;16753:72;:::i;:::-;16835;16903:2;16892:9;16888:18;16879:6;16835:72;:::i;:::-;16955:9;16949:4;16945:20;16939:3;16928:9;16924:19;16917:49;16983:76;17054:4;17045:6;16983:76;:::i;:::-;16975:84;;16315:751;;;;;;;;:::o;17072:373::-;17215:4;17253:2;17242:9;17238:18;17230:26;;17302:9;17296:4;17292:20;17288:1;17277:9;17273:17;17266:47;17330:108;17433:4;17424:6;17330:108;:::i;:::-;17322:116;;17072:373;;;;:::o;17451:634::-;17672:4;17710:2;17699:9;17695:18;17687:26;;17759:9;17753:4;17749:20;17745:1;17734:9;17730:17;17723:47;17787:108;17890:4;17881:6;17787:108;:::i;:::-;17779:116;;17942:9;17936:4;17932:20;17927:2;17916:9;17912:18;17905:48;17970:108;18073:4;18064:6;17970:108;:::i;:::-;17962:116;;17451:634;;;;;:::o;18091:210::-;18178:4;18216:2;18205:9;18201:18;18193:26;;18229:65;18291:1;18280:9;18276:17;18267:6;18229:65;:::i;:::-;18091:210;;;;:::o;18307:313::-;18420:4;18458:2;18447:9;18443:18;18435:26;;18507:9;18501:4;18497:20;18493:1;18482:9;18478:17;18471:47;18535:78;18608:4;18599:6;18535:78;:::i;:::-;18527:86;;18307:313;;;;:::o;18626:419::-;18792:4;18830:2;18819:9;18815:18;18807:26;;18879:9;18873:4;18869:20;18865:1;18854:9;18850:17;18843:47;18907:131;19033:4;18907:131;:::i;:::-;18899:139;;18626:419;;;:::o;19051:::-;19217:4;19255:2;19244:9;19240:18;19232:26;;19304:9;19298:4;19294:20;19290:1;19279:9;19275:17;19268:47;19332:131;19458:4;19332:131;:::i;:::-;19324:139;;19051:419;;;:::o;19476:::-;19642:4;19680:2;19669:9;19665:18;19657:26;;19729:9;19723:4;19719:20;19715:1;19704:9;19700:17;19693:47;19757:131;19883:4;19757:131;:::i;:::-;19749:139;;19476:419;;;:::o;19901:::-;20067:4;20105:2;20094:9;20090:18;20082:26;;20154:9;20148:4;20144:20;20140:1;20129:9;20125:17;20118:47;20182:131;20308:4;20182:131;:::i;:::-;20174:139;;19901:419;;;:::o;20326:::-;20492:4;20530:2;20519:9;20515:18;20507:26;;20579:9;20573:4;20569:20;20565:1;20554:9;20550:17;20543:47;20607:131;20733:4;20607:131;:::i;:::-;20599:139;;20326:419;;;:::o;20751:::-;20917:4;20955:2;20944:9;20940:18;20932:26;;21004:9;20998:4;20994:20;20990:1;20979:9;20975:17;20968:47;21032:131;21158:4;21032:131;:::i;:::-;21024:139;;20751:419;;;:::o;21176:::-;21342:4;21380:2;21369:9;21365:18;21357:26;;21429:9;21423:4;21419:20;21415:1;21404:9;21400:17;21393:47;21457:131;21583:4;21457:131;:::i;:::-;21449:139;;21176:419;;;:::o;21601:::-;21767:4;21805:2;21794:9;21790:18;21782:26;;21854:9;21848:4;21844:20;21840:1;21829:9;21825:17;21818:47;21882:131;22008:4;21882:131;:::i;:::-;21874:139;;21601:419;;;:::o;22026:::-;22192:4;22230:2;22219:9;22215:18;22207:26;;22279:9;22273:4;22269:20;22265:1;22254:9;22250:17;22243:47;22307:131;22433:4;22307:131;:::i;:::-;22299:139;;22026:419;;;:::o;22451:222::-;22544:4;22582:2;22571:9;22567:18;22559:26;;22595:71;22663:1;22652:9;22648:17;22639:6;22595:71;:::i;:::-;22451:222;;;;:::o;22679:332::-;22800:4;22838:2;22827:9;22823:18;22815:26;;22851:71;22919:1;22908:9;22904:17;22895:6;22851:71;:::i;:::-;22932:72;23000:2;22989:9;22985:18;22976:6;22932:72;:::i;:::-;22679:332;;;;;:::o;23017:129::-;23051:6;23078:20;;:::i;:::-;23068:30;;23107:33;23135:4;23127:6;23107:33;:::i;:::-;23017:129;;;:::o;23152:75::-;23185:6;23218:2;23212:9;23202:19;;23152:75;:::o;23233:311::-;23310:4;23400:18;23392:6;23389:30;23386:56;;;23422:18;;:::i;:::-;23386:56;23472:4;23464:6;23460:17;23452:25;;23532:4;23526;23522:15;23514:23;;23233:311;;;:::o;23550:::-;23627:4;23717:18;23709:6;23706:30;23703:56;;;23739:18;;:::i;:::-;23703:56;23789:4;23781:6;23777:17;23769:25;;23849:4;23843;23839:15;23831:23;;23550:311;;;:::o;23867:307::-;23928:4;24018:18;24010:6;24007:30;24004:56;;;24040:18;;:::i;:::-;24004:56;24078:29;24100:6;24078:29;:::i;:::-;24070:37;;24162:4;24156;24152:15;24144:23;;23867:307;;;:::o;24180:132::-;24247:4;24270:3;24262:11;;24300:4;24295:3;24291:14;24283:22;;24180:132;;;:::o;24318:114::-;24385:6;24419:5;24413:12;24403:22;;24318:114;;;:::o;24438:98::-;24489:6;24523:5;24517:12;24507:22;;24438:98;;;:::o;24542:99::-;24594:6;24628:5;24622:12;24612:22;;24542:99;;;:::o;24647:113::-;24717:4;24749;24744:3;24740:14;24732:22;;24647:113;;;:::o;24766:184::-;24865:11;24899:6;24894:3;24887:19;24939:4;24934:3;24930:14;24915:29;;24766:184;;;;:::o;24956:168::-;25039:11;25073:6;25068:3;25061:19;25113:4;25108:3;25104:14;25089:29;;24956:168;;;;:::o;25130:169::-;25214:11;25248:6;25243:3;25236:19;25288:4;25283:3;25279:14;25264:29;;25130:169;;;;:::o;25305:305::-;25345:3;25364:20;25382:1;25364:20;:::i;:::-;25359:25;;25398:20;25416:1;25398:20;:::i;:::-;25393:25;;25552:1;25484:66;25480:74;25477:1;25474:81;25471:107;;;25558:18;;:::i;:::-;25471:107;25602:1;25599;25595:9;25588:16;;25305:305;;;;:::o;25616:96::-;25653:7;25682:24;25700:5;25682:24;:::i;:::-;25671:35;;25616:96;;;:::o;25718:90::-;25752:7;25795:5;25788:13;25781:21;25770:32;;25718:90;;;:::o;25814:149::-;25850:7;25890:66;25883:5;25879:78;25868:89;;25814:149;;;:::o;25969:126::-;26006:7;26046:42;26039:5;26035:54;26024:65;;25969:126;;;:::o;26101:77::-;26138:7;26167:5;26156:16;;26101:77;;;:::o;26184:154::-;26268:6;26263:3;26258;26245:30;26330:1;26321:6;26316:3;26312:16;26305:27;26184:154;;;:::o;26344:307::-;26412:1;26422:113;26436:6;26433:1;26430:13;26422:113;;;26521:1;26516:3;26512:11;26506:18;26502:1;26497:3;26493:11;26486:39;26458:2;26455:1;26451:10;26446:15;;26422:113;;;26553:6;26550:1;26547:13;26544:101;;;26633:1;26624:6;26619:3;26615:16;26608:27;26544:101;26393:258;26344:307;;;:::o;26657:320::-;26701:6;26738:1;26732:4;26728:12;26718:22;;26785:1;26779:4;26775:12;26806:18;26796:81;;26862:4;26854:6;26850:17;26840:27;;26796:81;26924:2;26916:6;26913:14;26893:18;26890:38;26887:84;;;26943:18;;:::i;:::-;26887:84;26708:269;26657:320;;;:::o;26983:281::-;27066:27;27088:4;27066:27;:::i;:::-;27058:6;27054:40;27196:6;27184:10;27181:22;27160:18;27148:10;27145:34;27142:62;27139:88;;;27207:18;;:::i;:::-;27139:88;27247:10;27243:2;27236:22;27026:238;26983:281;;:::o;27270:233::-;27309:3;27332:24;27350:5;27332:24;:::i;:::-;27323:33;;27378:66;27371:5;27368:77;27365:103;;;27448:18;;:::i;:::-;27365:103;27495:1;27488:5;27484:13;27477:20;;27270:233;;;:::o;27509:180::-;27557:77;27554:1;27547:88;27654:4;27651:1;27644:15;27678:4;27675:1;27668:15;27695:180;27743:77;27740:1;27733:88;27840:4;27837:1;27830:15;27864:4;27861:1;27854:15;27881:180;27929:77;27926:1;27919:88;28026:4;28023:1;28016:15;28050:4;28047:1;28040:15;28067:180;28115:77;28112:1;28105:88;28212:4;28209:1;28202:15;28236:4;28233:1;28226:15;28253:183;28288:3;28326:1;28308:16;28305:23;28302:128;;;28364:1;28361;28358;28343:23;28386:34;28417:1;28411:8;28386:34;:::i;:::-;28379:41;;28302:128;28253:183;:::o;28442:117::-;28551:1;28548;28541:12;28565:117;28674:1;28671;28664:12;28688:117;28797:1;28794;28787:12;28811:117;28920:1;28917;28910:12;28934:117;29043:1;29040;29033:12;29057:102;29098:6;29149:2;29145:7;29140:2;29133:5;29129:14;29125:28;29115:38;;29057:102;;;:::o;29165:106::-;29209:8;29258:5;29253:3;29249:15;29228:36;;29165:106;;;:::o;29277:227::-;29417:34;29413:1;29405:6;29401:14;29394:58;29486:10;29481:2;29473:6;29469:15;29462:35;29277:227;:::o;29510:229::-;29650:34;29646:1;29638:6;29634:14;29627:58;29719:12;29714:2;29706:6;29702:15;29695:37;29510:229;:::o;29745:233::-;29885:34;29881:1;29873:6;29869:14;29862:58;29954:16;29949:2;29941:6;29937:15;29930:41;29745:233;:::o;29984:224::-;30124:34;30120:1;30112:6;30108:14;30101:58;30193:7;30188:2;30180:6;30176:15;30169:32;29984:224;:::o;30214:229::-;30354:34;30350:1;30342:6;30338:14;30331:58;30423:12;30418:2;30410:6;30406:15;30399:37;30214:229;:::o;30449:228::-;30589:34;30585:1;30577:6;30573:14;30566:58;30658:11;30653:2;30645:6;30641:15;30634:36;30449:228;:::o;30683:::-;30823:34;30819:1;30811:6;30807:14;30800:58;30892:11;30887:2;30879:6;30875:15;30868:36;30683:228;:::o;30917:227::-;31057:34;31053:1;31045:6;31041:14;31034:58;31126:10;31121:2;31113:6;31109:15;31102:35;30917:227;:::o;31150:239::-;31290:34;31286:1;31278:6;31274:14;31267:58;31359:22;31354:2;31346:6;31342:15;31335:47;31150:239;:::o;31395:711::-;31434:3;31472:4;31454:16;31451:26;31448:39;;;31480:5;;31448:39;31509:20;;:::i;:::-;31584:1;31566:16;31562:24;31559:1;31553:4;31538:49;31617:4;31611:11;31716:16;31709:4;31701:6;31697:17;31694:39;31661:18;31653:6;31650:30;31634:113;31631:146;;;31762:5;;;;31631:146;31808:6;31802:4;31798:17;31844:3;31838:10;31871:18;31863:6;31860:30;31857:43;;;31893:5;;;;;;31857:43;31941:6;31934:4;31929:3;31925:14;31921:27;32000:1;31982:16;31978:24;31972:4;31968:35;31963:3;31960:44;31957:57;;;32007:5;;;;;;;31957:57;32024;32072:6;32066:4;32062:17;32054:6;32050:30;32044:4;32024:57;:::i;:::-;32097:3;32090:10;;31438:668;;;;;31395:711;;:::o;32112:122::-;32185:24;32203:5;32185:24;:::i;:::-;32178:5;32175:35;32165:63;;32224:1;32221;32214:12;32165:63;32112:122;:::o;32240:116::-;32310:21;32325:5;32310:21;:::i;:::-;32303:5;32300:32;32290:60;;32346:1;32343;32336:12;32290:60;32240:116;:::o;32362:120::-;32434:23;32451:5;32434:23;:::i;:::-;32427:5;32424:34;32414:62;;32472:1;32469;32462:12;32414:62;32362:120;:::o;32488:122::-;32561:24;32579:5;32561:24;:::i;:::-;32554:5;32551:35;32541:63;;32600:1;32597;32590:12;32541:63;32488:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1912800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8244,
									"end": 8250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 889,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 926,
									"end": 935,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 917,
									"end": 924,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 913,
									"end": 936,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 909,
									"end": 941,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1085,
									"end": 1086,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1083,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1070,
									"end": 1087,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1134,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1308,
									"end": 1315,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1305,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1288,
									"end": 1297,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1284,
									"end": 1306,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1035,
									"end": 1326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1373,
									"end": 1379,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1457,
									"end": 1461,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1449,
									"end": 1455,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1507,
									"end": 1513,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1542,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1534,
									"end": 1543,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1617,
									"end": 1621,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1707,
									"end": 1725,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1726,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1851,
									"end": 1855,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1849,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1841,
									"end": 1856,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1937,
									"end": 1938,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1967,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1958,
									"end": 1959,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1955,
									"end": 1968,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2046,
									"end": 2047,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2044,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2037,
									"end": 2048,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2031,
									"end": 2049,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2028,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2022,
									"end": 2025,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2018,
									"end": 2029,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2050,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1983,
									"end": 1985,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1976,
									"end": 1986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2078,
									"end": 2084,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2075,
									"end": 2076,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2072,
									"end": 2085,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2158,
									"end": 2159,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2149,
									"end": 2155,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2144,
									"end": 2147,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2140,
									"end": 2156,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2133,
									"end": 2160,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1918,
									"end": 2176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2226,
									"end": 2232,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2263,
									"end": 2264,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2257,
									"end": 2261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2253,
									"end": 2265,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2310,
									"end": 2311,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2304,
									"end": 2308,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2312,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2349,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2387,
									"end": 2391,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 2379,
									"end": 2385,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2392,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2451,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2441,
									"end": 2447,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2438,
									"end": 2452,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2436,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2453,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2233,
									"end": 2502,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2613,
									"end": 2617,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2583,
									"end": 2589,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2619,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2727,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2709,
									"end": 2719,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2706,
									"end": 2728,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2685,
									"end": 2703,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2673,
									"end": 2683,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2670,
									"end": 2704,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2667,
									"end": 2729,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2772,
									"end": 2782,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2770,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2761,
									"end": 2783,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2551,
									"end": 2789,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2843,
									"end": 2920,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2840,
									"end": 2841,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2833,
									"end": 2921,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2940,
									"end": 2944,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2937,
									"end": 2938,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2930,
									"end": 2945,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2964,
									"end": 2968,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2961,
									"end": 2962,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2969,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3029,
									"end": 3106,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3026,
									"end": 3027,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3107,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3126,
									"end": 3130,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3123,
									"end": 3124,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3116,
									"end": 3131,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3150,
									"end": 3154,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3147,
									"end": 3148,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3140,
									"end": 3155,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3399,
									"end": 3400,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3396,
									"end": 3397,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3401,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3520,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3512,
									"end": 3524,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3645,
									"end": 3646,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3642,
									"end": 3643,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3635,
									"end": 3647,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3700,
									"end": 3706,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3751,
									"end": 3753,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3747,
									"end": 3754,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3742,
									"end": 3744,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3735,
									"end": 3740,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3731,
									"end": 3745,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3727,
									"end": 3755,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17259,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220af1a036d8409d69ac76667f69dba7d8b528df0563c1b01fdebeda29d99ba313b64736f6c63430008070033",
									".code": [
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2393,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1522,
											"end": 1533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4297,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4297,
											"end": 4309,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4297,
											"end": 4309,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4297,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4289,
											"end": 4349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4330,
											"end": 4334,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4336,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4313,
											"end": 4349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4349,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4313,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4349,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4289,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4268,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2720,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2789,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 2941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 2959,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3009,
											"end": 3017,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3025,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 2995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3057,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3280,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3464,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3513,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3806,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3802,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3845,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3845,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3845,
											"end": 3857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3845,
											"end": 3857,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3845,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3777,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3940,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3958,
											"end": 3962,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 3970,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3984,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3940,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3940,
											"end": 3985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3940,
											"end": 3985,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3940,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3992,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6453,
											"end": 6460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6453,
											"end": 6467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6532,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6618,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6662,
											"end": 6670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 6676,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6680,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6685,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6694,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 6700,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6717,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6746,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6824,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6825,
											"end": 6826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6876,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6878,
											"end": 6882,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7051,
											"end": 7057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7027,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7033,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7106,
											"end": 7112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7097,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7101,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7177,
											"end": 7184,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7216,
											"end": 7224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7234,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7236,
											"end": 7239,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7248,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7254,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7196,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7302,
											"end": 7310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7316,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7325,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6421,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12910,
											"end": 13233,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12910,
											"end": 13233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13060,
											"end": 13068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13051,
											"end": 13068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13051,
											"end": 13068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13051,
											"end": 13068,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 13043,
											"end": 13114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13142,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13143,
											"end": 13148,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13124,
											"end": 13149,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13150,
											"end": 13158,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13124,
											"end": 13170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13207,
											"end": 13215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13200,
											"end": 13205,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13217,
											"end": 13225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13226,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 13233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 13233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 13233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 13233,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5209,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5272,
											"end": 5274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5369,
											"end": 5377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5383,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5387,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5392,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5394,
											"end": 5401,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5453,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5459,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5493,
											"end": 5499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5592,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5598,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5663,
											"end": 5669,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5654,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5656,
											"end": 5658,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5716,
											"end": 5718,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5700,
											"end": 5708,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5720,
											"end": 5722,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5762,
											"end": 5770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5776,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5782,
											"end": 5785,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5794,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 5800,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5742,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14383,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15316,
											"end": 15529,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16498,
											"end": 16513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 16498,
											"end": 16500,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16498,
											"end": 16511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16498,
											"end": 16511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16498,
											"end": 16511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 16498,
											"end": 16513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16498,
											"end": 16513,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 16498,
											"end": 16513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 17052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 17052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16494,
											"end": 17052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16552,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16533,
											"end": 16576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 16577,
											"end": 16585,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16587,
											"end": 16591,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16593,
											"end": 16596,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16598,
											"end": 16605,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16607,
											"end": 16611,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16533,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16918,
											"end": 16924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16911,
											"end": 16925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16529,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16703,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 16703,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16703,
											"end": 16751,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16687,
											"end": 16844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 16687,
											"end": 16844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16687,
											"end": 16844,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 16687,
											"end": 16844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16613,
											"end": 16858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 17052,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16494,
											"end": 17052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16266,
											"end": 17058,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17064,
											"end": 17257,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17064,
											"end": 17257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17130,
											"end": 17146,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17158,
											"end": 17180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17197,
											"end": 17198,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17158,
											"end": 17199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17158,
											"end": 17199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17220,
											"end": 17227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17215,
											"end": 17216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17209,
											"end": 17227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17238,
											"end": 17250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17238,
											"end": 17250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17238,
											"end": 17250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17064,
											"end": 17257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17064,
											"end": 17257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17064,
											"end": 17257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17064,
											"end": 17257,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15742,
											"end": 15757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 15742,
											"end": 15744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15742,
											"end": 15755,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15742,
											"end": 15755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15742,
											"end": 15755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 15742,
											"end": 15757,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15742,
											"end": 15757,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 15742,
											"end": 15757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15738,
											"end": 16254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15738,
											"end": 16254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 15738,
											"end": 16254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15794,
											"end": 15796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15777,
											"end": 15815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15815,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 15816,
											"end": 15824,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15826,
											"end": 15830,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15832,
											"end": 15834,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15848,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 15777,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16120,
											"end": 16126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16127,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 15773,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15953,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 15910,
											"end": 15953,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15910,
											"end": 15953,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15898,
											"end": 15906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15898,
											"end": 15953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 16046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15894,
											"end": 16046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 16046,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15894,
											"end": 16046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 16060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15738,
											"end": 16254,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 15738,
											"end": 16254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 16260,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 865,
											"end": 870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 881,
											"end": 971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 991,
											"end": 996,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1027,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1059,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1364,
											"end": 1367,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1357,
											"end": 1407,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1434,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1307,
											"end": 1485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1680,
											"end": 1685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1673,
											"end": 1694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1725,
											"end": 1729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1714,
											"end": 1730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1749,
											"end": 1752,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1767,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 1887,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2003,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1984,
											"end": 2004,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2186,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2193,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2199,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2435,
											"end": 2438,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2433,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2424,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2418,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2425,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2591,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2592,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2720,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2817,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2832,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2545,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 2932,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3073,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 3108,
											"end": 3113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3220,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3255,
											"end": 3260,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3393,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3387,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3375,
											"end": 3381,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3371,
											"end": 3388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3522,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3614,
											"end": 3617,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3599,
											"end": 3603,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3591,
											"end": 3597,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3618,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3347,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3720,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3721,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3757,
											"end": 3762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3875,
											"end": 3898,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3903,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 4096,
											"end": 4103,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4085,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4072,
											"end": 4094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4104,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 4224,
											"end": 4231,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4213,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4200,
											"end": 4222,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4423,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4493,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4478,
											"end": 4487,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4465,
											"end": 4488,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4494,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 4687,
											"end": 4694,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4667,
											"end": 4676,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4695,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4744,
											"end": 4746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4815,
											"end": 4822,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4804,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4791,
											"end": 4813,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4889,
											"end": 4898,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4904,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4929,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4920,
											"end": 4950,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5128,
											"end": 5135,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 5125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5136,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 5146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5215,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5202,
											"end": 5211,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5217,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5263,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5441,
											"end": 5448,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5449,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5156,
											"end": 5459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5529,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5515,
											"end": 5524,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5511,
											"end": 5530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5576,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5550,
											"end": 5556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5577,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5739,
											"end": 5746,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5715,
											"end": 5737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5874,
											"end": 5880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5906,
											"end": 5912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5955,
											"end": 5958,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 5941,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5926,
											"end": 5959,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6152,
											"end": 6159,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6132,
											"end": 6141,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6160,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6211,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 6280,
											"end": 6287,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6288,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 6408,
											"end": 6415,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6388,
											"end": 6397,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6467,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 6536,
											"end": 6543,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6621,
											"end": 6624,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6610,
											"end": 6619,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6606,
											"end": 6625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6626,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6671,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6834,
											"end": 6841,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6831,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6814,
											"end": 6823,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6936,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 6989,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6962,
											"end": 6985,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6990,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7183,
											"end": 7190,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7084,
											"end": 7201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7242,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7308,
											"end": 7315,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7288,
											"end": 7297,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7316,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7464,
											"end": 7466,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7452,
											"end": 7461,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7443,
											"end": 7450,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7435,
											"end": 7467,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7660,
											"end": 7667,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7640,
											"end": 7649,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7636,
											"end": 7658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 7719,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 7788,
											"end": 7795,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7779,
											"end": 7785,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7768,
											"end": 7777,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7764,
											"end": 7786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7688,
											"end": 7806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 7951,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7994,
											"end": 7996,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7982,
											"end": 7991,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7973,
											"end": 7980,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7992,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8137,
											"end": 8146,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8133,
											"end": 8150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8120,
											"end": 8151,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8178,
											"end": 8196,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8170,
											"end": 8176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8167,
											"end": 8197,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8375,
											"end": 8382,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8366,
											"end": 8372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8355,
											"end": 8364,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8351,
											"end": 8373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8383,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8460,
											"end": 8462,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8449,
											"end": 8458,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8445,
											"end": 8463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8432,
											"end": 8464,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8483,
											"end": 8489,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8480,
											"end": 8510,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8688,
											"end": 8695,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8679,
											"end": 8685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8677,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8696,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 8823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 8812,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8824,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 8829,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 9021,
											"end": 9028,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9001,
											"end": 9010,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8997,
											"end": 9019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8923,
											"end": 9039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9170,
											"end": 9172,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9158,
											"end": 9167,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9156,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9145,
											"end": 9168,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9141,
											"end": 9173,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 9376,
											"end": 9383,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9367,
											"end": 9373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9352,
											"end": 9374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9311,
											"end": 9384,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9311,
											"end": 9384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9267,
											"end": 9394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9517,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9503,
											"end": 9512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9501,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9490,
											"end": 9513,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9486,
											"end": 9518,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9711,
											"end": 9718,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9691,
											"end": 9700,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9687,
											"end": 9709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9719,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9612,
											"end": 9729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9811,
											"end": 9821,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 9874,
											"end": 9877,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9866,
											"end": 9872,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9910,
											"end": 9914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9905,
											"end": 9908,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9901,
											"end": 9915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10032,
											"end": 10037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10009,
											"end": 10012,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10200,
											"end": 10203,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 10277,
											"end": 10282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 10378,
											"end": 10384,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10376,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10292,
											"end": 10385,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10292,
											"end": 10385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 10459,
											"end": 10464,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10488,
											"end": 10495,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10519,
											"end": 10520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10526,
											"end": 10527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10523,
											"end": 10536,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10605,
											"end": 10611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10599,
											"end": 10612,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10676,
											"end": 10689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10625,
											"end": 10695,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 10625,
											"end": 10695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10708,
											"end": 10778,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10708,
											"end": 10778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10564,
											"end": 10788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10551,
											"end": 10552,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10548,
											"end": 10549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10508,
											"end": 10522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10804,
											"end": 10807,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 10807,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 10807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 10915,
											"end": 10920,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10888,
											"end": 10922,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 11080,
											"end": 11085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11165,
											"end": 11171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11160,
											"end": 11163,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11095,
											"end": 11172,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11095,
											"end": 11172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11226,
											"end": 11232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11221,
											"end": 11224,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11214,
											"end": 11218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11207,
											"end": 11212,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11203,
											"end": 11219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 11280,
											"end": 11286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11253,
											"end": 11256,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11249,
											"end": 11288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11288,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11024,
											"end": 11294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 11449,
											"end": 11454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11535,
											"end": 11541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11530,
											"end": 11533,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11542,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 11596,
											"end": 11602,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11591,
											"end": 11594,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11584,
											"end": 11588,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11577,
											"end": 11582,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 11650,
											"end": 11656,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11623,
											"end": 11626,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11619,
											"end": 11658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11612,
											"end": 11658,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11612,
											"end": 11658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11392,
											"end": 11664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11812,
											"end": 11815,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 11897,
											"end": 11899,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 11892,
											"end": 11895,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11826,
											"end": 11900,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11826,
											"end": 11900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11998,
											"end": 12001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12027,
											"end": 12029,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12022,
											"end": 12025,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12018,
											"end": 12030,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12011,
											"end": 12030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12011,
											"end": 12030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12184,
											"end": 12187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 12269,
											"end": 12271,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 12264,
											"end": 12267,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12272,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 12370,
											"end": 12373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12399,
											"end": 12401,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12394,
											"end": 12397,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12390,
											"end": 12402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12556,
											"end": 12559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 12641,
											"end": 12643,
											"name": "PUSH",
											"source": 9,
											"value": "2E"
										},
										{
											"begin": 12636,
											"end": 12639,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 12742,
											"end": 12745,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12771,
											"end": 12773,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12766,
											"end": 12769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12762,
											"end": 12774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 13013,
											"end": 13015,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 13008,
											"end": 13011,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12942,
											"end": 13016,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12942,
											"end": 13016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 13114,
											"end": 13117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13143,
											"end": 13145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13138,
											"end": 13141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13134,
											"end": 13146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13300,
											"end": 13303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 13385,
											"end": 13387,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 13380,
											"end": 13383,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13314,
											"end": 13388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13314,
											"end": 13388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 13486,
											"end": 13489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13515,
											"end": 13517,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13510,
											"end": 13513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13506,
											"end": 13518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13499,
											"end": 13518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13499,
											"end": 13518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13672,
											"end": 13675,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 13757,
											"end": 13759,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 13752,
											"end": 13755,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 13858,
											"end": 13861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13887,
											"end": 13889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13882,
											"end": 13885,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13878,
											"end": 13890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 13890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 13890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 14129,
											"end": 14131,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 14124,
											"end": 14127,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14058,
											"end": 14132,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14058,
											"end": 14132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 14230,
											"end": 14233,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14259,
											"end": 14261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14254,
											"end": 14257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14250,
											"end": 14262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14243,
											"end": 14262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14243,
											"end": 14262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14416,
											"end": 14419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 14501,
											"end": 14503,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 14496,
											"end": 14499,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14430,
											"end": 14504,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14430,
											"end": 14504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 14602,
											"end": 14605,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14631,
											"end": 14633,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14626,
											"end": 14629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14622,
											"end": 14634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14615,
											"end": 14634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14615,
											"end": 14634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14788,
											"end": 14791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 14873,
											"end": 14875,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 14868,
											"end": 14871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14802,
											"end": 14876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14802,
											"end": 14876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 14974,
											"end": 14977,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15003,
											"end": 15005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14998,
											"end": 15001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14994,
											"end": 15006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14987,
											"end": 15006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14987,
											"end": 15006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15018,
											"end": 15126,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 15018,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15095,
											"end": 15119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 15113,
											"end": 15118,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15095,
											"end": 15119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 15095,
											"end": 15119,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15095,
											"end": 15119,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 15095,
											"end": 15119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15090,
											"end": 15093,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15083,
											"end": 15120,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15126,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15132,
											"end": 15250,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 15132,
											"end": 15250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15219,
											"end": 15243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 15237,
											"end": 15242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15219,
											"end": 15243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 15219,
											"end": 15243,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15219,
											"end": 15243,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 15219,
											"end": 15243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15214,
											"end": 15217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15207,
											"end": 15244,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15132,
											"end": 15250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15132,
											"end": 15250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15132,
											"end": 15250,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15579,
											"end": 15583,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15620,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 15606,
											"end": 15615,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15602,
											"end": 15621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15594,
											"end": 15621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15594,
											"end": 15621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15631,
											"end": 15702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 15699,
											"end": 15700,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15688,
											"end": 15697,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15684,
											"end": 15701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15675,
											"end": 15681,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15631,
											"end": 15702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 15631,
											"end": 15702,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15631,
											"end": 15702,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 15631,
											"end": 15702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15712,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 15780,
											"end": 15782,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15769,
											"end": 15778,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15765,
											"end": 15783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15756,
											"end": 15762,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 15712,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 15712,
											"end": 15784,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15712,
											"end": 15784,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 15712,
											"end": 15784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15831,
											"end": 15840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15825,
											"end": 15829,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15821,
											"end": 15841,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15816,
											"end": 15818,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15805,
											"end": 15814,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15801,
											"end": 15819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15794,
											"end": 15842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 15962,
											"end": 15966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15953,
											"end": 15959,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 15859,
											"end": 15967,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15859,
											"end": 15967,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 15859,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15851,
											"end": 15967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15851,
											"end": 15967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16014,
											"end": 16023,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16008,
											"end": 16012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16004,
											"end": 16024,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15999,
											"end": 16001,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 15988,
											"end": 15997,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15984,
											"end": 16002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15977,
											"end": 16025,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16042,
											"end": 16150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 16145,
											"end": 16149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16136,
											"end": 16142,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16042,
											"end": 16150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 16042,
											"end": 16150,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16042,
											"end": 16150,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 16042,
											"end": 16150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16034,
											"end": 16150,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16034,
											"end": 16150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16198,
											"end": 16207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16192,
											"end": 16196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16188,
											"end": 16208,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16182,
											"end": 16185,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 16171,
											"end": 16180,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16167,
											"end": 16186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16160,
											"end": 16209,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 16302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 16297,
											"end": 16301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16288,
											"end": 16294,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 16302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 16226,
											"end": 16302,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16226,
											"end": 16302,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 16226,
											"end": 16302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16218,
											"end": 16302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16218,
											"end": 16302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 16309,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16538,
											"end": 16542,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16576,
											"end": 16579,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 16565,
											"end": 16574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16561,
											"end": 16580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16553,
											"end": 16580,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16553,
											"end": 16580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16590,
											"end": 16661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 16658,
											"end": 16659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16647,
											"end": 16656,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16643,
											"end": 16660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16634,
											"end": 16640,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16590,
											"end": 16661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 16590,
											"end": 16661,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16590,
											"end": 16661,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 16590,
											"end": 16661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 16739,
											"end": 16741,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16728,
											"end": 16737,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16724,
											"end": 16742,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16715,
											"end": 16721,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 16671,
											"end": 16743,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16671,
											"end": 16743,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 16671,
											"end": 16743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16753,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 16821,
											"end": 16823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16810,
											"end": 16819,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16806,
											"end": 16824,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16797,
											"end": 16803,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16753,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 16753,
											"end": 16825,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16753,
											"end": 16825,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 16753,
											"end": 16825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16835,
											"end": 16907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 16903,
											"end": 16905,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16892,
											"end": 16901,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16888,
											"end": 16906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16879,
											"end": 16885,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16835,
											"end": 16907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 16835,
											"end": 16907,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16835,
											"end": 16907,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 16835,
											"end": 16907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16955,
											"end": 16964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16949,
											"end": 16953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16945,
											"end": 16965,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16939,
											"end": 16942,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 16928,
											"end": 16937,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16924,
											"end": 16943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16917,
											"end": 16966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 17054,
											"end": 17058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17045,
											"end": 17051,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 16983,
											"end": 17059,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16983,
											"end": 17059,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 16983,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16975,
											"end": 17059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16975,
											"end": 17059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16315,
											"end": 17066,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17215,
											"end": 17219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17253,
											"end": 17255,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17242,
											"end": 17251,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17238,
											"end": 17256,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17230,
											"end": 17256,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17230,
											"end": 17256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17302,
											"end": 17311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17296,
											"end": 17300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17292,
											"end": 17312,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17288,
											"end": 17289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17277,
											"end": 17286,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17273,
											"end": 17290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17266,
											"end": 17313,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17330,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 17433,
											"end": 17437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17424,
											"end": 17430,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17330,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 17330,
											"end": 17438,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17330,
											"end": 17438,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 17330,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17322,
											"end": 17438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17322,
											"end": 17438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17072,
											"end": 17445,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17672,
											"end": 17676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17710,
											"end": 17712,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17699,
											"end": 17708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17695,
											"end": 17713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17687,
											"end": 17713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17687,
											"end": 17713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17759,
											"end": 17768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17753,
											"end": 17757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17749,
											"end": 17769,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17745,
											"end": 17746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17734,
											"end": 17743,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17730,
											"end": 17747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17723,
											"end": 17770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17787,
											"end": 17895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 17890,
											"end": 17894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17881,
											"end": 17887,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17787,
											"end": 17895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 17787,
											"end": 17895,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17787,
											"end": 17895,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 17787,
											"end": 17895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17779,
											"end": 17895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17779,
											"end": 17895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17942,
											"end": 17951,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17936,
											"end": 17940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17932,
											"end": 17952,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17927,
											"end": 17929,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17916,
											"end": 17925,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17912,
											"end": 17930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17905,
											"end": 17953,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17970,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 18073,
											"end": 18077,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18064,
											"end": 18070,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17970,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 17970,
											"end": 18078,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17970,
											"end": 18078,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 17970,
											"end": 18078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17962,
											"end": 18078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17962,
											"end": 18078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 18085,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18178,
											"end": 18182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18216,
											"end": 18218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18205,
											"end": 18214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18201,
											"end": 18219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18193,
											"end": 18219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18193,
											"end": 18219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18229,
											"end": 18294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 18291,
											"end": 18292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18280,
											"end": 18289,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18276,
											"end": 18293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18267,
											"end": 18273,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18229,
											"end": 18294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 18229,
											"end": 18294,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18229,
											"end": 18294,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 18229,
											"end": 18294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18301,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18420,
											"end": 18424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18458,
											"end": 18460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18447,
											"end": 18456,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18443,
											"end": 18461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18435,
											"end": 18461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18435,
											"end": 18461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18507,
											"end": 18516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18501,
											"end": 18505,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18497,
											"end": 18517,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18493,
											"end": 18494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18482,
											"end": 18491,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18478,
											"end": 18495,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18471,
											"end": 18518,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18535,
											"end": 18613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 18608,
											"end": 18612,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18599,
											"end": 18605,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18535,
											"end": 18613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 18535,
											"end": 18613,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18535,
											"end": 18613,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 18535,
											"end": 18613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18527,
											"end": 18613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18527,
											"end": 18613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18620,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18626,
											"end": 19045,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 18626,
											"end": 19045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18792,
											"end": 18796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18830,
											"end": 18832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18819,
											"end": 18828,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18815,
											"end": 18833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18807,
											"end": 18833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18807,
											"end": 18833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18879,
											"end": 18888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18873,
											"end": 18877,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18869,
											"end": 18889,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18865,
											"end": 18866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18854,
											"end": 18863,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18850,
											"end": 18867,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18843,
											"end": 18890,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18907,
											"end": 19038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 19033,
											"end": 19037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18907,
											"end": 19038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 18907,
											"end": 19038,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18907,
											"end": 19038,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 18907,
											"end": 19038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18899,
											"end": 19038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18899,
											"end": 19038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18626,
											"end": 19045,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18626,
											"end": 19045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18626,
											"end": 19045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18626,
											"end": 19045,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19051,
											"end": 19470,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 19051,
											"end": 19470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19217,
											"end": 19221,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19255,
											"end": 19257,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19244,
											"end": 19253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19240,
											"end": 19258,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19232,
											"end": 19258,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19232,
											"end": 19258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19304,
											"end": 19313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19298,
											"end": 19302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19294,
											"end": 19314,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19290,
											"end": 19291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19279,
											"end": 19288,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19275,
											"end": 19292,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19268,
											"end": 19315,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19332,
											"end": 19463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 19458,
											"end": 19462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19332,
											"end": 19463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 19332,
											"end": 19463,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19332,
											"end": 19463,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 19332,
											"end": 19463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19324,
											"end": 19463,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19324,
											"end": 19463,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19051,
											"end": 19470,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19051,
											"end": 19470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19051,
											"end": 19470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19051,
											"end": 19470,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19476,
											"end": 19895,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 19476,
											"end": 19895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19642,
											"end": 19646,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19680,
											"end": 19682,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19669,
											"end": 19678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19665,
											"end": 19683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19657,
											"end": 19683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19657,
											"end": 19683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19729,
											"end": 19738,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19723,
											"end": 19727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19719,
											"end": 19739,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19715,
											"end": 19716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19704,
											"end": 19713,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19700,
											"end": 19717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19693,
											"end": 19740,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19757,
											"end": 19888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 19883,
											"end": 19887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19757,
											"end": 19888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 19757,
											"end": 19888,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19757,
											"end": 19888,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 19757,
											"end": 19888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19749,
											"end": 19888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19749,
											"end": 19888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19476,
											"end": 19895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19476,
											"end": 19895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19476,
											"end": 19895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19476,
											"end": 19895,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19901,
											"end": 20320,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 19901,
											"end": 20320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20067,
											"end": 20071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20105,
											"end": 20107,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20094,
											"end": 20103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20090,
											"end": 20108,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20082,
											"end": 20108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20082,
											"end": 20108,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20154,
											"end": 20163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20148,
											"end": 20152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20144,
											"end": 20164,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20140,
											"end": 20141,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20129,
											"end": 20138,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20125,
											"end": 20142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20118,
											"end": 20165,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20182,
											"end": 20313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 20308,
											"end": 20312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20182,
											"end": 20313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 20182,
											"end": 20313,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20182,
											"end": 20313,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 20182,
											"end": 20313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20174,
											"end": 20313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20174,
											"end": 20313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19901,
											"end": 20320,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19901,
											"end": 20320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19901,
											"end": 20320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19901,
											"end": 20320,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20326,
											"end": 20745,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 20326,
											"end": 20745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20492,
											"end": 20496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20530,
											"end": 20532,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20519,
											"end": 20528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20515,
											"end": 20533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20507,
											"end": 20533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20507,
											"end": 20533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20579,
											"end": 20588,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20573,
											"end": 20577,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20569,
											"end": 20589,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20565,
											"end": 20566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20554,
											"end": 20563,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20550,
											"end": 20567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20543,
											"end": 20590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20607,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 20733,
											"end": 20737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20607,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 20607,
											"end": 20738,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20607,
											"end": 20738,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 20607,
											"end": 20738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20599,
											"end": 20738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20599,
											"end": 20738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20326,
											"end": 20745,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20326,
											"end": 20745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20326,
											"end": 20745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20326,
											"end": 20745,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20751,
											"end": 21170,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 20751,
											"end": 21170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20917,
											"end": 20921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20955,
											"end": 20957,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20944,
											"end": 20953,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20940,
											"end": 20958,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20932,
											"end": 20958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20932,
											"end": 20958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21004,
											"end": 21013,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20998,
											"end": 21002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20994,
											"end": 21014,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20990,
											"end": 20991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20979,
											"end": 20988,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20975,
											"end": 20992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20968,
											"end": 21015,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21032,
											"end": 21163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 21158,
											"end": 21162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21032,
											"end": 21163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 21032,
											"end": 21163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21032,
											"end": 21163,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 21032,
											"end": 21163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21024,
											"end": 21163,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21024,
											"end": 21163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20751,
											"end": 21170,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20751,
											"end": 21170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20751,
											"end": 21170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20751,
											"end": 21170,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21176,
											"end": 21595,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 21176,
											"end": 21595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21342,
											"end": 21346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21380,
											"end": 21382,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21369,
											"end": 21378,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21365,
											"end": 21383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21357,
											"end": 21383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21357,
											"end": 21383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21429,
											"end": 21438,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21423,
											"end": 21427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21419,
											"end": 21439,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21415,
											"end": 21416,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21404,
											"end": 21413,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21400,
											"end": 21417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21393,
											"end": 21440,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21457,
											"end": 21588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 21583,
											"end": 21587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21457,
											"end": 21588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 21457,
											"end": 21588,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21457,
											"end": 21588,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 21457,
											"end": 21588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21449,
											"end": 21588,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21449,
											"end": 21588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21176,
											"end": 21595,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21176,
											"end": 21595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21176,
											"end": 21595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21176,
											"end": 21595,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21601,
											"end": 22020,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 21601,
											"end": 22020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21767,
											"end": 21771,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21805,
											"end": 21807,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21794,
											"end": 21803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21790,
											"end": 21808,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21782,
											"end": 21808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21782,
											"end": 21808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21854,
											"end": 21863,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21848,
											"end": 21852,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21844,
											"end": 21864,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21840,
											"end": 21841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21829,
											"end": 21838,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21825,
											"end": 21842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21818,
											"end": 21865,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21882,
											"end": 22013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 22008,
											"end": 22012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21882,
											"end": 22013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 21882,
											"end": 22013,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21882,
											"end": 22013,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 21882,
											"end": 22013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21874,
											"end": 22013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21874,
											"end": 22013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21601,
											"end": 22020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21601,
											"end": 22020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21601,
											"end": 22020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21601,
											"end": 22020,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22026,
											"end": 22445,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 22026,
											"end": 22445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22192,
											"end": 22196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22230,
											"end": 22232,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22219,
											"end": 22228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22215,
											"end": 22233,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22207,
											"end": 22233,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22207,
											"end": 22233,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22279,
											"end": 22288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22273,
											"end": 22277,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22269,
											"end": 22289,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22265,
											"end": 22266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22254,
											"end": 22263,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22250,
											"end": 22267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22243,
											"end": 22290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22307,
											"end": 22438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 22433,
											"end": 22437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22307,
											"end": 22438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 22307,
											"end": 22438,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22307,
											"end": 22438,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 22307,
											"end": 22438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22299,
											"end": 22438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22299,
											"end": 22438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22026,
											"end": 22445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22026,
											"end": 22445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22026,
											"end": 22445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22026,
											"end": 22445,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22544,
											"end": 22548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22582,
											"end": 22584,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22571,
											"end": 22580,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22567,
											"end": 22585,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22559,
											"end": 22585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22559,
											"end": 22585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22595,
											"end": 22666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 22663,
											"end": 22664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22652,
											"end": 22661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22648,
											"end": 22665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22639,
											"end": 22645,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22595,
											"end": 22666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 22595,
											"end": 22666,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22595,
											"end": 22666,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 22595,
											"end": 22666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22451,
											"end": 22673,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22800,
											"end": 22804,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22838,
											"end": 22840,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22827,
											"end": 22836,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22841,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22815,
											"end": 22841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22815,
											"end": 22841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22851,
											"end": 22922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 22919,
											"end": 22920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22908,
											"end": 22917,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22904,
											"end": 22921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22895,
											"end": 22901,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 22851,
											"end": 22922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 22851,
											"end": 22922,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22851,
											"end": 22922,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 22851,
											"end": 22922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22932,
											"end": 23004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 23000,
											"end": 23002,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22989,
											"end": 22998,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22985,
											"end": 23003,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22976,
											"end": 22982,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22932,
											"end": 23004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 22932,
											"end": 23004,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22932,
											"end": 23004,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 22932,
											"end": 23004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 23011,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23017,
											"end": 23146,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 23017,
											"end": 23146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23051,
											"end": 23057,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23078,
											"end": 23098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 23078,
											"end": 23098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 23078,
											"end": 23098,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23078,
											"end": 23098,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 23078,
											"end": 23098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23068,
											"end": 23098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23068,
											"end": 23098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23107,
											"end": 23140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 23135,
											"end": 23139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23127,
											"end": 23133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23107,
											"end": 23140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 23107,
											"end": 23140,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23107,
											"end": 23140,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 23107,
											"end": 23140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23017,
											"end": 23146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23017,
											"end": 23146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23017,
											"end": 23146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23017,
											"end": 23146,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23152,
											"end": 23227,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 23152,
											"end": 23227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23185,
											"end": 23191,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23218,
											"end": 23220,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23212,
											"end": 23221,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23202,
											"end": 23221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23202,
											"end": 23221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23152,
											"end": 23227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23152,
											"end": 23227,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23233,
											"end": 23544,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 23233,
											"end": 23544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23310,
											"end": 23314,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23400,
											"end": 23418,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23392,
											"end": 23398,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23389,
											"end": 23419,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 23386,
											"end": 23442,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23386,
											"end": 23442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 23386,
											"end": 23442,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23422,
											"end": 23440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 23422,
											"end": 23440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 23422,
											"end": 23440,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23422,
											"end": 23440,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 23422,
											"end": 23440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23386,
											"end": 23442,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 23386,
											"end": 23442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23472,
											"end": 23476,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23464,
											"end": 23470,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23460,
											"end": 23477,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 23452,
											"end": 23477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23452,
											"end": 23477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23532,
											"end": 23536,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23526,
											"end": 23530,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23522,
											"end": 23537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23514,
											"end": 23537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23514,
											"end": 23537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23233,
											"end": 23544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23233,
											"end": 23544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23233,
											"end": 23544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23233,
											"end": 23544,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23550,
											"end": 23861,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 23550,
											"end": 23861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23627,
											"end": 23631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23717,
											"end": 23735,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23709,
											"end": 23715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23706,
											"end": 23736,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 23703,
											"end": 23759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23703,
											"end": 23759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 23703,
											"end": 23759,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23739,
											"end": 23757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 23739,
											"end": 23757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 23739,
											"end": 23757,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23739,
											"end": 23757,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 23739,
											"end": 23757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23703,
											"end": 23759,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 23703,
											"end": 23759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23789,
											"end": 23793,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23781,
											"end": 23787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23777,
											"end": 23794,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 23769,
											"end": 23794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23769,
											"end": 23794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23849,
											"end": 23853,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23843,
											"end": 23847,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23839,
											"end": 23854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23831,
											"end": 23854,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23831,
											"end": 23854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23550,
											"end": 23861,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23550,
											"end": 23861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23550,
											"end": 23861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23550,
											"end": 23861,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23867,
											"end": 24174,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 23867,
											"end": 24174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23928,
											"end": 23932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24018,
											"end": 24036,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24010,
											"end": 24016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24007,
											"end": 24037,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 24004,
											"end": 24060,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24004,
											"end": 24060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 24004,
											"end": 24060,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24040,
											"end": 24058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 24040,
											"end": 24058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 24040,
											"end": 24058,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24040,
											"end": 24058,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 24040,
											"end": 24058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24004,
											"end": 24060,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 24004,
											"end": 24060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24078,
											"end": 24107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 24100,
											"end": 24106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24078,
											"end": 24107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 24078,
											"end": 24107,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24078,
											"end": 24107,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 24078,
											"end": 24107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24070,
											"end": 24107,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24070,
											"end": 24107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24162,
											"end": 24166,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24156,
											"end": 24160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24152,
											"end": 24167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24144,
											"end": 24167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24144,
											"end": 24167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23867,
											"end": 24174,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23867,
											"end": 24174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23867,
											"end": 24174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23867,
											"end": 24174,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24180,
											"end": 24312,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 24180,
											"end": 24312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24247,
											"end": 24251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24270,
											"end": 24273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24262,
											"end": 24273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24262,
											"end": 24273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24300,
											"end": 24304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24298,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24291,
											"end": 24305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24283,
											"end": 24305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24283,
											"end": 24305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24180,
											"end": 24312,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24180,
											"end": 24312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24180,
											"end": 24312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24180,
											"end": 24312,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24318,
											"end": 24432,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 24318,
											"end": 24432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24385,
											"end": 24391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24419,
											"end": 24424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24413,
											"end": 24425,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 24403,
											"end": 24425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24403,
											"end": 24425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24318,
											"end": 24432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24318,
											"end": 24432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24318,
											"end": 24432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24318,
											"end": 24432,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24438,
											"end": 24536,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 24438,
											"end": 24536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24489,
											"end": 24495,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24523,
											"end": 24528,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24517,
											"end": 24529,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 24507,
											"end": 24529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24507,
											"end": 24529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24536,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24438,
											"end": 24536,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24542,
											"end": 24641,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 24542,
											"end": 24641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24594,
											"end": 24600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24628,
											"end": 24633,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24622,
											"end": 24634,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 24612,
											"end": 24634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24612,
											"end": 24634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24542,
											"end": 24641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24542,
											"end": 24641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24542,
											"end": 24641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24542,
											"end": 24641,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24647,
											"end": 24760,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 24647,
											"end": 24760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24717,
											"end": 24721,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24749,
											"end": 24753,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24744,
											"end": 24747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24740,
											"end": 24754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24732,
											"end": 24754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24732,
											"end": 24754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24647,
											"end": 24760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24647,
											"end": 24760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24647,
											"end": 24760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24647,
											"end": 24760,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24865,
											"end": 24876,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24899,
											"end": 24905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24894,
											"end": 24897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24887,
											"end": 24906,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24939,
											"end": 24943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24934,
											"end": 24937,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24930,
											"end": 24944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24915,
											"end": 24944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24915,
											"end": 24944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24766,
											"end": 24950,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25039,
											"end": 25050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25073,
											"end": 25079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25068,
											"end": 25071,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25061,
											"end": 25080,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25113,
											"end": 25117,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25108,
											"end": 25111,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25104,
											"end": 25118,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25089,
											"end": 25118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25089,
											"end": 25118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24956,
											"end": 25124,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25214,
											"end": 25225,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25248,
											"end": 25254,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25243,
											"end": 25246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25236,
											"end": 25255,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25288,
											"end": 25292,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25283,
											"end": 25286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25279,
											"end": 25293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25264,
											"end": 25293,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25264,
											"end": 25293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25299,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25345,
											"end": 25348,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25364,
											"end": 25384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 25382,
											"end": 25383,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25364,
											"end": 25384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 25364,
											"end": 25384,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25364,
											"end": 25384,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 25364,
											"end": 25384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25359,
											"end": 25384,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25359,
											"end": 25384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25398,
											"end": 25418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 25416,
											"end": 25417,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25398,
											"end": 25418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 25398,
											"end": 25418,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25398,
											"end": 25418,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 25398,
											"end": 25418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25393,
											"end": 25418,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25393,
											"end": 25418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25552,
											"end": 25553,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25484,
											"end": 25550,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25480,
											"end": 25554,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25477,
											"end": 25478,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25474,
											"end": 25555,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 25471,
											"end": 25578,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25471,
											"end": 25578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 25471,
											"end": 25578,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25558,
											"end": 25576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 25558,
											"end": 25576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 25558,
											"end": 25576,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25558,
											"end": 25576,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 25558,
											"end": 25576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25471,
											"end": 25578,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 25471,
											"end": 25578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25602,
											"end": 25603,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25599,
											"end": 25600,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25595,
											"end": 25604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25588,
											"end": 25604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25588,
											"end": 25604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25305,
											"end": 25610,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25616,
											"end": 25712,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 25616,
											"end": 25712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25653,
											"end": 25660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25682,
											"end": 25706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 25700,
											"end": 25705,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25682,
											"end": 25706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 25682,
											"end": 25706,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25682,
											"end": 25706,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 25682,
											"end": 25706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25671,
											"end": 25706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25671,
											"end": 25706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25616,
											"end": 25712,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25616,
											"end": 25712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25616,
											"end": 25712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25616,
											"end": 25712,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25718,
											"end": 25808,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 25718,
											"end": 25808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25752,
											"end": 25759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25795,
											"end": 25800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25788,
											"end": 25801,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25781,
											"end": 25802,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25770,
											"end": 25802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25770,
											"end": 25802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25718,
											"end": 25808,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25718,
											"end": 25808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25718,
											"end": 25808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25718,
											"end": 25808,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25814,
											"end": 25963,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 25814,
											"end": 25963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25850,
											"end": 25857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25890,
											"end": 25956,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25883,
											"end": 25888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25879,
											"end": 25957,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 25868,
											"end": 25957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25868,
											"end": 25957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25814,
											"end": 25963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25814,
											"end": 25963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25814,
											"end": 25963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25814,
											"end": 25963,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25969,
											"end": 26095,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 25969,
											"end": 26095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26006,
											"end": 26013,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26046,
											"end": 26088,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26039,
											"end": 26044,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26035,
											"end": 26089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 26024,
											"end": 26089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26024,
											"end": 26089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25969,
											"end": 26095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25969,
											"end": 26095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25969,
											"end": 26095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25969,
											"end": 26095,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26101,
											"end": 26178,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 26101,
											"end": 26178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26138,
											"end": 26145,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26167,
											"end": 26172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26156,
											"end": 26172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26156,
											"end": 26172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26101,
											"end": 26178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26101,
											"end": 26178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26101,
											"end": 26178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26101,
											"end": 26178,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26184,
											"end": 26338,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 26184,
											"end": 26338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26268,
											"end": 26274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26263,
											"end": 26266,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26258,
											"end": 26261,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26245,
											"end": 26275,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 26330,
											"end": 26331,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26321,
											"end": 26327,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26316,
											"end": 26319,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26312,
											"end": 26328,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26305,
											"end": 26332,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26184,
											"end": 26338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26184,
											"end": 26338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26184,
											"end": 26338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26184,
											"end": 26338,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26344,
											"end": 26651,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 26344,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26412,
											"end": 26413,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26436,
											"end": 26442,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26433,
											"end": 26434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26430,
											"end": 26443,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 26521,
											"end": 26522,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 26516,
											"end": 26519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26512,
											"end": 26523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26506,
											"end": 26524,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 26502,
											"end": 26503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26497,
											"end": 26500,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 26493,
											"end": 26504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26486,
											"end": 26525,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26458,
											"end": 26460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26455,
											"end": 26456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26451,
											"end": 26461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26446,
											"end": 26461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26446,
											"end": 26461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 26422,
											"end": 26535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26553,
											"end": 26559,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26550,
											"end": 26551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26547,
											"end": 26560,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 26544,
											"end": 26645,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 26544,
											"end": 26645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 26544,
											"end": 26645,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 26633,
											"end": 26634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26624,
											"end": 26630,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 26619,
											"end": 26622,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 26615,
											"end": 26631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26608,
											"end": 26635,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26544,
											"end": 26645,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 26544,
											"end": 26645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26393,
											"end": 26651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26344,
											"end": 26651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26344,
											"end": 26651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26344,
											"end": 26651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26344,
											"end": 26651,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26657,
											"end": 26977,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 26657,
											"end": 26977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26701,
											"end": 26707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26738,
											"end": 26739,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 26732,
											"end": 26736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26728,
											"end": 26740,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 26718,
											"end": 26740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26718,
											"end": 26740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26785,
											"end": 26786,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 26779,
											"end": 26783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26775,
											"end": 26787,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 26806,
											"end": 26824,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 26796,
											"end": 26877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 26796,
											"end": 26877,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 26862,
											"end": 26866,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 26854,
											"end": 26860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26850,
											"end": 26867,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 26840,
											"end": 26867,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26840,
											"end": 26867,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26796,
											"end": 26877,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 26796,
											"end": 26877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26924,
											"end": 26926,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26916,
											"end": 26922,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26913,
											"end": 26927,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 26893,
											"end": 26911,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26890,
											"end": 26928,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 26887,
											"end": 26971,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 26887,
											"end": 26971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 26887,
											"end": 26971,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 26943,
											"end": 26961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 26943,
											"end": 26961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 26943,
											"end": 26961,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26943,
											"end": 26961,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 26943,
											"end": 26961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26887,
											"end": 26971,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 26887,
											"end": 26971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26708,
											"end": 26977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26657,
											"end": 26977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26657,
											"end": 26977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26657,
											"end": 26977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26657,
											"end": 26977,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26983,
											"end": 27264,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 26983,
											"end": 27264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27066,
											"end": 27093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 27088,
											"end": 27092,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27066,
											"end": 27093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 27066,
											"end": 27093,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27066,
											"end": 27093,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 27066,
											"end": 27093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27058,
											"end": 27064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27054,
											"end": 27094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27196,
											"end": 27202,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27184,
											"end": 27194,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27181,
											"end": 27203,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 27160,
											"end": 27178,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27148,
											"end": 27158,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27145,
											"end": 27179,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 27142,
											"end": 27204,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 27139,
											"end": 27227,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 27139,
											"end": 27227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 27139,
											"end": 27227,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27207,
											"end": 27225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 27207,
											"end": 27225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 27207,
											"end": 27225,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27207,
											"end": 27225,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 27207,
											"end": 27225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27139,
											"end": 27227,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 27139,
											"end": 27227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27247,
											"end": 27257,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 27243,
											"end": 27245,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 27236,
											"end": 27258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27026,
											"end": 27264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26983,
											"end": 27264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26983,
											"end": 27264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26983,
											"end": 27264,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27270,
											"end": 27503,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 27270,
											"end": 27503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27309,
											"end": 27312,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27332,
											"end": 27356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 27350,
											"end": 27355,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27332,
											"end": 27356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 27332,
											"end": 27356,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27332,
											"end": 27356,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 27332,
											"end": 27356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27323,
											"end": 27356,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27323,
											"end": 27356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27378,
											"end": 27444,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27371,
											"end": 27376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27368,
											"end": 27445,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 27365,
											"end": 27468,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 27365,
											"end": 27468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 27365,
											"end": 27468,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27448,
											"end": 27466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 27448,
											"end": 27466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 27448,
											"end": 27466,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27448,
											"end": 27466,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 27448,
											"end": 27466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27365,
											"end": 27468,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 27365,
											"end": 27468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27495,
											"end": 27496,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 27488,
											"end": 27493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27484,
											"end": 27497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27477,
											"end": 27497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27477,
											"end": 27497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27270,
											"end": 27503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27270,
											"end": 27503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27270,
											"end": 27503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27270,
											"end": 27503,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27509,
											"end": 27689,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 27509,
											"end": 27689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27557,
											"end": 27634,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27554,
											"end": 27555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27547,
											"end": 27635,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27654,
											"end": 27658,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 27651,
											"end": 27652,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 27644,
											"end": 27659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27678,
											"end": 27682,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 27675,
											"end": 27676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27668,
											"end": 27683,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 27695,
											"end": 27875,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 27695,
											"end": 27875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27743,
											"end": 27820,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27740,
											"end": 27741,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27733,
											"end": 27821,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27840,
											"end": 27844,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 27837,
											"end": 27838,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 27830,
											"end": 27845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27864,
											"end": 27868,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 27861,
											"end": 27862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27854,
											"end": 27869,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 27881,
											"end": 28061,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 27881,
											"end": 28061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27929,
											"end": 28006,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27926,
											"end": 27927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27919,
											"end": 28007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28026,
											"end": 28030,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 28023,
											"end": 28024,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 28016,
											"end": 28031,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28050,
											"end": 28054,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 28047,
											"end": 28048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28040,
											"end": 28055,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28067,
											"end": 28247,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 28067,
											"end": 28247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28115,
											"end": 28192,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28112,
											"end": 28113,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28105,
											"end": 28193,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28212,
											"end": 28216,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 28209,
											"end": 28210,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 28202,
											"end": 28217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 28233,
											"end": 28234,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28226,
											"end": 28241,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28253,
											"end": 28436,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 28253,
											"end": 28436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28288,
											"end": 28291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28326,
											"end": 28327,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 28308,
											"end": 28324,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 28305,
											"end": 28328,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 28302,
											"end": 28430,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 28302,
											"end": 28430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 28302,
											"end": 28430,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 28364,
											"end": 28365,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 28361,
											"end": 28362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28358,
											"end": 28359,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 28343,
											"end": 28366,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 28386,
											"end": 28420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 28417,
											"end": 28418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28411,
											"end": 28419,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 28386,
											"end": 28420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 28386,
											"end": 28420,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28386,
											"end": 28420,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 28386,
											"end": 28420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28379,
											"end": 28420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28379,
											"end": 28420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28302,
											"end": 28430,
											"name": "tag",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 28302,
											"end": 28430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28253,
											"end": 28436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28253,
											"end": 28436,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28442,
											"end": 28559,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 28442,
											"end": 28559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28551,
											"end": 28552,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28548,
											"end": 28549,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 28541,
											"end": 28553,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28565,
											"end": 28682,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 28565,
											"end": 28682,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28674,
											"end": 28675,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28671,
											"end": 28672,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 28664,
											"end": 28676,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28688,
											"end": 28805,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 28688,
											"end": 28805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28797,
											"end": 28798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28794,
											"end": 28795,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 28787,
											"end": 28799,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28811,
											"end": 28928,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 28811,
											"end": 28928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28920,
											"end": 28921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28917,
											"end": 28918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 28910,
											"end": 28922,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28934,
											"end": 29051,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 28934,
											"end": 29051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29043,
											"end": 29044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29040,
											"end": 29041,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29033,
											"end": 29045,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 29057,
											"end": 29159,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 29057,
											"end": 29159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29098,
											"end": 29104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29149,
											"end": 29151,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 29145,
											"end": 29152,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 29140,
											"end": 29142,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 29133,
											"end": 29138,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 29129,
											"end": 29143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29125,
											"end": 29153,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 29115,
											"end": 29153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29115,
											"end": 29153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29057,
											"end": 29159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29057,
											"end": 29159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29057,
											"end": 29159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29057,
											"end": 29159,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29165,
											"end": 29271,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 29165,
											"end": 29271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29209,
											"end": 29217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29258,
											"end": 29263,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29253,
											"end": 29256,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 29249,
											"end": 29264,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 29228,
											"end": 29264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29228,
											"end": 29264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29165,
											"end": 29271,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29165,
											"end": 29271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29165,
											"end": 29271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29165,
											"end": 29271,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29277,
											"end": 29504,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 29277,
											"end": 29504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29417,
											"end": 29451,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 29413,
											"end": 29414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29405,
											"end": 29411,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29401,
											"end": 29415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29394,
											"end": 29452,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29486,
											"end": 29496,
											"name": "PUSH",
											"source": 9,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29481,
											"end": 29483,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29473,
											"end": 29479,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29469,
											"end": 29484,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29462,
											"end": 29497,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29277,
											"end": 29504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29277,
											"end": 29504,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29510,
											"end": 29739,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 29510,
											"end": 29739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29650,
											"end": 29684,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 29646,
											"end": 29647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29638,
											"end": 29644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29634,
											"end": 29648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29627,
											"end": 29685,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29719,
											"end": 29731,
											"name": "PUSH",
											"source": 9,
											"value": "616C6964206F776E657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 29714,
											"end": 29716,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29706,
											"end": 29712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29702,
											"end": 29717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29695,
											"end": 29732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29510,
											"end": 29739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29510,
											"end": 29739,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29745,
											"end": 29978,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 29745,
											"end": 29978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29885,
											"end": 29919,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 29881,
											"end": 29882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29873,
											"end": 29879,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29869,
											"end": 29883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29862,
											"end": 29920,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29954,
											"end": 29970,
											"name": "PUSH",
											"source": 9,
											"value": "6572206F7220617070726F766564000000000000000000000000000000000000"
										},
										{
											"begin": 29949,
											"end": 29951,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29941,
											"end": 29947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29937,
											"end": 29952,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29930,
											"end": 29971,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29745,
											"end": 29978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29745,
											"end": 29978,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29984,
											"end": 30208,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 29984,
											"end": 30208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30124,
											"end": 30158,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 30120,
											"end": 30121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30112,
											"end": 30118,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30108,
											"end": 30122,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30101,
											"end": 30159,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30193,
											"end": 30200,
											"name": "PUSH",
											"source": 9,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30188,
											"end": 30190,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30180,
											"end": 30186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30176,
											"end": 30191,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30169,
											"end": 30201,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29984,
											"end": 30208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29984,
											"end": 30208,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30214,
											"end": 30443,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 30214,
											"end": 30443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30354,
											"end": 30388,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 30350,
											"end": 30351,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30342,
											"end": 30348,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30338,
											"end": 30352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30331,
											"end": 30389,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30423,
											"end": 30435,
											"name": "PUSH",
											"source": 9,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 30418,
											"end": 30420,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30410,
											"end": 30416,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30406,
											"end": 30421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30399,
											"end": 30436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30214,
											"end": 30443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30214,
											"end": 30443,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30449,
											"end": 30677,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 30449,
											"end": 30677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30589,
											"end": 30623,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 30585,
											"end": 30586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30577,
											"end": 30583,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30573,
											"end": 30587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30566,
											"end": 30624,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30658,
											"end": 30669,
											"name": "PUSH",
											"source": 9,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30653,
											"end": 30655,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30645,
											"end": 30651,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30641,
											"end": 30656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30634,
											"end": 30670,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30449,
											"end": 30677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30449,
											"end": 30677,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30683,
											"end": 30911,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 30683,
											"end": 30911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30823,
											"end": 30857,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 30819,
											"end": 30820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30811,
											"end": 30817,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30807,
											"end": 30821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30800,
											"end": 30858,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30892,
											"end": 30903,
											"name": "PUSH",
											"source": 9,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30887,
											"end": 30889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30879,
											"end": 30885,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30875,
											"end": 30890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30868,
											"end": 30904,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30683,
											"end": 30911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30683,
											"end": 30911,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30917,
											"end": 31144,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 30917,
											"end": 31144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31057,
											"end": 31091,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 31053,
											"end": 31054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31045,
											"end": 31051,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31041,
											"end": 31055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31034,
											"end": 31092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31126,
											"end": 31136,
											"name": "PUSH",
											"source": 9,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31121,
											"end": 31123,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31113,
											"end": 31119,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31109,
											"end": 31124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31102,
											"end": 31137,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30917,
											"end": 31144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30917,
											"end": 31144,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31150,
											"end": 31389,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 31150,
											"end": 31389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31290,
											"end": 31324,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2D45524331313535"
										},
										{
											"begin": 31286,
											"end": 31287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31278,
											"end": 31284,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31274,
											"end": 31288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31267,
											"end": 31325,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31359,
											"end": 31381,
											"name": "PUSH",
											"source": 9,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 31354,
											"end": 31356,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31346,
											"end": 31352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31342,
											"end": 31357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31335,
											"end": 31382,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31150,
											"end": 31389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31150,
											"end": 31389,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31395,
											"end": 32106,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 31395,
											"end": 32106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31434,
											"end": 31437,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31472,
											"end": 31476,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 31454,
											"end": 31470,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 31451,
											"end": 31477,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 31448,
											"end": 31487,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 31448,
											"end": 31487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 31448,
											"end": 31487,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 31480,
											"end": 31485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 31480,
											"end": 31485,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31448,
											"end": 31487,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 31448,
											"end": 31487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31509,
											"end": 31529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 31509,
											"end": 31529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 31509,
											"end": 31529,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31509,
											"end": 31529,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 31509,
											"end": 31529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31584,
											"end": 31585,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 31566,
											"end": 31582,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 31562,
											"end": 31586,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 31559,
											"end": 31560,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 31553,
											"end": 31557,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31538,
											"end": 31587,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 31617,
											"end": 31621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 31611,
											"end": 31622,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 31716,
											"end": 31732,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 31709,
											"end": 31713,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 31701,
											"end": 31707,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31697,
											"end": 31714,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31694,
											"end": 31733,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 31661,
											"end": 31679,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31653,
											"end": 31659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31650,
											"end": 31680,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 31634,
											"end": 31747,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 31631,
											"end": 31777,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 31631,
											"end": 31777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 31631,
											"end": 31777,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 31762,
											"end": 31767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31762,
											"end": 31767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31762,
											"end": 31767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 31762,
											"end": 31767,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31631,
											"end": 31777,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 31631,
											"end": 31777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31808,
											"end": 31814,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 31802,
											"end": 31806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31798,
											"end": 31815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31844,
											"end": 31847,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 31838,
											"end": 31848,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 31871,
											"end": 31889,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31863,
											"end": 31869,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31860,
											"end": 31890,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 31857,
											"end": 31900,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 31857,
											"end": 31900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 31857,
											"end": 31900,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 31893,
											"end": 31898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31893,
											"end": 31898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31893,
											"end": 31898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31893,
											"end": 31898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31893,
											"end": 31898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 31893,
											"end": 31898,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31857,
											"end": 31900,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 31857,
											"end": 31900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31941,
											"end": 31947,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 31934,
											"end": 31938,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31929,
											"end": 31932,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31925,
											"end": 31939,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31921,
											"end": 31948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32000,
											"end": 32001,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 31982,
											"end": 31998,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 31978,
											"end": 32002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 31972,
											"end": 31976,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 31968,
											"end": 32003,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31963,
											"end": 31966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31960,
											"end": 32004,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 31957,
											"end": 32014,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 31957,
											"end": 32014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 31957,
											"end": 32014,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 32007,
											"end": 32012,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31957,
											"end": 32014,
											"name": "tag",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 31957,
											"end": 32014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32024,
											"end": 32081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 32072,
											"end": 32078,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32066,
											"end": 32070,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32062,
											"end": 32079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32054,
											"end": 32060,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 32050,
											"end": 32080,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32044,
											"end": 32048,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 32024,
											"end": 32081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 32024,
											"end": 32081,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32024,
											"end": 32081,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 32024,
											"end": 32081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32097,
											"end": 32100,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32090,
											"end": 32100,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 32090,
											"end": 32100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31438,
											"end": 32106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31438,
											"end": 32106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31438,
											"end": 32106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31438,
											"end": 32106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31438,
											"end": 32106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31395,
											"end": 32106,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 31395,
											"end": 32106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31395,
											"end": 32106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31395,
											"end": 32106,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32112,
											"end": 32234,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 32112,
											"end": 32234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32185,
											"end": 32209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 32203,
											"end": 32208,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32185,
											"end": 32209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 32185,
											"end": 32209,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32185,
											"end": 32209,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 32185,
											"end": 32209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32178,
											"end": 32183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32175,
											"end": 32210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 32165,
											"end": 32228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 32165,
											"end": 32228,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32224,
											"end": 32225,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32221,
											"end": 32222,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32214,
											"end": 32226,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 32165,
											"end": 32228,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 32165,
											"end": 32228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32112,
											"end": 32234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32112,
											"end": 32234,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32240,
											"end": 32356,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 32240,
											"end": 32356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32310,
											"end": 32331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 32325,
											"end": 32330,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32310,
											"end": 32331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 32310,
											"end": 32331,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32310,
											"end": 32331,
											"name": "tag",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 32310,
											"end": 32331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32303,
											"end": 32308,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32300,
											"end": 32332,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 32290,
											"end": 32350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 32290,
											"end": 32350,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32346,
											"end": 32347,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32343,
											"end": 32344,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32336,
											"end": 32348,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 32290,
											"end": 32350,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 32290,
											"end": 32350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32240,
											"end": 32356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32240,
											"end": 32356,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32362,
											"end": 32482,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 32362,
											"end": 32482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32434,
											"end": 32457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 32451,
											"end": 32456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32434,
											"end": 32457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 32434,
											"end": 32457,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32434,
											"end": 32457,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 32434,
											"end": 32457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32427,
											"end": 32432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32424,
											"end": 32458,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 32414,
											"end": 32476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 32414,
											"end": 32476,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32472,
											"end": 32473,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32469,
											"end": 32470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32462,
											"end": 32474,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 32414,
											"end": 32476,
											"name": "tag",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 32414,
											"end": 32476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32362,
											"end": 32482,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32362,
											"end": 32482,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32488,
											"end": 32610,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 32488,
											"end": 32610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32561,
											"end": 32585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 32579,
											"end": 32584,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32561,
											"end": 32585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 32561,
											"end": 32585,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32561,
											"end": 32585,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 32561,
											"end": 32585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32554,
											"end": 32559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32551,
											"end": 32586,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 32541,
											"end": 32604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 32541,
											"end": 32604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32600,
											"end": 32601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32597,
											"end": 32598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32590,
											"end": 32602,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 32541,
											"end": 32604,
											"name": "tag",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 32541,
											"end": 32604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32488,
											"end": 32610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32488,
											"end": 32610,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd917747dc87f189c6779b894f367a028f9dca4be930283cccec8f312966af820\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a5e5b99830cf233f77aa3b1bd1f57561faee103beeee88e6a6f86d044817bbb\",\"dweb:/ipfs/QmREYidSDpHPig3AhxzsMHg3w2ZtMeGfRhcokXxEZyj6fC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220707b19f8ce8fee8f6afc7520aba0995f8916b0cf807093a219746de5a8d7065664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220707b19f8ce8fee8f6afc7520aba0995f8916b0cf807093a219746de5a8d7065664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x7B19F8CE8FEE8F6AFC7520ABA0995F8916 0xB0 0xCF DUP1 PUSH17 0x93A219746DE5A8D7065664736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8964:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220707b19f8ce8fee8f6afc7520aba0995f8916b0cf807093a219746de5a8d7065664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x7B19F8CE8FEE8F6AFC7520ABA0995F8916 0xB0 0xCF DUP1 PUSH17 0x93A219746DE5A8D7065664736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8964:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220707b19f8ce8fee8f6afc7520aba0995f8916b0cf807093a219746de5a8d7065664736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WatchTrader.sol": {
				"WatchTrader": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "itemContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "itemID",
									"type": "uint256"
								}
							],
							"name": "addListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "listings",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "itemContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "itemID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "purchase",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "destAddr",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/WatchTrader.sol\":147:2125  contract WatchTrader{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/WatchTrader.sol\":147:2125  contract WatchTrader{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x07df30\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf714ce\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x80abbe57\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x98968f15\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/WatchTrader.sol\":250:313  mapping(address => mapping(uint256 => Listing)) public listings */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap3\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WatchTrader.sol\":1903:2123  function withdraw(uint256 amount, address payable destAddr)public{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/WatchTrader.sol\":319:362  mapping(address => uint256) public balances */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WatchTrader.sol\":635:1057  function addListing(uint256 price, address itemContractAddress, uint256 itemID) public{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/WatchTrader.sol\":1268:1712  function purchase(address itemContractAddress, uint256 itemID, uint256 amount) public payable {... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/WatchTrader.sol\":250:313  mapping(address => mapping(uint256 => Listing)) public listings */\n    tag_11:\n      mstore(0x20, 0x00)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/WatchTrader.sol\":1903:2123  function withdraw(uint256 amount, address payable destAddr)public{... */\n    tag_18:\n        /* \"contracts/WatchTrader.sol\":1996:2004  balances */\n      0x01\n        /* \"contracts/WatchTrader.sol\":1996:2016  balances[msg.sender] */\n      0x00\n        /* \"contracts/WatchTrader.sol\":2005:2015  msg.sender */\n      caller\n        /* \"contracts/WatchTrader.sol\":1996:2016  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/WatchTrader.sol\":1986:1992  amount */\n      dup3\n        /* \"contracts/WatchTrader.sol\":1986:2016  amount <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"contracts/WatchTrader.sol\":1978:2040  require(amount <= balances[msg.sender], \"Insufficient funds.\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"contracts/WatchTrader.sol\":2051:2059  destAddr */\n      dup1\n        /* \"contracts/WatchTrader.sol\":2051:2068  destAddr.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/WatchTrader.sol\":2051:2076  destAddr.transfer(amount) */\n      0x08fc\n        /* \"contracts/WatchTrader.sol\":2069:2075  amount */\n      dup4\n        /* \"contracts/WatchTrader.sol\":2051:2076  destAddr.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n        /* \"contracts/WatchTrader.sol\":2110:2116  amount */\n      dup2\n        /* \"contracts/WatchTrader.sol\":2086:2094  balances */\n      0x01\n        /* \"contracts/WatchTrader.sol\":2086:2106  balances[msg.sender] */\n      0x00\n        /* \"contracts/WatchTrader.sol\":2095:2105  msg.sender */\n      caller\n        /* \"contracts/WatchTrader.sol\":2086:2106  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/WatchTrader.sol\":2086:2116  balances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WatchTrader.sol\":1903:2123  function withdraw(uint256 amount, address payable destAddr)public{... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WatchTrader.sol\":319:362  mapping(address => uint256) public balances */\n    tag_23:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/WatchTrader.sol\":635:1057  function addListing(uint256 price, address itemContractAddress, uint256 itemID) public{... */\n    tag_30:\n        /* \"contracts/WatchTrader.sol\":731:744  ERC1155 token */\n      0x00\n        /* \"contracts/WatchTrader.sol\":755:774  itemContractAddress */\n      dup3\n        /* \"contracts/WatchTrader.sol\":731:775  ERC1155 token = ERC1155(itemContractAddress) */\n      swap1\n      pop\n        /* \"contracts/WatchTrader.sol\":831:832  0 */\n      0x00\n        /* \"contracts/WatchTrader.sol\":793:798  token */\n      dup2\n        /* \"contracts/WatchTrader.sol\":793:808  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfdd58e\n        /* \"contracts/WatchTrader.sol\":809:819  msg.sender */\n      caller\n        /* \"contracts/WatchTrader.sol\":821:827  itemID */\n      dup6\n        /* \"contracts/WatchTrader.sol\":793:828  token.balanceOf(msg.sender, itemID) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"contracts/WatchTrader.sol\":793:832  token.balanceOf(msg.sender, itemID) > 0 */\n      gt\n        /* \"contracts/WatchTrader.sol\":785:874  require(token.balanceOf(msg.sender, itemID) > 0, \"Must own token to be able to list it.\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"contracts/WatchTrader.sol\":892:897  token */\n      dup1\n        /* \"contracts/WatchTrader.sol\":892:914  token.isApprovedForAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe985e9c5\n        /* \"contracts/WatchTrader.sol\":915:925  msg.sender */\n      caller\n        /* \"contracts/WatchTrader.sol\":935:939  this */\n      address\n        /* \"contracts/WatchTrader.sol\":892:941  token.isApprovedForAll(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"contracts/WatchTrader.sol\":884:972  require(token.isApprovedForAll(msg.sender, address(this)), \"Contract must be approved.\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"contracts/WatchTrader.sol\":1023:1049  Listing(price, msg.sender) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/WatchTrader.sol\":1031:1036  price */\n      dup6\n        /* \"contracts/WatchTrader.sol\":1023:1049  Listing(price, msg.sender) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/WatchTrader.sol\":1038:1048  msg.sender */\n      caller\n        /* \"contracts/WatchTrader.sol\":1023:1049  Listing(price, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/WatchTrader.sol\":983:991  listings */\n      0x00\n        /* \"contracts/WatchTrader.sol\":983:1012  listings[itemContractAddress] */\n      dup1\n        /* \"contracts/WatchTrader.sol\":992:1011  itemContractAddress */\n      dup6\n        /* \"contracts/WatchTrader.sol\":983:1012  listings[itemContractAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/WatchTrader.sol\":983:1020  listings[itemContractAddress][itemID] */\n      0x00\n        /* \"contracts/WatchTrader.sol\":1013:1019  itemID */\n      dup5\n        /* \"contracts/WatchTrader.sol\":983:1020  listings[itemContractAddress][itemID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/WatchTrader.sol\":983:1049  listings[itemContractAddress][itemID] = Listing(price, msg.sender) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/WatchTrader.sol\":721:1057  {... */\n      pop\n        /* \"contracts/WatchTrader.sol\":635:1057  function addListing(uint256 price, address itemContractAddress, uint256 itemID) public{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WatchTrader.sol\":1268:1712  function purchase(address itemContractAddress, uint256 itemID, uint256 amount) public payable {... */\n    tag_34:\n        /* \"contracts/WatchTrader.sol\":1372:1385  ERC1155 token */\n      0x00\n        /* \"contracts/WatchTrader.sol\":1396:1415  itemContractAddress */\n      dup4\n        /* \"contracts/WatchTrader.sol\":1372:1416  ERC1155 token = ERC1155(itemContractAddress) */\n      swap1\n      pop\n        /* \"contracts/WatchTrader.sol\":1426:1445  Listing memory item */\n      0x00\n        /* \"contracts/WatchTrader.sol\":1448:1456  listings */\n      dup1\n        /* \"contracts/WatchTrader.sol\":1448:1477  listings[itemContractAddress] */\n      0x00\n        /* \"contracts/WatchTrader.sol\":1457:1476  itemContractAddress */\n      dup7\n        /* \"contracts/WatchTrader.sol\":1448:1477  listings[itemContractAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/WatchTrader.sol\":1448:1485  listings[itemContractAddress][itemID] */\n      0x00\n        /* \"contracts/WatchTrader.sol\":1478:1484  itemID */\n      dup6\n        /* \"contracts/WatchTrader.sol\":1448:1485  listings[itemContractAddress][itemID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/WatchTrader.sol\":1426:1485  Listing memory item = listings[itemContractAddress][itemID] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/WatchTrader.sol\":1530:1536  amount */\n      dup3\n        /* \"contracts/WatchTrader.sol\":1517:1521  item */\n      dup2\n        /* \"contracts/WatchTrader.sol\":1517:1527  item.price */\n      0x00\n      add\n      mload\n        /* \"contracts/WatchTrader.sol\":1517:1536  item.price * amount */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"contracts/WatchTrader.sol\":1504:1513  msg.value */\n      callvalue\n        /* \"contracts/WatchTrader.sol\":1504:1536  msg.value >= item.price * amount */\n      lt\n      iszero\n        /* \"contracts/WatchTrader.sol\":1496:1576  require(msg.value >= item.price * amount, \"Insufficient amount sent to seller.\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"contracts/WatchTrader.sol\":1611:1620  msg.value */\n      callvalue\n        /* \"contracts/WatchTrader.sol\":1586:1594  balances */\n      0x01\n        /* \"contracts/WatchTrader.sol\":1586:1607  balances[item.seller] */\n      0x00\n        /* \"contracts/WatchTrader.sol\":1595:1599  item */\n      dup4\n        /* \"contracts/WatchTrader.sol\":1595:1606  item.seller */\n      0x20\n      add\n      mload\n        /* \"contracts/WatchTrader.sol\":1586:1607  balances[item.seller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/WatchTrader.sol\":1586:1620  balances[item.seller] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WatchTrader.sol\":1630:1635  token */\n      dup2\n        /* \"contracts/WatchTrader.sol\":1630:1652  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"contracts/WatchTrader.sol\":1653:1657  item */\n      dup3\n        /* \"contracts/WatchTrader.sol\":1653:1664  item.seller */\n      0x20\n      add\n      mload\n        /* \"contracts/WatchTrader.sol\":1666:1676  msg.sender */\n      caller\n        /* \"contracts/WatchTrader.sol\":1678:1684  itemID */\n      dup8\n        /* \"contracts/WatchTrader.sol\":1686:1692  amount */\n      dup8\n        /* \"contracts/WatchTrader.sol\":1630:1705  token.safeTransferFrom(item.seller, msg.sender, itemID, amount, \"Transfer\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/WatchTrader.sol\":1362:1712  {... */\n      pop\n      pop\n        /* \"contracts/WatchTrader.sol\":1268:1712  function purchase(address itemContractAddress, uint256 itemID, uint256 amount) public payable {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_78:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_80\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:307   */\n    tag_82:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":244:250   */\n      dup2\n        /* \"#utility.yul\":231:251   */\n      calldataload\n        /* \"#utility.yul\":222:251   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:301   */\n      tag_84\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":260:301   */\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":152:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:450   */\n    tag_86:\n        /* \"#utility.yul\":367:372   */\n      0x00\n        /* \"#utility.yul\":398:404   */\n      dup2\n        /* \"#utility.yul\":392:405   */\n      mload\n        /* \"#utility.yul\":383:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":414:444   */\n      tag_88\n        /* \"#utility.yul\":438:443   */\n      dup2\n        /* \"#utility.yul\":414:444   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":313:450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":456:595   */\n    tag_90:\n        /* \"#utility.yul\":502:507   */\n      0x00\n        /* \"#utility.yul\":540:546   */\n      dup2\n        /* \"#utility.yul\":527:547   */\n      calldataload\n        /* \"#utility.yul\":518:547   */\n      swap1\n      pop\n        /* \"#utility.yul\":556:589   */\n      tag_92\n        /* \"#utility.yul\":583:588   */\n      dup2\n        /* \"#utility.yul\":556:589   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":456:595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":601:744   */\n    tag_94:\n        /* \"#utility.yul\":658:663   */\n      0x00\n        /* \"#utility.yul\":689:695   */\n      dup2\n        /* \"#utility.yul\":683:696   */\n      mload\n        /* \"#utility.yul\":674:696   */\n      swap1\n      pop\n        /* \"#utility.yul\":705:738   */\n      tag_96\n        /* \"#utility.yul\":732:737   */\n      dup2\n        /* \"#utility.yul\":705:738   */\n      tag_93\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":601:744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":750:1079   */\n    tag_22:\n        /* \"#utility.yul\":809:815   */\n      0x00\n        /* \"#utility.yul\":858:860   */\n      0x20\n        /* \"#utility.yul\":846:855   */\n      dup3\n        /* \"#utility.yul\":837:844   */\n      dup5\n        /* \"#utility.yul\":833:856   */\n      sub\n        /* \"#utility.yul\":829:861   */\n      slt\n        /* \"#utility.yul\":826:945   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":864:943   */\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":826:945   */\n    tag_98:\n        /* \"#utility.yul\":984:985   */\n      0x00\n        /* \"#utility.yul\":1009:1062   */\n      tag_101\n        /* \"#utility.yul\":1054:1061   */\n      dup5\n        /* \"#utility.yul\":1045:1051   */\n      dup3\n        /* \"#utility.yul\":1034:1043   */\n      dup6\n        /* \"#utility.yul\":1030:1052   */\n      add\n        /* \"#utility.yul\":1009:1062   */\n      tag_78\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":999:1062   */\n      swap2\n      pop\n        /* \"#utility.yul\":955:1072   */\n      pop\n        /* \"#utility.yul\":750:1079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1085:1559   */\n    tag_10:\n        /* \"#utility.yul\":1153:1159   */\n      0x00\n        /* \"#utility.yul\":1161:1167   */\n      dup1\n        /* \"#utility.yul\":1210:1212   */\n      0x40\n        /* \"#utility.yul\":1198:1207   */\n      dup4\n        /* \"#utility.yul\":1189:1196   */\n      dup6\n        /* \"#utility.yul\":1185:1208   */\n      sub\n        /* \"#utility.yul\":1181:1213   */\n      slt\n        /* \"#utility.yul\":1178:1297   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":1216:1295   */\n      tag_104\n      tag_100\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1178:1297   */\n    tag_103:\n        /* \"#utility.yul\":1336:1337   */\n      0x00\n        /* \"#utility.yul\":1361:1414   */\n      tag_105\n        /* \"#utility.yul\":1406:1413   */\n      dup6\n        /* \"#utility.yul\":1397:1403   */\n      dup3\n        /* \"#utility.yul\":1386:1395   */\n      dup7\n        /* \"#utility.yul\":1382:1404   */\n      add\n        /* \"#utility.yul\":1361:1414   */\n      tag_78\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1351:1414   */\n      swap3\n      pop\n        /* \"#utility.yul\":1307:1424   */\n      pop\n        /* \"#utility.yul\":1463:1465   */\n      0x20\n        /* \"#utility.yul\":1489:1542   */\n      tag_106\n        /* \"#utility.yul\":1534:1541   */\n      dup6\n        /* \"#utility.yul\":1525:1531   */\n      dup3\n        /* \"#utility.yul\":1514:1523   */\n      dup7\n        /* \"#utility.yul\":1510:1532   */\n      add\n        /* \"#utility.yul\":1489:1542   */\n      tag_90\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1479:1542   */\n      swap2\n      pop\n        /* \"#utility.yul\":1434:1552   */\n      pop\n        /* \"#utility.yul\":1085:1559   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1565:2184   */\n    tag_33:\n        /* \"#utility.yul\":1642:1648   */\n      0x00\n        /* \"#utility.yul\":1650:1656   */\n      dup1\n        /* \"#utility.yul\":1658:1664   */\n      0x00\n        /* \"#utility.yul\":1707:1709   */\n      0x60\n        /* \"#utility.yul\":1695:1704   */\n      dup5\n        /* \"#utility.yul\":1686:1693   */\n      dup7\n        /* \"#utility.yul\":1682:1705   */\n      sub\n        /* \"#utility.yul\":1678:1710   */\n      slt\n        /* \"#utility.yul\":1675:1794   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":1713:1792   */\n      tag_109\n      tag_100\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1675:1794   */\n    tag_108:\n        /* \"#utility.yul\":1833:1834   */\n      0x00\n        /* \"#utility.yul\":1858:1911   */\n      tag_110\n        /* \"#utility.yul\":1903:1910   */\n      dup7\n        /* \"#utility.yul\":1894:1900   */\n      dup3\n        /* \"#utility.yul\":1883:1892   */\n      dup8\n        /* \"#utility.yul\":1879:1901   */\n      add\n        /* \"#utility.yul\":1858:1911   */\n      tag_78\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1848:1911   */\n      swap4\n      pop\n        /* \"#utility.yul\":1804:1921   */\n      pop\n        /* \"#utility.yul\":1960:1962   */\n      0x20\n        /* \"#utility.yul\":1986:2039   */\n      tag_111\n        /* \"#utility.yul\":2031:2038   */\n      dup7\n        /* \"#utility.yul\":2022:2028   */\n      dup3\n        /* \"#utility.yul\":2011:2020   */\n      dup8\n        /* \"#utility.yul\":2007:2029   */\n      add\n        /* \"#utility.yul\":1986:2039   */\n      tag_90\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1976:2039   */\n      swap3\n      pop\n        /* \"#utility.yul\":1931:2049   */\n      pop\n        /* \"#utility.yul\":2088:2090   */\n      0x40\n        /* \"#utility.yul\":2114:2167   */\n      tag_112\n        /* \"#utility.yul\":2159:2166   */\n      dup7\n        /* \"#utility.yul\":2150:2156   */\n      dup3\n        /* \"#utility.yul\":2139:2148   */\n      dup8\n        /* \"#utility.yul\":2135:2157   */\n      add\n        /* \"#utility.yul\":2114:2167   */\n      tag_90\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2104:2167   */\n      swap2\n      pop\n        /* \"#utility.yul\":2059:2177   */\n      pop\n        /* \"#utility.yul\":1565:2184   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2190:2535   */\n    tag_60:\n        /* \"#utility.yul\":2257:2263   */\n      0x00\n        /* \"#utility.yul\":2306:2308   */\n      0x20\n        /* \"#utility.yul\":2294:2303   */\n      dup3\n        /* \"#utility.yul\":2285:2292   */\n      dup5\n        /* \"#utility.yul\":2281:2304   */\n      sub\n        /* \"#utility.yul\":2277:2309   */\n      slt\n        /* \"#utility.yul\":2274:2393   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":2312:2391   */\n      tag_115\n      tag_100\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2274:2393   */\n    tag_114:\n        /* \"#utility.yul\":2432:2433   */\n      0x00\n        /* \"#utility.yul\":2457:2518   */\n      tag_116\n        /* \"#utility.yul\":2510:2517   */\n      dup5\n        /* \"#utility.yul\":2501:2507   */\n      dup3\n        /* \"#utility.yul\":2490:2499   */\n      dup6\n        /* \"#utility.yul\":2486:2508   */\n      add\n        /* \"#utility.yul\":2457:2518   */\n      tag_86\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2447:2518   */\n      swap2\n      pop\n        /* \"#utility.yul\":2403:2528   */\n      pop\n        /* \"#utility.yul\":2190:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2892   */\n    tag_50:\n        /* \"#utility.yul\":2611:2617   */\n      0x00\n        /* \"#utility.yul\":2660:2662   */\n      0x20\n        /* \"#utility.yul\":2648:2657   */\n      dup3\n        /* \"#utility.yul\":2639:2646   */\n      dup5\n        /* \"#utility.yul\":2635:2658   */\n      sub\n        /* \"#utility.yul\":2631:2663   */\n      slt\n        /* \"#utility.yul\":2628:2747   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":2666:2745   */\n      tag_119\n      tag_100\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2628:2747   */\n    tag_118:\n        /* \"#utility.yul\":2786:2787   */\n      0x00\n        /* \"#utility.yul\":2811:2875   */\n      tag_120\n        /* \"#utility.yul\":2867:2874   */\n      dup5\n        /* \"#utility.yul\":2858:2864   */\n      dup3\n        /* \"#utility.yul\":2847:2856   */\n      dup6\n        /* \"#utility.yul\":2843:2865   */\n      add\n        /* \"#utility.yul\":2811:2875   */\n      tag_94\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2801:2875   */\n      swap2\n      pop\n        /* \"#utility.yul\":2757:2885   */\n      pop\n        /* \"#utility.yul\":2541:2892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2898:3388   */\n    tag_17:\n        /* \"#utility.yul\":2974:2980   */\n      0x00\n        /* \"#utility.yul\":2982:2988   */\n      dup1\n        /* \"#utility.yul\":3031:3033   */\n      0x40\n        /* \"#utility.yul\":3019:3028   */\n      dup4\n        /* \"#utility.yul\":3010:3017   */\n      dup6\n        /* \"#utility.yul\":3006:3029   */\n      sub\n        /* \"#utility.yul\":3002:3034   */\n      slt\n        /* \"#utility.yul\":2999:3118   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":3037:3116   */\n      tag_123\n      tag_100\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2999:3118   */\n    tag_122:\n        /* \"#utility.yul\":3157:3158   */\n      0x00\n        /* \"#utility.yul\":3182:3235   */\n      tag_124\n        /* \"#utility.yul\":3227:3234   */\n      dup6\n        /* \"#utility.yul\":3218:3224   */\n      dup3\n        /* \"#utility.yul\":3207:3216   */\n      dup7\n        /* \"#utility.yul\":3203:3225   */\n      add\n        /* \"#utility.yul\":3182:3235   */\n      tag_90\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3172:3235   */\n      swap3\n      pop\n        /* \"#utility.yul\":3128:3245   */\n      pop\n        /* \"#utility.yul\":3284:3286   */\n      0x20\n        /* \"#utility.yul\":3310:3371   */\n      tag_125\n        /* \"#utility.yul\":3363:3370   */\n      dup6\n        /* \"#utility.yul\":3354:3360   */\n      dup3\n        /* \"#utility.yul\":3343:3352   */\n      dup7\n        /* \"#utility.yul\":3339:3361   */\n      add\n        /* \"#utility.yul\":3310:3371   */\n      tag_82\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3300:3371   */\n      swap2\n      pop\n        /* \"#utility.yul\":3255:3381   */\n      pop\n        /* \"#utility.yul\":2898:3388   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3394:4013   */\n    tag_29:\n        /* \"#utility.yul\":3471:3477   */\n      0x00\n        /* \"#utility.yul\":3479:3485   */\n      dup1\n        /* \"#utility.yul\":3487:3493   */\n      0x00\n        /* \"#utility.yul\":3536:3538   */\n      0x60\n        /* \"#utility.yul\":3524:3533   */\n      dup5\n        /* \"#utility.yul\":3515:3522   */\n      dup7\n        /* \"#utility.yul\":3511:3534   */\n      sub\n        /* \"#utility.yul\":3507:3539   */\n      slt\n        /* \"#utility.yul\":3504:3623   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":3542:3621   */\n      tag_128\n      tag_100\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3504:3623   */\n    tag_127:\n        /* \"#utility.yul\":3662:3663   */\n      0x00\n        /* \"#utility.yul\":3687:3740   */\n      tag_129\n        /* \"#utility.yul\":3732:3739   */\n      dup7\n        /* \"#utility.yul\":3723:3729   */\n      dup3\n        /* \"#utility.yul\":3712:3721   */\n      dup8\n        /* \"#utility.yul\":3708:3730   */\n      add\n        /* \"#utility.yul\":3687:3740   */\n      tag_90\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3677:3740   */\n      swap4\n      pop\n        /* \"#utility.yul\":3633:3750   */\n      pop\n        /* \"#utility.yul\":3789:3791   */\n      0x20\n        /* \"#utility.yul\":3815:3868   */\n      tag_130\n        /* \"#utility.yul\":3860:3867   */\n      dup7\n        /* \"#utility.yul\":3851:3857   */\n      dup3\n        /* \"#utility.yul\":3840:3849   */\n      dup8\n        /* \"#utility.yul\":3836:3858   */\n      add\n        /* \"#utility.yul\":3815:3868   */\n      tag_78\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3805:3868   */\n      swap3\n      pop\n        /* \"#utility.yul\":3760:3878   */\n      pop\n        /* \"#utility.yul\":3917:3919   */\n      0x40\n        /* \"#utility.yul\":3943:3996   */\n      tag_131\n        /* \"#utility.yul\":3988:3995   */\n      dup7\n        /* \"#utility.yul\":3979:3985   */\n      dup3\n        /* \"#utility.yul\":3968:3977   */\n      dup8\n        /* \"#utility.yul\":3964:3986   */\n      add\n        /* \"#utility.yul\":3943:3996   */\n      tag_90\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3933:3996   */\n      swap2\n      pop\n        /* \"#utility.yul\":3888:4006   */\n      pop\n        /* \"#utility.yul\":3394:4013   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4019:4137   */\n    tag_132:\n        /* \"#utility.yul\":4106:4130   */\n      tag_134\n        /* \"#utility.yul\":4124:4129   */\n      dup2\n        /* \"#utility.yul\":4106:4130   */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4101:4104   */\n      dup3\n        /* \"#utility.yul\":4094:4131   */\n      mstore\n        /* \"#utility.yul\":4019:4137   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4143:4509   */\n    tag_136:\n        /* \"#utility.yul\":4285:4288   */\n      0x00\n        /* \"#utility.yul\":4306:4373   */\n      tag_138\n        /* \"#utility.yul\":4370:4372   */\n      0x1a\n        /* \"#utility.yul\":4365:4368   */\n      dup4\n        /* \"#utility.yul\":4306:4373   */\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4299:4373   */\n      swap2\n      pop\n        /* \"#utility.yul\":4382:4475   */\n      tag_140\n        /* \"#utility.yul\":4471:4474   */\n      dup3\n        /* \"#utility.yul\":4382:4475   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4500:4502   */\n      0x20\n        /* \"#utility.yul\":4495:4498   */\n      dup3\n        /* \"#utility.yul\":4491:4503   */\n      add\n        /* \"#utility.yul\":4484:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4143:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4881   */\n    tag_142:\n        /* \"#utility.yul\":4657:4660   */\n      0x00\n        /* \"#utility.yul\":4678:4745   */\n      tag_144\n        /* \"#utility.yul\":4742:4744   */\n      0x23\n        /* \"#utility.yul\":4737:4740   */\n      dup4\n        /* \"#utility.yul\":4678:4745   */\n      tag_139\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4671:4745   */\n      swap2\n      pop\n        /* \"#utility.yul\":4754:4847   */\n      tag_145\n        /* \"#utility.yul\":4843:4846   */\n      dup3\n        /* \"#utility.yul\":4754:4847   */\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4872:4874   */\n      0x40\n        /* \"#utility.yul\":4867:4870   */\n      dup3\n        /* \"#utility.yul\":4863:4875   */\n      add\n        /* \"#utility.yul\":4856:4875   */\n      swap1\n      pop\n        /* \"#utility.yul\":4515:4881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4887:5253   */\n    tag_147:\n        /* \"#utility.yul\":5029:5032   */\n      0x00\n        /* \"#utility.yul\":5050:5117   */\n      tag_149\n        /* \"#utility.yul\":5114:5116   */\n      0x25\n        /* \"#utility.yul\":5109:5112   */\n      dup4\n        /* \"#utility.yul\":5050:5117   */\n      tag_139\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5043:5117   */\n      swap2\n      pop\n        /* \"#utility.yul\":5126:5219   */\n      tag_150\n        /* \"#utility.yul\":5215:5218   */\n      dup3\n        /* \"#utility.yul\":5126:5219   */\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5244:5246   */\n      0x40\n        /* \"#utility.yul\":5239:5242   */\n      dup3\n        /* \"#utility.yul\":5235:5247   */\n      add\n        /* \"#utility.yul\":5228:5247   */\n      swap1\n      pop\n        /* \"#utility.yul\":4887:5253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5259:5622   */\n    tag_152:\n        /* \"#utility.yul\":5400:5403   */\n      0x00\n        /* \"#utility.yul\":5421:5486   */\n      tag_154\n        /* \"#utility.yul\":5484:5485   */\n      0x08\n        /* \"#utility.yul\":5479:5482   */\n      dup4\n        /* \"#utility.yul\":5421:5486   */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5414:5486   */\n      swap2\n      pop\n        /* \"#utility.yul\":5495:5588   */\n      tag_156\n        /* \"#utility.yul\":5584:5587   */\n      dup3\n        /* \"#utility.yul\":5495:5588   */\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5613:5615   */\n      0x20\n        /* \"#utility.yul\":5608:5611   */\n      dup3\n        /* \"#utility.yul\":5604:5616   */\n      add\n        /* \"#utility.yul\":5597:5616   */\n      swap1\n      pop\n        /* \"#utility.yul\":5259:5622   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5628:5994   */\n    tag_158:\n        /* \"#utility.yul\":5770:5773   */\n      0x00\n        /* \"#utility.yul\":5791:5858   */\n      tag_160\n        /* \"#utility.yul\":5855:5857   */\n      0x13\n        /* \"#utility.yul\":5850:5853   */\n      dup4\n        /* \"#utility.yul\":5791:5858   */\n      tag_139\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5784:5858   */\n      swap2\n      pop\n        /* \"#utility.yul\":5867:5960   */\n      tag_161\n        /* \"#utility.yul\":5956:5959   */\n      dup3\n        /* \"#utility.yul\":5867:5960   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5985:5987   */\n      0x20\n        /* \"#utility.yul\":5980:5983   */\n      dup3\n        /* \"#utility.yul\":5976:5988   */\n      add\n        /* \"#utility.yul\":5969:5988   */\n      swap1\n      pop\n        /* \"#utility.yul\":5628:5994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6000:6118   */\n    tag_163:\n        /* \"#utility.yul\":6087:6111   */\n      tag_165\n        /* \"#utility.yul\":6105:6110   */\n      dup2\n        /* \"#utility.yul\":6087:6111   */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6082:6085   */\n      dup3\n        /* \"#utility.yul\":6075:6112   */\n      mstore\n        /* \"#utility.yul\":6000:6118   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6124:6456   */\n    tag_55:\n        /* \"#utility.yul\":6245:6249   */\n      0x00\n        /* \"#utility.yul\":6283:6285   */\n      0x40\n        /* \"#utility.yul\":6272:6281   */\n      dup3\n        /* \"#utility.yul\":6268:6286   */\n      add\n        /* \"#utility.yul\":6260:6286   */\n      swap1\n      pop\n        /* \"#utility.yul\":6296:6367   */\n      tag_168\n        /* \"#utility.yul\":6364:6365   */\n      0x00\n        /* \"#utility.yul\":6353:6362   */\n      dup4\n        /* \"#utility.yul\":6349:6366   */\n      add\n        /* \"#utility.yul\":6340:6346   */\n      dup6\n        /* \"#utility.yul\":6296:6367   */\n      tag_132\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":6377:6449   */\n      tag_169\n        /* \"#utility.yul\":6445:6447   */\n      0x20\n        /* \"#utility.yul\":6434:6443   */\n      dup4\n        /* \"#utility.yul\":6430:6448   */\n      add\n        /* \"#utility.yul\":6421:6427   */\n      dup5\n        /* \"#utility.yul\":6377:6449   */\n      tag_132\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6124:6456   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6462:7321   */\n    tag_73:\n        /* \"#utility.yul\":6739:6743   */\n      0x00\n        /* \"#utility.yul\":6777:6780   */\n      0xa0\n        /* \"#utility.yul\":6766:6775   */\n      dup3\n        /* \"#utility.yul\":6762:6781   */\n      add\n        /* \"#utility.yul\":6754:6781   */\n      swap1\n      pop\n        /* \"#utility.yul\":6791:6862   */\n      tag_171\n        /* \"#utility.yul\":6859:6860   */\n      0x00\n        /* \"#utility.yul\":6848:6857   */\n      dup4\n        /* \"#utility.yul\":6844:6861   */\n      add\n        /* \"#utility.yul\":6835:6841   */\n      dup8\n        /* \"#utility.yul\":6791:6862   */\n      tag_132\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6872:6944   */\n      tag_172\n        /* \"#utility.yul\":6940:6942   */\n      0x20\n        /* \"#utility.yul\":6929:6938   */\n      dup4\n        /* \"#utility.yul\":6925:6943   */\n      add\n        /* \"#utility.yul\":6916:6922   */\n      dup7\n        /* \"#utility.yul\":6872:6944   */\n      tag_132\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":6954:7026   */\n      tag_173\n        /* \"#utility.yul\":7022:7024   */\n      0x40\n        /* \"#utility.yul\":7011:7020   */\n      dup4\n        /* \"#utility.yul\":7007:7025   */\n      add\n        /* \"#utility.yul\":6998:7004   */\n      dup6\n        /* \"#utility.yul\":6954:7026   */\n      tag_163\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":7036:7108   */\n      tag_174\n        /* \"#utility.yul\":7104:7106   */\n      0x60\n        /* \"#utility.yul\":7093:7102   */\n      dup4\n        /* \"#utility.yul\":7089:7107   */\n      add\n        /* \"#utility.yul\":7080:7086   */\n      dup5\n        /* \"#utility.yul\":7036:7108   */\n      tag_163\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":7156:7165   */\n      dup2\n        /* \"#utility.yul\":7150:7154   */\n      dup2\n        /* \"#utility.yul\":7146:7166   */\n      sub\n        /* \"#utility.yul\":7140:7143   */\n      0x80\n        /* \"#utility.yul\":7129:7138   */\n      dup4\n        /* \"#utility.yul\":7125:7144   */\n      add\n        /* \"#utility.yul\":7118:7167   */\n      mstore\n        /* \"#utility.yul\":7184:7314   */\n      tag_175\n        /* \"#utility.yul\":7309:7313   */\n      dup2\n        /* \"#utility.yul\":7184:7314   */\n      tag_152\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":7176:7314   */\n      swap1\n      pop\n        /* \"#utility.yul\":6462:7321   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7327:7659   */\n    tag_45:\n        /* \"#utility.yul\":7448:7452   */\n      0x00\n        /* \"#utility.yul\":7486:7488   */\n      0x40\n        /* \"#utility.yul\":7475:7484   */\n      dup3\n        /* \"#utility.yul\":7471:7489   */\n      add\n        /* \"#utility.yul\":7463:7489   */\n      swap1\n      pop\n        /* \"#utility.yul\":7499:7570   */\n      tag_177\n        /* \"#utility.yul\":7567:7568   */\n      0x00\n        /* \"#utility.yul\":7556:7565   */\n      dup4\n        /* \"#utility.yul\":7552:7569   */\n      add\n        /* \"#utility.yul\":7543:7549   */\n      dup6\n        /* \"#utility.yul\":7499:7570   */\n      tag_132\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7580:7652   */\n      tag_178\n        /* \"#utility.yul\":7648:7650   */\n      0x20\n        /* \"#utility.yul\":7637:7646   */\n      dup4\n        /* \"#utility.yul\":7633:7651   */\n      add\n        /* \"#utility.yul\":7624:7630   */\n      dup5\n        /* \"#utility.yul\":7580:7652   */\n      tag_163\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":7327:7659   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7665:8084   */\n    tag_63:\n        /* \"#utility.yul\":7831:7835   */\n      0x00\n        /* \"#utility.yul\":7869:7871   */\n      0x20\n        /* \"#utility.yul\":7858:7867   */\n      dup3\n        /* \"#utility.yul\":7854:7872   */\n      add\n        /* \"#utility.yul\":7846:7872   */\n      swap1\n      pop\n        /* \"#utility.yul\":7918:7927   */\n      dup2\n        /* \"#utility.yul\":7912:7916   */\n      dup2\n        /* \"#utility.yul\":7908:7928   */\n      sub\n        /* \"#utility.yul\":7904:7905   */\n      0x00\n        /* \"#utility.yul\":7893:7902   */\n      dup4\n        /* \"#utility.yul\":7889:7906   */\n      add\n        /* \"#utility.yul\":7882:7929   */\n      mstore\n        /* \"#utility.yul\":7946:8077   */\n      tag_180\n        /* \"#utility.yul\":8072:8076   */\n      dup2\n        /* \"#utility.yul\":7946:8077   */\n      tag_136\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":7938:8077   */\n      swap1\n      pop\n        /* \"#utility.yul\":7665:8084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8090:8509   */\n    tag_69:\n        /* \"#utility.yul\":8256:8260   */\n      0x00\n        /* \"#utility.yul\":8294:8296   */\n      0x20\n        /* \"#utility.yul\":8283:8292   */\n      dup3\n        /* \"#utility.yul\":8279:8297   */\n      add\n        /* \"#utility.yul\":8271:8297   */\n      swap1\n      pop\n        /* \"#utility.yul\":8343:8352   */\n      dup2\n        /* \"#utility.yul\":8337:8341   */\n      dup2\n        /* \"#utility.yul\":8333:8353   */\n      sub\n        /* \"#utility.yul\":8329:8330   */\n      0x00\n        /* \"#utility.yul\":8318:8327   */\n      dup4\n        /* \"#utility.yul\":8314:8331   */\n      add\n        /* \"#utility.yul\":8307:8354   */\n      mstore\n        /* \"#utility.yul\":8371:8502   */\n      tag_182\n        /* \"#utility.yul\":8497:8501   */\n      dup2\n        /* \"#utility.yul\":8371:8502   */\n      tag_142\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":8363:8502   */\n      swap1\n      pop\n        /* \"#utility.yul\":8090:8509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8515:8934   */\n    tag_53:\n        /* \"#utility.yul\":8681:8685   */\n      0x00\n        /* \"#utility.yul\":8719:8721   */\n      0x20\n        /* \"#utility.yul\":8708:8717   */\n      dup3\n        /* \"#utility.yul\":8704:8722   */\n      add\n        /* \"#utility.yul\":8696:8722   */\n      swap1\n      pop\n        /* \"#utility.yul\":8768:8777   */\n      dup2\n        /* \"#utility.yul\":8762:8766   */\n      dup2\n        /* \"#utility.yul\":8758:8778   */\n      sub\n        /* \"#utility.yul\":8754:8755   */\n      0x00\n        /* \"#utility.yul\":8743:8752   */\n      dup4\n        /* \"#utility.yul\":8739:8756   */\n      add\n        /* \"#utility.yul\":8732:8779   */\n      mstore\n        /* \"#utility.yul\":8796:8927   */\n      tag_184\n        /* \"#utility.yul\":8922:8926   */\n      dup2\n        /* \"#utility.yul\":8796:8927   */\n      tag_147\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":8788:8927   */\n      swap1\n      pop\n        /* \"#utility.yul\":8515:8934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8940:9359   */\n    tag_38:\n        /* \"#utility.yul\":9106:9110   */\n      0x00\n        /* \"#utility.yul\":9144:9146   */\n      0x20\n        /* \"#utility.yul\":9133:9142   */\n      dup3\n        /* \"#utility.yul\":9129:9147   */\n      add\n        /* \"#utility.yul\":9121:9147   */\n      swap1\n      pop\n        /* \"#utility.yul\":9193:9202   */\n      dup2\n        /* \"#utility.yul\":9187:9191   */\n      dup2\n        /* \"#utility.yul\":9183:9203   */\n      sub\n        /* \"#utility.yul\":9179:9180   */\n      0x00\n        /* \"#utility.yul\":9168:9177   */\n      dup4\n        /* \"#utility.yul\":9164:9181   */\n      add\n        /* \"#utility.yul\":9157:9204   */\n      mstore\n        /* \"#utility.yul\":9221:9352   */\n      tag_186\n        /* \"#utility.yul\":9347:9351   */\n      dup2\n        /* \"#utility.yul\":9221:9352   */\n      tag_158\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":9213:9352   */\n      swap1\n      pop\n        /* \"#utility.yul\":8940:9359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9365:9587   */\n    tag_25:\n        /* \"#utility.yul\":9458:9462   */\n      0x00\n        /* \"#utility.yul\":9496:9498   */\n      0x20\n        /* \"#utility.yul\":9485:9494   */\n      dup3\n        /* \"#utility.yul\":9481:9499   */\n      add\n        /* \"#utility.yul\":9473:9499   */\n      swap1\n      pop\n        /* \"#utility.yul\":9509:9580   */\n      tag_188\n        /* \"#utility.yul\":9577:9578   */\n      0x00\n        /* \"#utility.yul\":9566:9575   */\n      dup4\n        /* \"#utility.yul\":9562:9579   */\n      add\n        /* \"#utility.yul\":9553:9559   */\n      dup5\n        /* \"#utility.yul\":9509:9580   */\n      tag_163\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":9365:9587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9593:9925   */\n    tag_13:\n        /* \"#utility.yul\":9714:9718   */\n      0x00\n        /* \"#utility.yul\":9752:9754   */\n      0x40\n        /* \"#utility.yul\":9741:9750   */\n      dup3\n        /* \"#utility.yul\":9737:9755   */\n      add\n        /* \"#utility.yul\":9729:9755   */\n      swap1\n      pop\n        /* \"#utility.yul\":9765:9836   */\n      tag_190\n        /* \"#utility.yul\":9833:9834   */\n      0x00\n        /* \"#utility.yul\":9822:9831   */\n      dup4\n        /* \"#utility.yul\":9818:9835   */\n      add\n        /* \"#utility.yul\":9809:9815   */\n      dup6\n        /* \"#utility.yul\":9765:9836   */\n      tag_163\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":9846:9918   */\n      tag_191\n        /* \"#utility.yul\":9914:9916   */\n      0x20\n        /* \"#utility.yul\":9903:9912   */\n      dup4\n        /* \"#utility.yul\":9899:9917   */\n      add\n        /* \"#utility.yul\":9890:9896   */\n      dup5\n        /* \"#utility.yul\":9846:9918   */\n      tag_132\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":9593:9925   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10012:10180   */\n    tag_155:\n        /* \"#utility.yul\":10095:10106   */\n      0x00\n        /* \"#utility.yul\":10129:10135   */\n      dup3\n        /* \"#utility.yul\":10124:10127   */\n      dup3\n        /* \"#utility.yul\":10117:10136   */\n      mstore\n        /* \"#utility.yul\":10169:10173   */\n      0x20\n        /* \"#utility.yul\":10164:10167   */\n      dup3\n        /* \"#utility.yul\":10160:10174   */\n      add\n        /* \"#utility.yul\":10145:10174   */\n      swap1\n      pop\n        /* \"#utility.yul\":10012:10180   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10186:10355   */\n    tag_139:\n        /* \"#utility.yul\":10270:10281   */\n      0x00\n        /* \"#utility.yul\":10304:10310   */\n      dup3\n        /* \"#utility.yul\":10299:10302   */\n      dup3\n        /* \"#utility.yul\":10292:10311   */\n      mstore\n        /* \"#utility.yul\":10344:10348   */\n      0x20\n        /* \"#utility.yul\":10339:10342   */\n      dup3\n        /* \"#utility.yul\":10335:10349   */\n      add\n        /* \"#utility.yul\":10320:10349   */\n      swap1\n      pop\n        /* \"#utility.yul\":10186:10355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10361:10666   */\n    tag_71:\n        /* \"#utility.yul\":10401:10404   */\n      0x00\n        /* \"#utility.yul\":10420:10440   */\n      tag_197\n        /* \"#utility.yul\":10438:10439   */\n      dup3\n        /* \"#utility.yul\":10420:10440   */\n      tag_166\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":10415:10440   */\n      swap2\n      pop\n        /* \"#utility.yul\":10454:10474   */\n      tag_198\n        /* \"#utility.yul\":10472:10473   */\n      dup4\n        /* \"#utility.yul\":10454:10474   */\n      tag_166\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":10449:10474   */\n      swap3\n      pop\n        /* \"#utility.yul\":10608:10609   */\n      dup3\n        /* \"#utility.yul\":10540:10606   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10536:10610   */\n      sub\n        /* \"#utility.yul\":10533:10534   */\n      dup3\n        /* \"#utility.yul\":10530:10611   */\n      gt\n        /* \"#utility.yul\":10527:10634   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":10614:10632   */\n      tag_200\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":10527:10634   */\n    tag_199:\n        /* \"#utility.yul\":10658:10659   */\n      dup3\n        /* \"#utility.yul\":10655:10656   */\n      dup3\n        /* \"#utility.yul\":10651:10660   */\n      add\n        /* \"#utility.yul\":10644:10660   */\n      swap1\n      pop\n        /* \"#utility.yul\":10361:10666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10672:11020   */\n    tag_66:\n        /* \"#utility.yul\":10712:10719   */\n      0x00\n        /* \"#utility.yul\":10735:10755   */\n      tag_203\n        /* \"#utility.yul\":10753:10754   */\n      dup3\n        /* \"#utility.yul\":10735:10755   */\n      tag_166\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":10730:10755   */\n      swap2\n      pop\n        /* \"#utility.yul\":10769:10789   */\n      tag_204\n        /* \"#utility.yul\":10787:10788   */\n      dup4\n        /* \"#utility.yul\":10769:10789   */\n      tag_166\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":10764:10789   */\n      swap3\n      pop\n        /* \"#utility.yul\":10957:10958   */\n      dup2\n        /* \"#utility.yul\":10889:10955   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10885:10959   */\n      div\n        /* \"#utility.yul\":10882:10883   */\n      dup4\n        /* \"#utility.yul\":10879:10960   */\n      gt\n        /* \"#utility.yul\":10874:10875   */\n      dup3\n        /* \"#utility.yul\":10867:10876   */\n      iszero\n        /* \"#utility.yul\":10860:10877   */\n      iszero\n        /* \"#utility.yul\":10856:10961   */\n      and\n        /* \"#utility.yul\":10853:10984   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":10964:10982   */\n      tag_206\n      tag_201\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":10853:10984   */\n    tag_205:\n        /* \"#utility.yul\":11012:11013   */\n      dup3\n        /* \"#utility.yul\":11009:11010   */\n      dup3\n        /* \"#utility.yul\":11005:11014   */\n      mul\n        /* \"#utility.yul\":10994:11014   */\n      swap1\n      pop\n        /* \"#utility.yul\":10672:11020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11217   */\n    tag_42:\n        /* \"#utility.yul\":11066:11070   */\n      0x00\n        /* \"#utility.yul\":11086:11106   */\n      tag_208\n        /* \"#utility.yul\":11104:11105   */\n      dup3\n        /* \"#utility.yul\":11086:11106   */\n      tag_166\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":11081:11106   */\n      swap2\n      pop\n        /* \"#utility.yul\":11120:11140   */\n      tag_209\n        /* \"#utility.yul\":11138:11139   */\n      dup4\n        /* \"#utility.yul\":11120:11140   */\n      tag_166\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":11115:11140   */\n      swap3\n      pop\n        /* \"#utility.yul\":11159:11160   */\n      dup3\n        /* \"#utility.yul\":11156:11157   */\n      dup3\n        /* \"#utility.yul\":11153:11161   */\n      lt\n        /* \"#utility.yul\":11150:11184   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":11164:11182   */\n      tag_211\n      tag_201\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":11150:11184   */\n    tag_210:\n        /* \"#utility.yul\":11209:11210   */\n      dup3\n        /* \"#utility.yul\":11206:11207   */\n      dup3\n        /* \"#utility.yul\":11202:11211   */\n      sub\n        /* \"#utility.yul\":11194:11211   */\n      swap1\n      pop\n        /* \"#utility.yul\":11026:11217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11223:11319   */\n    tag_135:\n        /* \"#utility.yul\":11260:11267   */\n      0x00\n        /* \"#utility.yul\":11289:11313   */\n      tag_213\n        /* \"#utility.yul\":11307:11312   */\n      dup3\n        /* \"#utility.yul\":11289:11313   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":11278:11313   */\n      swap1\n      pop\n        /* \"#utility.yul\":11223:11319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11325:11429   */\n    tag_215:\n        /* \"#utility.yul\":11370:11377   */\n      0x00\n        /* \"#utility.yul\":11399:11423   */\n      tag_217\n        /* \"#utility.yul\":11417:11422   */\n      dup3\n        /* \"#utility.yul\":11399:11423   */\n      tag_214\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":11388:11423   */\n      swap1\n      pop\n        /* \"#utility.yul\":11325:11429   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11435:11525   */\n    tag_218:\n        /* \"#utility.yul\":11469:11476   */\n      0x00\n        /* \"#utility.yul\":11512:11517   */\n      dup2\n        /* \"#utility.yul\":11505:11518   */\n      iszero\n        /* \"#utility.yul\":11498:11519   */\n      iszero\n        /* \"#utility.yul\":11487:11519   */\n      swap1\n      pop\n        /* \"#utility.yul\":11435:11525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11531:11657   */\n    tag_214:\n        /* \"#utility.yul\":11568:11575   */\n      0x00\n        /* \"#utility.yul\":11608:11650   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11601:11606   */\n      dup3\n        /* \"#utility.yul\":11597:11651   */\n      and\n        /* \"#utility.yul\":11586:11651   */\n      swap1\n      pop\n        /* \"#utility.yul\":11531:11657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11663:11740   */\n    tag_166:\n        /* \"#utility.yul\":11700:11707   */\n      0x00\n        /* \"#utility.yul\":11729:11734   */\n      dup2\n        /* \"#utility.yul\":11718:11734   */\n      swap1\n      pop\n        /* \"#utility.yul\":11663:11740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11746:11926   */\n    tag_201:\n        /* \"#utility.yul\":11794:11871   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11791:11792   */\n      0x00\n        /* \"#utility.yul\":11784:11872   */\n      mstore\n        /* \"#utility.yul\":11891:11895   */\n      0x11\n        /* \"#utility.yul\":11888:11889   */\n      0x04\n        /* \"#utility.yul\":11881:11896   */\n      mstore\n        /* \"#utility.yul\":11915:11919   */\n      0x24\n        /* \"#utility.yul\":11912:11913   */\n      0x00\n        /* \"#utility.yul\":11905:11920   */\n      revert\n        /* \"#utility.yul\":12055:12172   */\n    tag_100:\n        /* \"#utility.yul\":12164:12165   */\n      0x00\n        /* \"#utility.yul\":12161:12162   */\n      dup1\n        /* \"#utility.yul\":12154:12166   */\n      revert\n        /* \"#utility.yul\":12178:12354   */\n    tag_141:\n        /* \"#utility.yul\":12318:12346   */\n      0x436f6e7472616374206d75737420626520617070726f7665642e000000000000\n        /* \"#utility.yul\":12314:12315   */\n      0x00\n        /* \"#utility.yul\":12306:12312   */\n      dup3\n        /* \"#utility.yul\":12302:12316   */\n      add\n        /* \"#utility.yul\":12295:12347   */\n      mstore\n        /* \"#utility.yul\":12178:12354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12360:12582   */\n    tag_146:\n        /* \"#utility.yul\":12500:12534   */\n      0x496e73756666696369656e7420616d6f756e742073656e7420746f2073656c6c\n        /* \"#utility.yul\":12496:12497   */\n      0x00\n        /* \"#utility.yul\":12488:12494   */\n      dup3\n        /* \"#utility.yul\":12484:12498   */\n      add\n        /* \"#utility.yul\":12477:12535   */\n      mstore\n        /* \"#utility.yul\":12569:12574   */\n      0x65722e0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12564:12566   */\n      0x20\n        /* \"#utility.yul\":12556:12562   */\n      dup3\n        /* \"#utility.yul\":12552:12567   */\n      add\n        /* \"#utility.yul\":12545:12575   */\n      mstore\n        /* \"#utility.yul\":12360:12582   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12588:12812   */\n    tag_151:\n        /* \"#utility.yul\":12728:12762   */\n      0x4d757374206f776e20746f6b656e20746f2062652061626c6520746f206c6973\n        /* \"#utility.yul\":12724:12725   */\n      0x00\n        /* \"#utility.yul\":12716:12722   */\n      dup3\n        /* \"#utility.yul\":12712:12726   */\n      add\n        /* \"#utility.yul\":12705:12763   */\n      mstore\n        /* \"#utility.yul\":12797:12804   */\n      0x742069742e000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12792:12794   */\n      0x20\n        /* \"#utility.yul\":12784:12790   */\n      dup3\n        /* \"#utility.yul\":12780:12795   */\n      add\n        /* \"#utility.yul\":12773:12805   */\n      mstore\n        /* \"#utility.yul\":12588:12812   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12818:12976   */\n    tag_157:\n        /* \"#utility.yul\":12958:12968   */\n      0x5472616e73666572000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12954:12955   */\n      0x00\n        /* \"#utility.yul\":12946:12952   */\n      dup3\n        /* \"#utility.yul\":12942:12956   */\n      add\n        /* \"#utility.yul\":12935:12969   */\n      mstore\n        /* \"#utility.yul\":12818:12976   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12982:13151   */\n    tag_162:\n        /* \"#utility.yul\":13122:13143   */\n      0x496e73756666696369656e742066756e64732e00000000000000000000000000\n        /* \"#utility.yul\":13118:13119   */\n      0x00\n        /* \"#utility.yul\":13110:13116   */\n      dup3\n        /* \"#utility.yul\":13106:13120   */\n      add\n        /* \"#utility.yul\":13099:13144   */\n      mstore\n        /* \"#utility.yul\":12982:13151   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13157:13279   */\n    tag_81:\n        /* \"#utility.yul\":13230:13254   */\n      tag_232\n        /* \"#utility.yul\":13248:13253   */\n      dup2\n        /* \"#utility.yul\":13230:13254   */\n      tag_135\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":13223:13228   */\n      dup2\n        /* \"#utility.yul\":13220:13255   */\n      eq\n        /* \"#utility.yul\":13210:13273   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":13269:13270   */\n      0x00\n        /* \"#utility.yul\":13266:13267   */\n      dup1\n        /* \"#utility.yul\":13259:13271   */\n      revert\n        /* \"#utility.yul\":13210:13273   */\n    tag_233:\n        /* \"#utility.yul\":13157:13279   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13285:13423   */\n    tag_85:\n        /* \"#utility.yul\":13366:13398   */\n      tag_235\n        /* \"#utility.yul\":13392:13397   */\n      dup2\n        /* \"#utility.yul\":13366:13398   */\n      tag_215\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":13359:13364   */\n      dup2\n        /* \"#utility.yul\":13356:13399   */\n      eq\n        /* \"#utility.yul\":13346:13417   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":13413:13414   */\n      0x00\n        /* \"#utility.yul\":13410:13411   */\n      dup1\n        /* \"#utility.yul\":13403:13415   */\n      revert\n        /* \"#utility.yul\":13346:13417   */\n    tag_236:\n        /* \"#utility.yul\":13285:13423   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13429:13545   */\n    tag_89:\n        /* \"#utility.yul\":13499:13520   */\n      tag_238\n        /* \"#utility.yul\":13514:13519   */\n      dup2\n        /* \"#utility.yul\":13499:13520   */\n      tag_218\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":13492:13497   */\n      dup2\n        /* \"#utility.yul\":13489:13521   */\n      eq\n        /* \"#utility.yul\":13479:13539   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":13535:13536   */\n      0x00\n        /* \"#utility.yul\":13532:13533   */\n      dup1\n        /* \"#utility.yul\":13525:13537   */\n      revert\n        /* \"#utility.yul\":13479:13539   */\n    tag_239:\n        /* \"#utility.yul\":13429:13545   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13551:13673   */\n    tag_93:\n        /* \"#utility.yul\":13624:13648   */\n      tag_241\n        /* \"#utility.yul\":13642:13647   */\n      dup2\n        /* \"#utility.yul\":13624:13648   */\n      tag_166\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":13617:13622   */\n      dup2\n        /* \"#utility.yul\":13614:13649   */\n      eq\n        /* \"#utility.yul\":13604:13667   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":13663:13664   */\n      0x00\n        /* \"#utility.yul\":13660:13661   */\n      dup1\n        /* \"#utility.yul\":13653:13665   */\n      revert\n        /* \"#utility.yul\":13604:13667   */\n    tag_242:\n        /* \"#utility.yul\":13551:13673   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fb2d143d638bd06634a7760713fa2332f86357077e55a7a4193e5aef084676e264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610eac806100206000396000f3fe6080604052600436106100485760003560e01c806207df301461004d578062f714ce1461008b57806327e235e3146100b457806380abbe57146100f157806398968f151461011a575b600080fd5b34801561005957600080fd5b50610074600480360381019061006f91906107b2565b610136565b604051610082929190610b44565b60405180910390f35b34801561009757600080fd5b506100b260048036038101906100ad919061089f565b610187565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610785565b6102aa565b6040516100e89190610b29565b60405180910390f35b3480156100fd57600080fd5b50610118600480360381019061011391906108df565b6102c2565b005b610134600480360381019061012f91906107f2565b610531565b005b6000602052816000526040600020602052806000526040600020600091509150508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020090610b09565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561024f573d6000803e3d6000fd5b5081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029f9190610c3f565b925050819055505050565b60016020528060005260406000206000915090505481565b600082905060008173ffffffffffffffffffffffffffffffffffffffff1662fdd58e33856040518363ffffffff1660e01b8152600401610303929190610a80565b60206040518083038186803b15801561031b57600080fd5b505afa15801561032f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103539190610872565b11610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a90610ae9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b81526004016103ce9291906109ff565b60206040518083038186803b1580156103e657600080fd5b505afa1580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e9190610845565b61045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490610aa9565b60405180910390fd5b60405180604001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff168152506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050565b600083905060008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508281600001516106049190610be5565b341015610646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063d90610ac9565b60405180910390fd5b3460016000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106999190610b8f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff1663f242432a82602001513387876040518563ffffffff1660e01b81526004016106e39493929190610a28565b600060405180830381600087803b1580156106fd57600080fd5b505af1158015610711573d6000803e3d6000fd5b505050505050505050565b60008135905061072b81610e1a565b92915050565b60008135905061074081610e31565b92915050565b60008151905061075581610e48565b92915050565b60008135905061076a81610e5f565b92915050565b60008151905061077f81610e5f565b92915050565b60006020828403121561079b5761079a610cfc565b5b60006107a98482850161071c565b91505092915050565b600080604083850312156107c9576107c8610cfc565b5b60006107d78582860161071c565b92505060206107e88582860161075b565b9150509250929050565b60008060006060848603121561080b5761080a610cfc565b5b60006108198682870161071c565b935050602061082a8682870161075b565b925050604061083b8682870161075b565b9150509250925092565b60006020828403121561085b5761085a610cfc565b5b600061086984828501610746565b91505092915050565b60006020828403121561088857610887610cfc565b5b600061089684828501610770565b91505092915050565b600080604083850312156108b6576108b5610cfc565b5b60006108c48582860161075b565b92505060206108d585828601610731565b9150509250929050565b6000806000606084860312156108f8576108f7610cfc565b5b60006109068682870161075b565b93505060206109178682870161071c565b92505060406109288682870161075b565b9150509250925092565b61093b81610c73565b82525050565b600061094e601a83610b7e565b915061095982610d01565b602082019050919050565b6000610971602383610b7e565b915061097c82610d2a565b604082019050919050565b6000610994602583610b7e565b915061099f82610d79565b604082019050919050565b60006109b7600883610b6d565b91506109c282610dc8565b602082019050919050565b60006109da601383610b7e565b91506109e582610df1565b602082019050919050565b6109f981610cc3565b82525050565b6000604082019050610a146000830185610932565b610a216020830184610932565b9392505050565b600060a082019050610a3d6000830187610932565b610a4a6020830186610932565b610a5760408301856109f0565b610a6460608301846109f0565b8181036080830152610a75816109aa565b905095945050505050565b6000604082019050610a956000830185610932565b610aa260208301846109f0565b9392505050565b60006020820190508181036000830152610ac281610941565b9050919050565b60006020820190508181036000830152610ae281610964565b9050919050565b60006020820190508181036000830152610b0281610987565b9050919050565b60006020820190508181036000830152610b22816109cd565b9050919050565b6000602082019050610b3e60008301846109f0565b92915050565b6000604082019050610b5960008301856109f0565b610b666020830184610932565b9392505050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b9a82610cc3565b9150610ba583610cc3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bda57610bd9610ccd565b5b828201905092915050565b6000610bf082610cc3565b9150610bfb83610cc3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c3457610c33610ccd565b5b828202905092915050565b6000610c4a82610cc3565b9150610c5583610cc3565b925082821015610c6857610c67610ccd565b5b828203905092915050565b6000610c7e82610ca3565b9050919050565b6000610c9082610ca3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f436f6e7472616374206d75737420626520617070726f7665642e000000000000600082015250565b7f496e73756666696369656e7420616d6f756e742073656e7420746f2073656c6c60008201527f65722e0000000000000000000000000000000000000000000000000000000000602082015250565b7f4d757374206f776e20746f6b656e20746f2062652061626c6520746f206c697360008201527f742069742e000000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572000000000000000000000000000000000000000000000000600082015250565b7f496e73756666696369656e742066756e64732e00000000000000000000000000600082015250565b610e2381610c73565b8114610e2e57600080fd5b50565b610e3a81610c85565b8114610e4557600080fd5b50565b610e5181610c97565b8114610e5c57600080fd5b50565b610e6881610cc3565b8114610e7357600080fd5b5056fea2646970667358221220fb2d143d638bd06634a7760713fa2332f86357077e55a7a4193e5aef084676e264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEAC DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x48 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x7DF30 EQ PUSH2 0x4D JUMPI DUP1 PUSH3 0xF714CE EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x80ABBE57 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x98968F15 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP3 SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x2C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x200 SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0xC3F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP3 SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST GT PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP3 SWAP2 SWAP1 PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x845 JUMP JUMPDEST PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x454 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xBE5 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63D SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A DUP3 PUSH1 0x20 ADD MLOAD CALLER DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x711 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x72B DUP2 PUSH2 0xE1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x740 DUP2 PUSH2 0xE31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x755 DUP2 PUSH2 0xE48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x76A DUP2 PUSH2 0xE5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x77F DUP2 PUSH2 0xE5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x79B JUMPI PUSH2 0x79A PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7A9 DUP5 DUP3 DUP6 ADD PUSH2 0x71C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C8 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7D7 DUP6 DUP3 DUP7 ADD PUSH2 0x71C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7E8 DUP6 DUP3 DUP7 ADD PUSH2 0x75B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x80B JUMPI PUSH2 0x80A PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP7 DUP3 DUP8 ADD PUSH2 0x71C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x82A DUP7 DUP3 DUP8 ADD PUSH2 0x75B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x83B DUP7 DUP3 DUP8 ADD PUSH2 0x75B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI PUSH2 0x85A PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x869 DUP5 DUP3 DUP6 ADD PUSH2 0x746 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x888 JUMPI PUSH2 0x887 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x896 DUP5 DUP3 DUP6 ADD PUSH2 0x770 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8B6 JUMPI PUSH2 0x8B5 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8C4 DUP6 DUP3 DUP7 ADD PUSH2 0x75B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8D5 DUP6 DUP3 DUP7 ADD PUSH2 0x731 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8F8 JUMPI PUSH2 0x8F7 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x906 DUP7 DUP3 DUP8 ADD PUSH2 0x75B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x917 DUP7 DUP3 DUP8 ADD PUSH2 0x71C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x928 DUP7 DUP3 DUP8 ADD PUSH2 0x75B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xC73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94E PUSH1 0x1A DUP4 PUSH2 0xB7E JUMP JUMPDEST SWAP2 POP PUSH2 0x959 DUP3 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x971 PUSH1 0x23 DUP4 PUSH2 0xB7E JUMP JUMPDEST SWAP2 POP PUSH2 0x97C DUP3 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x994 PUSH1 0x25 DUP4 PUSH2 0xB7E JUMP JUMPDEST SWAP2 POP PUSH2 0x99F DUP3 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B7 PUSH1 0x8 DUP4 PUSH2 0xB6D JUMP JUMPDEST SWAP2 POP PUSH2 0x9C2 DUP3 PUSH2 0xDC8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DA PUSH1 0x13 DUP4 PUSH2 0xB7E JUMP JUMPDEST SWAP2 POP PUSH2 0x9E5 DUP3 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F9 DUP2 PUSH2 0xCC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA14 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x932 JUMP JUMPDEST PUSH2 0xA21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x932 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xA3D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x932 JUMP JUMPDEST PUSH2 0xA4A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x932 JUMP JUMPDEST PUSH2 0xA57 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0xA64 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x9F0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xA75 DUP2 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA95 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x932 JUMP JUMPDEST PUSH2 0xAA2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9F0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC2 DUP2 PUSH2 0x941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE2 DUP2 PUSH2 0x964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB02 DUP2 PUSH2 0x987 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB22 DUP2 PUSH2 0x9CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB59 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0xB66 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x932 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9A DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA5 DUP4 PUSH2 0xCC3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xBDA JUMPI PUSH2 0xBD9 PUSH2 0xCCD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF0 DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFB DUP4 PUSH2 0xCC3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC34 JUMPI PUSH2 0xC33 PUSH2 0xCCD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4A DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xC55 DUP4 PUSH2 0xCC3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xC68 JUMPI PUSH2 0xC67 PUSH2 0xCCD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7E DUP3 PUSH2 0xCA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC90 DUP3 PUSH2 0xCA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x436F6E7472616374206D75737420626520617070726F7665642E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616D6F756E742073656E7420746F2073656C6C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65722E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4D757374206F776E20746F6B656E20746F2062652061626C6520746F206C6973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x742069742E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE23 DUP2 PUSH2 0xC73 JUMP JUMPDEST DUP2 EQ PUSH2 0xE2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE3A DUP2 PUSH2 0xC85 JUMP JUMPDEST DUP2 EQ PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE51 DUP2 PUSH2 0xC97 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE68 DUP2 PUSH2 0xCC3 JUMP JUMPDEST DUP2 EQ PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0x2D EQ RETURNDATASIZE PUSH4 0x8BD06634 0xA7 PUSH23 0x713FA2332F86357077E55A7A4193E5AEF084676E26473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "147:1978:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addListing_1861": {
									"entryPoint": 706,
									"id": 1861,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balances_1802": {
									"entryPoint": 682,
									"id": 1802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@listings_1798": {
									"entryPoint": 310,
									"id": 1798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@purchase_1918": {
									"entryPoint": 1329,
									"id": 1918,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdraw_1949": {
									"entryPoint": 391,
									"id": 1949,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 1841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payable": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 2271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2600,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 2884,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3324,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee": {
									"entryPoint": 3329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e": {
									"entryPoint": 3370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9": {
									"entryPoint": 3528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb": {
									"entryPoint": 3569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 3633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13676:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "7:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:95:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "231:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "260:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:41:9"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:9",
														"type": ""
													}
												],
												"src": "152:155:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "373:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "383:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "398:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "392:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "383:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "438:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "414:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "414:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "351:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "359:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "367:5:9",
														"type": ""
													}
												],
												"src": "313:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "508:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "518:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "540:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "527:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "527:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "518:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "583:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "556:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "486:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "494:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "502:5:9",
														"type": ""
													}
												],
												"src": "456:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "664:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "674:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "689:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "683:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "674:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "732:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "705:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "705:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "705:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "642:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "650:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "658:5:9",
														"type": ""
													}
												],
												"src": "601:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "816:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "862:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "864:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "864:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "864:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "837:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "846:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "833:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "833:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "858:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "829:32:9"
															},
															"nodeType": "YulIf",
															"src": "826:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "955:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "970:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "984:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "974:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "999:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1034:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1045:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1030:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1030:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1054:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1009:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1009:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "999:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "786:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "797:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "809:6:9",
														"type": ""
													}
												],
												"src": "750:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1168:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1214:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1216:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1216:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1216:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1189:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1198:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1185:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1185:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1210:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1181:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:32:9"
															},
															"nodeType": "YulIf",
															"src": "1178:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1307:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1322:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1336:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1326:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1351:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1386:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1397:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1382:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1382:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1406:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1361:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1361:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1351:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1434:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1449:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1453:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1479:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1514:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1525:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1510:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1510:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1534:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1489:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1489:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1479:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1130:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1141:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1153:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1161:6:9",
														"type": ""
													}
												],
												"src": "1085:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1665:519:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1713:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1686:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1695:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1682:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1682:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:32:9"
															},
															"nodeType": "YulIf",
															"src": "1675:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1804:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1819:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1833:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1823:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1848:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1883:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1894:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1879:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1879:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1903:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1858:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1858:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1848:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1931:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1946:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1960:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1950:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1976:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2011:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2022:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2007:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2007:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2031:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1986:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1986:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1976:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2059:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2074:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2088:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2078:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2104:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2139:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2150:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2135:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2135:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2159:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2114:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2114:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2104:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1619:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1630:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1642:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1650:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1658:6:9",
														"type": ""
													}
												],
												"src": "1565:619:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2264:271:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2310:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2312:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2312:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2312:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2285:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2294:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2281:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2281:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2306:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2277:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:32:9"
															},
															"nodeType": "YulIf",
															"src": "2274:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2403:125:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2418:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2432:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2422:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2447:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2490:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2501:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2486:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2486:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2510:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2457:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2447:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2234:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2245:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2257:6:9",
														"type": ""
													}
												],
												"src": "2190:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2618:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2664:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2666:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2666:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2666:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2639:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2648:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2635:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2635:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2660:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2631:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:32:9"
															},
															"nodeType": "YulIf",
															"src": "2628:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2757:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2772:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2786:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2776:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2801:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2847:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2858:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2843:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2843:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2867:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2811:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2811:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2801:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2588:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2599:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2611:6:9",
														"type": ""
													}
												],
												"src": "2541:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2989:399:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3035:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3037:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3037:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3037:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3010:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3019:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3006:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3002:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:32:9"
															},
															"nodeType": "YulIf",
															"src": "2999:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3128:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3143:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3157:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3147:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3172:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3207:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3218:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3203:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3203:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3227:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3182:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3172:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3255:126:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3270:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3284:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3274:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3300:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3343:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3354:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3339:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3339:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3363:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "3310:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3310:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3300:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2951:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2962:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2974:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2982:6:9",
														"type": ""
													}
												],
												"src": "2898:490:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3494:519:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3540:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3542:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3542:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3515:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3524:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3511:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3511:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3536:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:32:9"
															},
															"nodeType": "YulIf",
															"src": "3504:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3633:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3648:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3662:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3652:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3677:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3712:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3723:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3708:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3708:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3732:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3687:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3677:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3760:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3775:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3789:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3779:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3805:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3840:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3851:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3836:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3836:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3860:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3815:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3815:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3805:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3888:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3903:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3917:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3907:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3933:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3968:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3979:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3964:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3964:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3988:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3943:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3943:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3933:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3448:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3459:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3471:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3479:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3487:6:9",
														"type": ""
													}
												],
												"src": "3394:619:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4084:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4101:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4124:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4106:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4094:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4094:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4094:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4072:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4079:3:9",
														"type": ""
													}
												],
												"src": "4019:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4289:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4299:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4365:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4306:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4306:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4299:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4471:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee",
																	"nodeType": "YulIdentifier",
																	"src": "4382:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4382:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4382:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4495:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4500:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4491:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4491:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4484:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4277:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4285:3:9",
														"type": ""
													}
												],
												"src": "4143:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4661:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4671:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4737:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4678:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4678:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4843:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e",
																	"nodeType": "YulIdentifier",
																	"src": "4754:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4856:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4867:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4872:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4863:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4856:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4649:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4657:3:9",
														"type": ""
													}
												],
												"src": "4515:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5033:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5043:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5109:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5114:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5050:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5050:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5043:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5215:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1",
																	"nodeType": "YulIdentifier",
																	"src": "5126:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5126:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5126:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5228:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5239:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5244:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5235:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5235:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5228:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5021:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5029:3:9",
														"type": ""
													}
												],
												"src": "4887:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5404:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5414:72:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5479:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5484:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5421:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5421:65:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5414:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5584:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",
																	"nodeType": "YulIdentifier",
																	"src": "5495:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5495:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5495:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5597:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5608:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5613:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5604:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5604:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5392:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5400:3:9",
														"type": ""
													}
												],
												"src": "5259:363:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5774:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5784:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5850:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5855:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5791:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5784:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5956:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
																	"nodeType": "YulIdentifier",
																	"src": "5867:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5867:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5867:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5969:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5980:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5985:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5976:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5976:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5969:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5762:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5770:3:9",
														"type": ""
													}
												],
												"src": "5628:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6065:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6082:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6105:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6087:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6087:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6075:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6075:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6075:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6053:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6060:3:9",
														"type": ""
													}
												],
												"src": "6000:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6250:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6260:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6272:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6283:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6268:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6268:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6260:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6340:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6353:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6364:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6349:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6349:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6296:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6296:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6296:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6421:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6434:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6445:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6430:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6430:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6377:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6377:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6377:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6214:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6226:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6234:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6245:4:9",
														"type": ""
													}
												],
												"src": "6124:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6744:577:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6754:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6766:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6777:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6762:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6762:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6754:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6835:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6848:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6859:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6844:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6844:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6791:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6791:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6791:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6916:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6929:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6940:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6925:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6925:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6872:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6872:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6998:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7011:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7022:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7007:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7007:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6954:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6954:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6954:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7080:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7093:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7104:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7089:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7089:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7036:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7129:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7140:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7125:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7125:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7150:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7156:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7146:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7146:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7118:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7118:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7118:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7176:138:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7309:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7184:123:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7184:130:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7176:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6692:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6704:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6712:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6720:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6728:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6739:4:9",
														"type": ""
													}
												],
												"src": "6462:859:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7453:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7463:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7475:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7471:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7471:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7463:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7543:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7556:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7567:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7552:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7552:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7499:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7499:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7499:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7624:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7637:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7648:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7633:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7633:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7580:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7580:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7580:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7417:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7429:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7437:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7448:4:9",
														"type": ""
													}
												],
												"src": "7327:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7836:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7846:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7858:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7869:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7854:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7854:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7846:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7893:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7904:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7889:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7889:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7912:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7918:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7908:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7908:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7882:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7882:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7938:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8072:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7946:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7946:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7938:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7816:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7831:4:9",
														"type": ""
													}
												],
												"src": "7665:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8261:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8271:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8283:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8294:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8279:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8279:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8271:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8318:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8329:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8314:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8314:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8337:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8343:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8333:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8333:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8307:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8307:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8307:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8363:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8497:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8371:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8371:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8363:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8241:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8256:4:9",
														"type": ""
													}
												],
												"src": "8090:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8686:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8696:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8708:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8719:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8704:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8704:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8696:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8743:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8754:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8739:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8739:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8762:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8768:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8758:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8758:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8732:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8732:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8732:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8788:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8922:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8796:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8788:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8666:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8681:4:9",
														"type": ""
													}
												],
												"src": "8515:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9111:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9121:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9133:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9144:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9129:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9129:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9121:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9168:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9179:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9164:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9164:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9187:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9193:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9183:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9183:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9157:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9157:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9157:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9213:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9347:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9221:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9221:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9213:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9091:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9106:4:9",
														"type": ""
													}
												],
												"src": "8940:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9463:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9473:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9485:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9496:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9481:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9481:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9473:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9553:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9566:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9577:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9562:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9562:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9509:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9509:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9509:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9435:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9447:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9458:4:9",
														"type": ""
													}
												],
												"src": "9365:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9719:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9729:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9741:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9752:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9737:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9737:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9729:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9809:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9822:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9833:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9818:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9818:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9765:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9765:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9765:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9890:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9903:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9914:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9899:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9899:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9846:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9846:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9846:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9683:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9695:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9703:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9714:4:9",
														"type": ""
													}
												],
												"src": "9593:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9971:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9981:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9997:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9991:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9991:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9981:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9964:6:9",
														"type": ""
													}
												],
												"src": "9931:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10107:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10124:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10129:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10117:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10117:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10117:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10145:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10164:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10169:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10160:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10160:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10145:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10079:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10084:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10095:11:9",
														"type": ""
													}
												],
												"src": "10012:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10282:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10299:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10304:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10292:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10292:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10292:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10320:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10339:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10344:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10335:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10335:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10320:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10254:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10259:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10270:11:9",
														"type": ""
													}
												],
												"src": "10186:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10405:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10415:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10438:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10420:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10420:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10415:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10449:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10472:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10454:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10454:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10449:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10612:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10614:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10614:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10614:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10533:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10540:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10608:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10536:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10536:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10530:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10530:81:9"
															},
															"nodeType": "YulIf",
															"src": "10527:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10644:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10655:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10658:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10651:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10651:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10644:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10392:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10395:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10401:3:9",
														"type": ""
													}
												],
												"src": "10361:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10720:300:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10730:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10753:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10735:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10735:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10730:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10764:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10787:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10769:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10769:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10764:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10962:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10964:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10964:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10964:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10874:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10867:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10867:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10860:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10860:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10882:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10889:66:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10957:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10885:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10885:74:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10879:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10879:81:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10856:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10856:105:9"
															},
															"nodeType": "YulIf",
															"src": "10853:131:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10994:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11009:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11012:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11005:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11005:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10994:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10703:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10706:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10712:7:9",
														"type": ""
													}
												],
												"src": "10672:348:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11071:146:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11081:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11104:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11086:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11086:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11081:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11115:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11138:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11120:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11120:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11115:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11162:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11164:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11164:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11164:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11156:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11159:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11153:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11153:8:9"
															},
															"nodeType": "YulIf",
															"src": "11150:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11194:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11206:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11209:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11202:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11202:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11194:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11057:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11060:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11066:4:9",
														"type": ""
													}
												],
												"src": "11026:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11268:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11278:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11307:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11289:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11289:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11278:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11250:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11260:7:9",
														"type": ""
													}
												],
												"src": "11223:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11378:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11388:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11417:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11399:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11399:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11388:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11360:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11370:7:9",
														"type": ""
													}
												],
												"src": "11325:104:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11477:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11487:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11512:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11505:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11505:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11498:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11498:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11487:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11459:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11469:7:9",
														"type": ""
													}
												],
												"src": "11435:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11576:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11586:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11601:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11608:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11597:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11597:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11586:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11558:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11568:7:9",
														"type": ""
													}
												],
												"src": "11531:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11708:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11718:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11729:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11718:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11690:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11700:7:9",
														"type": ""
													}
												],
												"src": "11663:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11774:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11791:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11794:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11784:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11784:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11784:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11888:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11891:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11881:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11881:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11881:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11912:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11915:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11905:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11905:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11905:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11746:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12021:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12038:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12041:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12031:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12031:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12031:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11932:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12144:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12161:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12164:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12154:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12154:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12154:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "12055:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12284:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12306:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12314:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12302:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12302:14:9"
																	},
																	{
																		"hexValue": "436f6e7472616374206d75737420626520617070726f7665642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12318:28:9",
																		"type": "",
																		"value": "Contract must be approved."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12295:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12295:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12295:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12276:6:9",
														"type": ""
													}
												],
												"src": "12178:176:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12466:116:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12488:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12496:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12484:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12484:14:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420616d6f756e742073656e7420746f2073656c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12500:34:9",
																		"type": "",
																		"value": "Insufficient amount sent to sell"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12477:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12477:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12477:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12556:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12564:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12552:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12552:15:9"
																	},
																	{
																		"hexValue": "65722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12569:5:9",
																		"type": "",
																		"value": "er."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12545:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12545:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12545:30:9"
														}
													]
												},
												"name": "store_literal_in_memory_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12458:6:9",
														"type": ""
													}
												],
												"src": "12360:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12694:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12716:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12724:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12712:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12712:14:9"
																	},
																	{
																		"hexValue": "4d757374206f776e20746f6b656e20746f2062652061626c6520746f206c6973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12728:34:9",
																		"type": "",
																		"value": "Must own token to be able to lis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12705:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12705:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12705:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12784:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12792:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12780:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12780:15:9"
																	},
																	{
																		"hexValue": "742069742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12797:7:9",
																		"type": "",
																		"value": "t it."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12773:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12773:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12773:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12686:6:9",
														"type": ""
													}
												],
												"src": "12588:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12924:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12946:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12954:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12942:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12942:14:9"
																	},
																	{
																		"hexValue": "5472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12958:10:9",
																		"type": "",
																		"value": "Transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12935:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12935:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12935:34:9"
														}
													]
												},
												"name": "store_literal_in_memory_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12916:6:9",
														"type": ""
													}
												],
												"src": "12818:158:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13088:63:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13110:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13118:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13106:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13106:14:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e64732e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13122:21:9",
																		"type": "",
																		"value": "Insufficient funds."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13099:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13099:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13099:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13080:6:9",
														"type": ""
													}
												],
												"src": "12982:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13200:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13257:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13266:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13269:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13259:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13259:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13259:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13223:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13248:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13230:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13230:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13220:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13220:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13213:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13213:43:9"
															},
															"nodeType": "YulIf",
															"src": "13210:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13193:5:9",
														"type": ""
													}
												],
												"src": "13157:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13336:87:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13401:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13410:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13413:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13403:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13403:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13403:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13359:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13392:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "13366:25:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13366:32:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13356:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13356:43:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13349:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13349:51:9"
															},
															"nodeType": "YulIf",
															"src": "13346:71:9"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13329:5:9",
														"type": ""
													}
												],
												"src": "13285:138:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13469:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13523:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13532:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13535:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13525:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13525:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13525:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13492:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13514:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13499:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13499:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13489:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13489:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13482:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13482:40:9"
															},
															"nodeType": "YulIf",
															"src": "13479:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13462:5:9",
														"type": ""
													}
												],
												"src": "13429:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13594:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13651:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13660:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13663:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13653:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13653:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13653:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13617:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13642:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13624:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13624:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13614:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13614:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13607:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13607:43:9"
															},
															"nodeType": "YulIf",
															"src": "13604:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13587:5:9",
														"type": ""
													}
												],
												"src": "13551:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract must be approved.\")\n\n    }\n\n    function store_literal_in_memory_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient amount sent to sell\")\n\n        mstore(add(memPtr, 32), \"er.\")\n\n    }\n\n    function store_literal_in_memory_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must own token to be able to lis\")\n\n        mstore(add(memPtr, 32), \"t it.\")\n\n    }\n\n    function store_literal_in_memory_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer\")\n\n    }\n\n    function store_literal_in_memory_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds.\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100485760003560e01c806207df301461004d578062f714ce1461008b57806327e235e3146100b457806380abbe57146100f157806398968f151461011a575b600080fd5b34801561005957600080fd5b50610074600480360381019061006f91906107b2565b610136565b604051610082929190610b44565b60405180910390f35b34801561009757600080fd5b506100b260048036038101906100ad919061089f565b610187565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610785565b6102aa565b6040516100e89190610b29565b60405180910390f35b3480156100fd57600080fd5b50610118600480360381019061011391906108df565b6102c2565b005b610134600480360381019061012f91906107f2565b610531565b005b6000602052816000526040600020602052806000526040600020600091509150508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020090610b09565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561024f573d6000803e3d6000fd5b5081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029f9190610c3f565b925050819055505050565b60016020528060005260406000206000915090505481565b600082905060008173ffffffffffffffffffffffffffffffffffffffff1662fdd58e33856040518363ffffffff1660e01b8152600401610303929190610a80565b60206040518083038186803b15801561031b57600080fd5b505afa15801561032f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103539190610872565b11610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a90610ae9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b81526004016103ce9291906109ff565b60206040518083038186803b1580156103e657600080fd5b505afa1580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e9190610845565b61045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490610aa9565b60405180910390fd5b60405180604001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff168152506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050565b600083905060008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508281600001516106049190610be5565b341015610646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063d90610ac9565b60405180910390fd5b3460016000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106999190610b8f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff1663f242432a82602001513387876040518563ffffffff1660e01b81526004016106e39493929190610a28565b600060405180830381600087803b1580156106fd57600080fd5b505af1158015610711573d6000803e3d6000fd5b505050505050505050565b60008135905061072b81610e1a565b92915050565b60008135905061074081610e31565b92915050565b60008151905061075581610e48565b92915050565b60008135905061076a81610e5f565b92915050565b60008151905061077f81610e5f565b92915050565b60006020828403121561079b5761079a610cfc565b5b60006107a98482850161071c565b91505092915050565b600080604083850312156107c9576107c8610cfc565b5b60006107d78582860161071c565b92505060206107e88582860161075b565b9150509250929050565b60008060006060848603121561080b5761080a610cfc565b5b60006108198682870161071c565b935050602061082a8682870161075b565b925050604061083b8682870161075b565b9150509250925092565b60006020828403121561085b5761085a610cfc565b5b600061086984828501610746565b91505092915050565b60006020828403121561088857610887610cfc565b5b600061089684828501610770565b91505092915050565b600080604083850312156108b6576108b5610cfc565b5b60006108c48582860161075b565b92505060206108d585828601610731565b9150509250929050565b6000806000606084860312156108f8576108f7610cfc565b5b60006109068682870161075b565b93505060206109178682870161071c565b92505060406109288682870161075b565b9150509250925092565b61093b81610c73565b82525050565b600061094e601a83610b7e565b915061095982610d01565b602082019050919050565b6000610971602383610b7e565b915061097c82610d2a565b604082019050919050565b6000610994602583610b7e565b915061099f82610d79565b604082019050919050565b60006109b7600883610b6d565b91506109c282610dc8565b602082019050919050565b60006109da601383610b7e565b91506109e582610df1565b602082019050919050565b6109f981610cc3565b82525050565b6000604082019050610a146000830185610932565b610a216020830184610932565b9392505050565b600060a082019050610a3d6000830187610932565b610a4a6020830186610932565b610a5760408301856109f0565b610a6460608301846109f0565b8181036080830152610a75816109aa565b905095945050505050565b6000604082019050610a956000830185610932565b610aa260208301846109f0565b9392505050565b60006020820190508181036000830152610ac281610941565b9050919050565b60006020820190508181036000830152610ae281610964565b9050919050565b60006020820190508181036000830152610b0281610987565b9050919050565b60006020820190508181036000830152610b22816109cd565b9050919050565b6000602082019050610b3e60008301846109f0565b92915050565b6000604082019050610b5960008301856109f0565b610b666020830184610932565b9392505050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b9a82610cc3565b9150610ba583610cc3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bda57610bd9610ccd565b5b828201905092915050565b6000610bf082610cc3565b9150610bfb83610cc3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c3457610c33610ccd565b5b828202905092915050565b6000610c4a82610cc3565b9150610c5583610cc3565b925082821015610c6857610c67610ccd565b5b828203905092915050565b6000610c7e82610ca3565b9050919050565b6000610c9082610ca3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f436f6e7472616374206d75737420626520617070726f7665642e000000000000600082015250565b7f496e73756666696369656e7420616d6f756e742073656e7420746f2073656c6c60008201527f65722e0000000000000000000000000000000000000000000000000000000000602082015250565b7f4d757374206f776e20746f6b656e20746f2062652061626c6520746f206c697360008201527f742069742e000000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572000000000000000000000000000000000000000000000000600082015250565b7f496e73756666696369656e742066756e64732e00000000000000000000000000600082015250565b610e2381610c73565b8114610e2e57600080fd5b50565b610e3a81610c85565b8114610e4557600080fd5b50565b610e5181610c97565b8114610e5c57600080fd5b50565b610e6881610cc3565b8114610e7357600080fd5b5056fea2646970667358221220fb2d143d638bd06634a7760713fa2332f86357077e55a7a4193e5aef084676e264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x48 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x7DF30 EQ PUSH2 0x4D JUMPI DUP1 PUSH3 0xF714CE EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x80ABBE57 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x98968F15 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP3 SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x2C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x200 SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0xC3F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP3 SWAP2 SWAP1 PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST GT PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP3 SWAP2 SWAP1 PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x845 JUMP JUMPDEST PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x454 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xBE5 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63D SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A DUP3 PUSH1 0x20 ADD MLOAD CALLER DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x711 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x72B DUP2 PUSH2 0xE1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x740 DUP2 PUSH2 0xE31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x755 DUP2 PUSH2 0xE48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x76A DUP2 PUSH2 0xE5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x77F DUP2 PUSH2 0xE5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x79B JUMPI PUSH2 0x79A PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7A9 DUP5 DUP3 DUP6 ADD PUSH2 0x71C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C8 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7D7 DUP6 DUP3 DUP7 ADD PUSH2 0x71C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7E8 DUP6 DUP3 DUP7 ADD PUSH2 0x75B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x80B JUMPI PUSH2 0x80A PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP7 DUP3 DUP8 ADD PUSH2 0x71C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x82A DUP7 DUP3 DUP8 ADD PUSH2 0x75B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x83B DUP7 DUP3 DUP8 ADD PUSH2 0x75B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI PUSH2 0x85A PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x869 DUP5 DUP3 DUP6 ADD PUSH2 0x746 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x888 JUMPI PUSH2 0x887 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x896 DUP5 DUP3 DUP6 ADD PUSH2 0x770 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8B6 JUMPI PUSH2 0x8B5 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8C4 DUP6 DUP3 DUP7 ADD PUSH2 0x75B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8D5 DUP6 DUP3 DUP7 ADD PUSH2 0x731 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8F8 JUMPI PUSH2 0x8F7 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x906 DUP7 DUP3 DUP8 ADD PUSH2 0x75B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x917 DUP7 DUP3 DUP8 ADD PUSH2 0x71C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x928 DUP7 DUP3 DUP8 ADD PUSH2 0x75B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0xC73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94E PUSH1 0x1A DUP4 PUSH2 0xB7E JUMP JUMPDEST SWAP2 POP PUSH2 0x959 DUP3 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x971 PUSH1 0x23 DUP4 PUSH2 0xB7E JUMP JUMPDEST SWAP2 POP PUSH2 0x97C DUP3 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x994 PUSH1 0x25 DUP4 PUSH2 0xB7E JUMP JUMPDEST SWAP2 POP PUSH2 0x99F DUP3 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B7 PUSH1 0x8 DUP4 PUSH2 0xB6D JUMP JUMPDEST SWAP2 POP PUSH2 0x9C2 DUP3 PUSH2 0xDC8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DA PUSH1 0x13 DUP4 PUSH2 0xB7E JUMP JUMPDEST SWAP2 POP PUSH2 0x9E5 DUP3 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F9 DUP2 PUSH2 0xCC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA14 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x932 JUMP JUMPDEST PUSH2 0xA21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x932 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xA3D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x932 JUMP JUMPDEST PUSH2 0xA4A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x932 JUMP JUMPDEST PUSH2 0xA57 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0xA64 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x9F0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xA75 DUP2 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA95 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x932 JUMP JUMPDEST PUSH2 0xAA2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9F0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC2 DUP2 PUSH2 0x941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE2 DUP2 PUSH2 0x964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB02 DUP2 PUSH2 0x987 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB22 DUP2 PUSH2 0x9CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB59 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0xB66 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x932 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9A DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA5 DUP4 PUSH2 0xCC3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xBDA JUMPI PUSH2 0xBD9 PUSH2 0xCCD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF0 DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFB DUP4 PUSH2 0xCC3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC34 JUMPI PUSH2 0xC33 PUSH2 0xCCD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4A DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP2 POP PUSH2 0xC55 DUP4 PUSH2 0xCC3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xC68 JUMPI PUSH2 0xC67 PUSH2 0xCCD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7E DUP3 PUSH2 0xCA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC90 DUP3 PUSH2 0xCA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x436F6E7472616374206D75737420626520617070726F7665642E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616D6F756E742073656E7420746F2073656C6C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65722E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4D757374206F776E20746F6B656E20746F2062652061626C6520746F206C6973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x742069742E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE23 DUP2 PUSH2 0xC73 JUMP JUMPDEST DUP2 EQ PUSH2 0xE2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE3A DUP2 PUSH2 0xC85 JUMP JUMPDEST DUP2 EQ PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE51 DUP2 PUSH2 0xC97 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE68 DUP2 PUSH2 0xCC3 JUMP JUMPDEST DUP2 EQ PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0x2D EQ RETURNDATASIZE PUSH4 0x8BD06634 0xA7 PUSH23 0x713FA2332F86357077E55A7A4193E5AEF084676E26473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "147:1978:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;250:63;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1903:220;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;319:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;635:422;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1268:444;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;250:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1903:220::-;1996:8;:20;2005:10;1996:20;;;;;;;;;;;;;;;;1986:6;:30;;1978:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2051:8;:17;;:25;2069:6;2051:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:6;2086:8;:20;2095:10;2086:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1903:220;;:::o;319:43::-;;;;;;;;;;;;;;;;;:::o;635:422::-;731:13;755:19;731:44;;831:1;793:5;:15;;;809:10;821:6;793:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;785:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;892:5;:22;;;915:10;935:4;892:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;884:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;1023:26;;;;;;;;1031:5;1023:26;;;;1038:10;1023:26;;;;;983:8;:29;992:19;983:29;;;;;;;;;;;;;;;:37;1013:6;983:37;;;;;;;;;;;:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;721:336;635:422;;;:::o;1268:444::-;1372:13;1396:19;1372:44;;1426:19;1448:8;:29;1457:19;1448:29;;;;;;;;;;;;;;;:37;1478:6;1448:37;;;;;;;;;;;1426:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1530:6;1517:4;:10;;;:19;;;;:::i;:::-;1504:9;:32;;1496:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1611:9;1586:8;:21;1595:4;:11;;;1586:21;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;1630:5;:22;;;1653:4;:11;;;1666:10;1678:6;1686;1630:75;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:350;;1268:444;;;:::o;7:139:9:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:155::-;206:5;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;152:155;;;;:::o;313:137::-;367:5;398:6;392:13;383:22;;414:30;438:5;414:30;:::i;:::-;313:137;;;;:::o;456:139::-;502:5;540:6;527:20;518:29;;556:33;583:5;556:33;:::i;:::-;456:139;;;;:::o;601:143::-;658:5;689:6;683:13;674:22;;705:33;732:5;705:33;:::i;:::-;601:143;;;;:::o;750:329::-;809:6;858:2;846:9;837:7;833:23;829:32;826:119;;;864:79;;:::i;:::-;826:119;984:1;1009:53;1054:7;1045:6;1034:9;1030:22;1009:53;:::i;:::-;999:63;;955:117;750:329;;;;:::o;1085:474::-;1153:6;1161;1210:2;1198:9;1189:7;1185:23;1181:32;1178:119;;;1216:79;;:::i;:::-;1178:119;1336:1;1361:53;1406:7;1397:6;1386:9;1382:22;1361:53;:::i;:::-;1351:63;;1307:117;1463:2;1489:53;1534:7;1525:6;1514:9;1510:22;1489:53;:::i;:::-;1479:63;;1434:118;1085:474;;;;;:::o;1565:619::-;1642:6;1650;1658;1707:2;1695:9;1686:7;1682:23;1678:32;1675:119;;;1713:79;;:::i;:::-;1675:119;1833:1;1858:53;1903:7;1894:6;1883:9;1879:22;1858:53;:::i;:::-;1848:63;;1804:117;1960:2;1986:53;2031:7;2022:6;2011:9;2007:22;1986:53;:::i;:::-;1976:63;;1931:118;2088:2;2114:53;2159:7;2150:6;2139:9;2135:22;2114:53;:::i;:::-;2104:63;;2059:118;1565:619;;;;;:::o;2190:345::-;2257:6;2306:2;2294:9;2285:7;2281:23;2277:32;2274:119;;;2312:79;;:::i;:::-;2274:119;2432:1;2457:61;2510:7;2501:6;2490:9;2486:22;2457:61;:::i;:::-;2447:71;;2403:125;2190:345;;;;:::o;2541:351::-;2611:6;2660:2;2648:9;2639:7;2635:23;2631:32;2628:119;;;2666:79;;:::i;:::-;2628:119;2786:1;2811:64;2867:7;2858:6;2847:9;2843:22;2811:64;:::i;:::-;2801:74;;2757:128;2541:351;;;;:::o;2898:490::-;2974:6;2982;3031:2;3019:9;3010:7;3006:23;3002:32;2999:119;;;3037:79;;:::i;:::-;2999:119;3157:1;3182:53;3227:7;3218:6;3207:9;3203:22;3182:53;:::i;:::-;3172:63;;3128:117;3284:2;3310:61;3363:7;3354:6;3343:9;3339:22;3310:61;:::i;:::-;3300:71;;3255:126;2898:490;;;;;:::o;3394:619::-;3471:6;3479;3487;3536:2;3524:9;3515:7;3511:23;3507:32;3504:119;;;3542:79;;:::i;:::-;3504:119;3662:1;3687:53;3732:7;3723:6;3712:9;3708:22;3687:53;:::i;:::-;3677:63;;3633:117;3789:2;3815:53;3860:7;3851:6;3840:9;3836:22;3815:53;:::i;:::-;3805:63;;3760:118;3917:2;3943:53;3988:7;3979:6;3968:9;3964:22;3943:53;:::i;:::-;3933:63;;3888:118;3394:619;;;;;:::o;4019:118::-;4106:24;4124:5;4106:24;:::i;:::-;4101:3;4094:37;4019:118;;:::o;4143:366::-;4285:3;4306:67;4370:2;4365:3;4306:67;:::i;:::-;4299:74;;4382:93;4471:3;4382:93;:::i;:::-;4500:2;4495:3;4491:12;4484:19;;4143:366;;;:::o;4515:::-;4657:3;4678:67;4742:2;4737:3;4678:67;:::i;:::-;4671:74;;4754:93;4843:3;4754:93;:::i;:::-;4872:2;4867:3;4863:12;4856:19;;4515:366;;;:::o;4887:::-;5029:3;5050:67;5114:2;5109:3;5050:67;:::i;:::-;5043:74;;5126:93;5215:3;5126:93;:::i;:::-;5244:2;5239:3;5235:12;5228:19;;4887:366;;;:::o;5259:363::-;5400:3;5421:65;5484:1;5479:3;5421:65;:::i;:::-;5414:72;;5495:93;5584:3;5495:93;:::i;:::-;5613:2;5608:3;5604:12;5597:19;;5259:363;;;:::o;5628:366::-;5770:3;5791:67;5855:2;5850:3;5791:67;:::i;:::-;5784:74;;5867:93;5956:3;5867:93;:::i;:::-;5985:2;5980:3;5976:12;5969:19;;5628:366;;;:::o;6000:118::-;6087:24;6105:5;6087:24;:::i;:::-;6082:3;6075:37;6000:118;;:::o;6124:332::-;6245:4;6283:2;6272:9;6268:18;6260:26;;6296:71;6364:1;6353:9;6349:17;6340:6;6296:71;:::i;:::-;6377:72;6445:2;6434:9;6430:18;6421:6;6377:72;:::i;:::-;6124:332;;;;;:::o;6462:859::-;6739:4;6777:3;6766:9;6762:19;6754:27;;6791:71;6859:1;6848:9;6844:17;6835:6;6791:71;:::i;:::-;6872:72;6940:2;6929:9;6925:18;6916:6;6872:72;:::i;:::-;6954;7022:2;7011:9;7007:18;6998:6;6954:72;:::i;:::-;7036;7104:2;7093:9;7089:18;7080:6;7036:72;:::i;:::-;7156:9;7150:4;7146:20;7140:3;7129:9;7125:19;7118:49;7184:130;7309:4;7184:130;:::i;:::-;7176:138;;6462:859;;;;;;;:::o;7327:332::-;7448:4;7486:2;7475:9;7471:18;7463:26;;7499:71;7567:1;7556:9;7552:17;7543:6;7499:71;:::i;:::-;7580:72;7648:2;7637:9;7633:18;7624:6;7580:72;:::i;:::-;7327:332;;;;;:::o;7665:419::-;7831:4;7869:2;7858:9;7854:18;7846:26;;7918:9;7912:4;7908:20;7904:1;7893:9;7889:17;7882:47;7946:131;8072:4;7946:131;:::i;:::-;7938:139;;7665:419;;;:::o;8090:::-;8256:4;8294:2;8283:9;8279:18;8271:26;;8343:9;8337:4;8333:20;8329:1;8318:9;8314:17;8307:47;8371:131;8497:4;8371:131;:::i;:::-;8363:139;;8090:419;;;:::o;8515:::-;8681:4;8719:2;8708:9;8704:18;8696:26;;8768:9;8762:4;8758:20;8754:1;8743:9;8739:17;8732:47;8796:131;8922:4;8796:131;:::i;:::-;8788:139;;8515:419;;;:::o;8940:::-;9106:4;9144:2;9133:9;9129:18;9121:26;;9193:9;9187:4;9183:20;9179:1;9168:9;9164:17;9157:47;9221:131;9347:4;9221:131;:::i;:::-;9213:139;;8940:419;;;:::o;9365:222::-;9458:4;9496:2;9485:9;9481:18;9473:26;;9509:71;9577:1;9566:9;9562:17;9553:6;9509:71;:::i;:::-;9365:222;;;;:::o;9593:332::-;9714:4;9752:2;9741:9;9737:18;9729:26;;9765:71;9833:1;9822:9;9818:17;9809:6;9765:71;:::i;:::-;9846:72;9914:2;9903:9;9899:18;9890:6;9846:72;:::i;:::-;9593:332;;;;;:::o;10012:168::-;10095:11;10129:6;10124:3;10117:19;10169:4;10164:3;10160:14;10145:29;;10012:168;;;;:::o;10186:169::-;10270:11;10304:6;10299:3;10292:19;10344:4;10339:3;10335:14;10320:29;;10186:169;;;;:::o;10361:305::-;10401:3;10420:20;10438:1;10420:20;:::i;:::-;10415:25;;10454:20;10472:1;10454:20;:::i;:::-;10449:25;;10608:1;10540:66;10536:74;10533:1;10530:81;10527:107;;;10614:18;;:::i;:::-;10527:107;10658:1;10655;10651:9;10644:16;;10361:305;;;;:::o;10672:348::-;10712:7;10735:20;10753:1;10735:20;:::i;:::-;10730:25;;10769:20;10787:1;10769:20;:::i;:::-;10764:25;;10957:1;10889:66;10885:74;10882:1;10879:81;10874:1;10867:9;10860:17;10856:105;10853:131;;;10964:18;;:::i;:::-;10853:131;11012:1;11009;11005:9;10994:20;;10672:348;;;;:::o;11026:191::-;11066:4;11086:20;11104:1;11086:20;:::i;:::-;11081:25;;11120:20;11138:1;11120:20;:::i;:::-;11115:25;;11159:1;11156;11153:8;11150:34;;;11164:18;;:::i;:::-;11150:34;11209:1;11206;11202:9;11194:17;;11026:191;;;;:::o;11223:96::-;11260:7;11289:24;11307:5;11289:24;:::i;:::-;11278:35;;11223:96;;;:::o;11325:104::-;11370:7;11399:24;11417:5;11399:24;:::i;:::-;11388:35;;11325:104;;;:::o;11435:90::-;11469:7;11512:5;11505:13;11498:21;11487:32;;11435:90;;;:::o;11531:126::-;11568:7;11608:42;11601:5;11597:54;11586:65;;11531:126;;;:::o;11663:77::-;11700:7;11729:5;11718:16;;11663:77;;;:::o;11746:180::-;11794:77;11791:1;11784:88;11891:4;11888:1;11881:15;11915:4;11912:1;11905:15;12055:117;12164:1;12161;12154:12;12178:176;12318:28;12314:1;12306:6;12302:14;12295:52;12178:176;:::o;12360:222::-;12500:34;12496:1;12488:6;12484:14;12477:58;12569:5;12564:2;12556:6;12552:15;12545:30;12360:222;:::o;12588:224::-;12728:34;12724:1;12716:6;12712:14;12705:58;12797:7;12792:2;12784:6;12780:15;12773:32;12588:224;:::o;12818:158::-;12958:10;12954:1;12946:6;12942:14;12935:34;12818:158;:::o;12982:169::-;13122:21;13118:1;13110:6;13106:14;13099:45;12982:169;:::o;13157:122::-;13230:24;13248:5;13230:24;:::i;:::-;13223:5;13220:35;13210:63;;13269:1;13266;13259:12;13210:63;13157:122;:::o;13285:138::-;13366:32;13392:5;13366:32;:::i;:::-;13359:5;13356:43;13346:71;;13413:1;13410;13403:12;13346:71;13285:138;:::o;13429:116::-;13499:21;13514:5;13499:21;:::i;:::-;13492:5;13489:32;13479:60;;13535:1;13532;13525:12;13479:60;13429:116;:::o;13551:122::-;13624:24;13642:5;13624:24;:::i;:::-;13617:5;13614:35;13604:63;;13663:1;13660;13653:12;13604:63;13551:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "751200",
								"executionCost": "786",
								"totalCost": "751986"
							},
							"external": {
								"addListing(uint256,address,uint256)": "infinite",
								"balances(address)": "2836",
								"listings(address,uint256)": "infinite",
								"purchase(address,uint256,uint256)": "infinite",
								"withdraw(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 147,
									"end": 2125,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2125,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb2d143d638bd06634a7760713fa2332f86357077e55a7a4193e5aef084676e264736f6c63430008070033",
									".code": [
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "7DF30"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "F714CE"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "27E235E3"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "80ABBE57"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "98968F15"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 147,
											"end": 2125,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 250,
											"end": 313,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 250,
											"end": 313,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2004,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2015,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2016,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 2016,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 2016,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1978,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2059,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2068,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2051,
											"end": 2068,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 2069,
											"end": 2075,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2094,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 2123,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 319,
											"end": 362,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 731,
											"end": 744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 774,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 731,
											"end": 775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 731,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 831,
											"end": 832,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 793,
											"end": 808,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 808,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 793,
											"end": 808,
											"name": "PUSH",
											"source": 8,
											"value": "FDD58E"
										},
										{
											"begin": 809,
											"end": 819,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 793,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 793,
											"end": 828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 793,
											"end": 832,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 785,
											"end": 874,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 874,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 785,
											"end": 874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 874,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 785,
											"end": 874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 785,
											"end": 874,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 785,
											"end": 874,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 785,
											"end": 874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 874,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 785,
											"end": 874,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 785,
											"end": 874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 892,
											"end": 897,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 892,
											"end": 914,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 892,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "E985E9C5"
										},
										{
											"begin": 915,
											"end": 925,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 935,
											"end": 939,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 892,
											"end": 941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 884,
											"end": 972,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 972,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 884,
											"end": 972,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 884,
											"end": 972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 884,
											"end": 972,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 884,
											"end": 972,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 884,
											"end": 972,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 884,
											"end": 972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 972,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 884,
											"end": 972,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 884,
											"end": 972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1031,
											"end": 1036,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1038,
											"end": 1048,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 983,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1011,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1012,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 1019,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1020,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1020,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1020,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1057,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 635,
											"end": 1057,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1415,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1416,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1416,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1456,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1476,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1485,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1527,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1517,
											"end": 1536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1517,
											"end": 1536,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1517,
											"end": 1536,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1517,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1513,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1536,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1536,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1496,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1620,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1594,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1599,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1595,
											"end": 1606,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1606,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1595,
											"end": 1606,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1652,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1630,
											"end": 1652,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1652,
											"name": "PUSH",
											"source": 8,
											"value": "F242432A"
										},
										{
											"begin": 1653,
											"end": 1657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1653,
											"end": 1664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1664,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1676,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1684,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1686,
											"end": 1692,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1712,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 231,
											"end": 251,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 222,
											"end": 251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 222,
											"end": 251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 152,
											"end": 307,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 152,
											"end": 307,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 152,
											"end": 307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 152,
											"end": 307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 450,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 313,
											"end": 450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 404,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 392,
											"end": 405,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 383,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 383,
											"end": 405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 414,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 438,
											"end": 443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 414,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 450,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 313,
											"end": 450,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 313,
											"end": 450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 450,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 456,
											"end": 595,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 456,
											"end": 595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 502,
											"end": 507,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 527,
											"end": 547,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 518,
											"end": 547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 518,
											"end": 547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 556,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 556,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 556,
											"end": 589,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 589,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 556,
											"end": 589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 456,
											"end": 595,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 456,
											"end": 595,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 456,
											"end": 595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 456,
											"end": 595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 456,
											"end": 595,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 601,
											"end": 744,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 601,
											"end": 744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 658,
											"end": 663,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 695,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 683,
											"end": 696,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 674,
											"end": 696,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 674,
											"end": 696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 705,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 732,
											"end": 737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 705,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 705,
											"end": 738,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 705,
											"end": 738,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 705,
											"end": 738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 601,
											"end": 744,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 601,
											"end": 744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 601,
											"end": 744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 601,
											"end": 744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 601,
											"end": 744,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 809,
											"end": 815,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 860,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 837,
											"end": 844,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 833,
											"end": 856,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 829,
											"end": 861,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 826,
											"end": 945,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 826,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 826,
											"end": 945,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 864,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 864,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 864,
											"end": 943,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 864,
											"end": 943,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 864,
											"end": 943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 826,
											"end": 945,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 826,
											"end": 945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 984,
											"end": 985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1054,
											"end": 1061,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1009,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1009,
											"end": 1062,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 1062,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1009,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1062,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 955,
											"end": 1072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 750,
											"end": 1079,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1559,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1085,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1167,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1212,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1198,
											"end": 1207,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1196,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1181,
											"end": 1213,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1178,
											"end": 1297,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1178,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1178,
											"end": 1297,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1216,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1216,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1216,
											"end": 1295,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1216,
											"end": 1295,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1216,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1178,
											"end": 1297,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1178,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1382,
											"end": 1404,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1361,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1361,
											"end": 1414,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1361,
											"end": 1414,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1361,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1351,
											"end": 1414,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1351,
											"end": 1414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1307,
											"end": 1424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1465,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1534,
											"end": 1541,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1531,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1523,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1510,
											"end": 1532,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1489,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1489,
											"end": 1542,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1489,
											"end": 1542,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1489,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1085,
											"end": 1559,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1085,
											"end": 1559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1085,
											"end": 1559,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1085,
											"end": 1559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1085,
											"end": 1559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1085,
											"end": 1559,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1565,
											"end": 2184,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1565,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1642,
											"end": 1648,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1709,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1705,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1710,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1675,
											"end": 1794,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1675,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1675,
											"end": 1794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1713,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1713,
											"end": 1792,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1713,
											"end": 1792,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1713,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1675,
											"end": 1794,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1675,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1833,
											"end": 1834,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1903,
											"end": 1910,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1883,
											"end": 1892,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1858,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1858,
											"end": 1911,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1911,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1858,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1848,
											"end": 1911,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1848,
											"end": 1911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1804,
											"end": 1921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1960,
											"end": 1962,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1986,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2022,
											"end": 2028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2007,
											"end": 2029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1986,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1986,
											"end": 2039,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1986,
											"end": 2039,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1986,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1976,
											"end": 2039,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1976,
											"end": 2039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2159,
											"end": 2166,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2148,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2135,
											"end": 2157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2114,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2114,
											"end": 2167,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2167,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2114,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2167,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1565,
											"end": 2184,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1565,
											"end": 2184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1565,
											"end": 2184,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1565,
											"end": 2184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1565,
											"end": 2184,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1565,
											"end": 2184,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2190,
											"end": 2535,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2190,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2308,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2285,
											"end": 2292,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2304,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2309,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2274,
											"end": 2393,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2312,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2312,
											"end": 2391,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2312,
											"end": 2391,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2312,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2393,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2274,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2510,
											"end": 2517,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2490,
											"end": 2499,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2486,
											"end": 2508,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2457,
											"end": 2518,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2457,
											"end": 2518,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2457,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2518,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2403,
											"end": 2528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2535,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2535,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2541,
											"end": 2892,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2541,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2611,
											"end": 2617,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2662,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2646,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2658,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2663,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2747,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2628,
											"end": 2747,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2666,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2666,
											"end": 2745,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2745,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2666,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2747,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2628,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2787,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2867,
											"end": 2874,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2864,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2847,
											"end": 2856,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 2865,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2875,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2757,
											"end": 2885,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2892,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2892,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2892,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2898,
											"end": 3388,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2898,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2974,
											"end": 2980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3010,
											"end": 3017,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3029,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3034,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 3037,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2999,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 3227,
											"end": 3234,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3216,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 3182,
											"end": 3235,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3182,
											"end": 3235,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 3182,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3172,
											"end": 3235,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3172,
											"end": 3235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3128,
											"end": 3245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3286,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 3363,
											"end": 3370,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3354,
											"end": 3360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3343,
											"end": 3352,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3310,
											"end": 3371,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3310,
											"end": 3371,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 3310,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3388,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3388,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3388,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3394,
											"end": 4013,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 3394,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3538,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3524,
											"end": 3533,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3522,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3534,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3539,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3623,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3504,
											"end": 3623,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3542,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3542,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3542,
											"end": 3621,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3542,
											"end": 3621,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3542,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3623,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3504,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3663,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3732,
											"end": 3739,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 3687,
											"end": 3740,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3687,
											"end": 3740,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3687,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3633,
											"end": 3750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3791,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3815,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3860,
											"end": 3867,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3840,
											"end": 3849,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3815,
											"end": 3868,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3815,
											"end": 3868,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3815,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3919,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3943,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3988,
											"end": 3995,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 3985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 3977,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 3986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 3943,
											"end": 3996,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3943,
											"end": 3996,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3943,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3933,
											"end": 3996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 4006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 4013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 4013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 4013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 4013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 4013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 4013,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4019,
											"end": 4137,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 4019,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4124,
											"end": 4129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 4106,
											"end": 4130,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4106,
											"end": 4130,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4106,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4101,
											"end": 4104,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4131,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4137,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4143,
											"end": 4509,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 4143,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4288,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 4370,
											"end": 4372,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 4365,
											"end": 4368,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4306,
											"end": 4373,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4306,
											"end": 4373,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 4306,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4373,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4471,
											"end": 4474,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4382,
											"end": 4475,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4382,
											"end": 4475,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4382,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4502,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4495,
											"end": 4498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4484,
											"end": 4503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4484,
											"end": 4503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4509,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4515,
											"end": 4881,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4515,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4657,
											"end": 4660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4737,
											"end": 4740,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4678,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4671,
											"end": 4745,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4671,
											"end": 4745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4843,
											"end": 4846,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 4754,
											"end": 4847,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4754,
											"end": 4847,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4754,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4874,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4867,
											"end": 4870,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4856,
											"end": 4875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4856,
											"end": 4875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4881,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4881,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4881,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4887,
											"end": 5253,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4887,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5029,
											"end": 5032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5050,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 5114,
											"end": 5116,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 5109,
											"end": 5112,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5050,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5050,
											"end": 5117,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5050,
											"end": 5117,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 5050,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5117,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5126,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5215,
											"end": 5218,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5126,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 5126,
											"end": 5219,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5126,
											"end": 5219,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5126,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5246,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5239,
											"end": 5242,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5247,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5247,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 5253,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 5253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 5253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 5253,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5259,
											"end": 5622,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 5259,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 5484,
											"end": 5485,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5479,
											"end": 5482,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 5421,
											"end": 5486,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5486,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 5421,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5414,
											"end": 5486,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5414,
											"end": 5486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5495,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 5584,
											"end": 5587,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5495,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 5495,
											"end": 5588,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5495,
											"end": 5588,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 5495,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5613,
											"end": 5615,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5608,
											"end": 5611,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5259,
											"end": 5622,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5259,
											"end": 5622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5259,
											"end": 5622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5259,
											"end": 5622,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5628,
											"end": 5994,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5628,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 5773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5855,
											"end": 5857,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 5850,
											"end": 5853,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5791,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5791,
											"end": 5858,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5791,
											"end": 5858,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5791,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5784,
											"end": 5858,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5784,
											"end": 5858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5956,
											"end": 5959,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5867,
											"end": 5960,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5867,
											"end": 5960,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5867,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 5987,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5980,
											"end": 5983,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5976,
											"end": 5988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5969,
											"end": 5988,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5969,
											"end": 5988,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5628,
											"end": 5994,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5628,
											"end": 5994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5628,
											"end": 5994,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5628,
											"end": 5994,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6000,
											"end": 6118,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6000,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6087,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 6105,
											"end": 6110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6087,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 6087,
											"end": 6111,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6087,
											"end": 6111,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 6087,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6075,
											"end": 6112,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6000,
											"end": 6118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6000,
											"end": 6118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6000,
											"end": 6118,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6124,
											"end": 6456,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 6124,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6285,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6272,
											"end": 6281,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6268,
											"end": 6286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6260,
											"end": 6286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6260,
											"end": 6286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6364,
											"end": 6365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6362,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6340,
											"end": 6346,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 6296,
											"end": 6367,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6296,
											"end": 6367,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6296,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 6445,
											"end": 6447,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6434,
											"end": 6443,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 6377,
											"end": 6449,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6377,
											"end": 6449,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 6377,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6124,
											"end": 6456,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6124,
											"end": 6456,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6124,
											"end": 6456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6124,
											"end": 6456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6124,
											"end": 6456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6124,
											"end": 6456,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6462,
											"end": 7321,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 6462,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6739,
											"end": 6743,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6780,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6781,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 6859,
											"end": 6860,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6848,
											"end": 6857,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6844,
											"end": 6861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6835,
											"end": 6841,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 6791,
											"end": 6862,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6791,
											"end": 6862,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 6791,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6872,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 6940,
											"end": 6942,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6929,
											"end": 6938,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6916,
											"end": 6922,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6872,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 6872,
											"end": 6944,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6872,
											"end": 6944,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 6872,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6954,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7011,
											"end": 7020,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7004,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6954,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6954,
											"end": 7026,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6954,
											"end": 7026,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 6954,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7036,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 7104,
											"end": 7106,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7093,
											"end": 7102,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7080,
											"end": 7086,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7036,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 7036,
											"end": 7108,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7036,
											"end": 7108,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 7036,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7154,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7146,
											"end": 7166,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7143,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7129,
											"end": 7138,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7125,
											"end": 7144,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7118,
											"end": 7167,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 7309,
											"end": 7313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 7184,
											"end": 7314,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7184,
											"end": 7314,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 7184,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 7314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 7314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 7321,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 7321,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 7321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 7321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 7321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 7321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 7321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 7321,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7327,
											"end": 7659,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 7327,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7452,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7484,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7463,
											"end": 7489,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7463,
											"end": 7489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 7567,
											"end": 7568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7556,
											"end": 7565,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7569,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7549,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 7499,
											"end": 7570,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7499,
											"end": 7570,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 7499,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7580,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 7648,
											"end": 7650,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7637,
											"end": 7646,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7651,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7580,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 7580,
											"end": 7652,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7580,
											"end": 7652,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 7580,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7659,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7659,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7659,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7665,
											"end": 8084,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 7665,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7858,
											"end": 7867,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7854,
											"end": 7872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7846,
											"end": 7872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7846,
											"end": 7872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7918,
											"end": 7927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7912,
											"end": 7916,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7928,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7905,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7893,
											"end": 7902,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7889,
											"end": 7906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 7929,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 8072,
											"end": 8076,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 7946,
											"end": 8077,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7946,
											"end": 8077,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 7946,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7938,
											"end": 8077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7938,
											"end": 8077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 8084,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 8084,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 8084,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 8084,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8090,
											"end": 8509,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 8090,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8256,
											"end": 8260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8296,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8283,
											"end": 8292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8279,
											"end": 8297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8297,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8337,
											"end": 8341,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8353,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8329,
											"end": 8330,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8318,
											"end": 8327,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8307,
											"end": 8354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 8497,
											"end": 8501,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 8371,
											"end": 8502,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8371,
											"end": 8502,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 8371,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8363,
											"end": 8502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8363,
											"end": 8502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8090,
											"end": 8509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8090,
											"end": 8509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8090,
											"end": 8509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8090,
											"end": 8509,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8515,
											"end": 8934,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 8515,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8681,
											"end": 8685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8719,
											"end": 8721,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8708,
											"end": 8717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8704,
											"end": 8722,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8696,
											"end": 8722,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8696,
											"end": 8722,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8768,
											"end": 8777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8762,
											"end": 8766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8758,
											"end": 8778,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8754,
											"end": 8755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8743,
											"end": 8752,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 8922,
											"end": 8926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 8796,
											"end": 8927,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8796,
											"end": 8927,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 8796,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8788,
											"end": 8927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8788,
											"end": 8927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8515,
											"end": 8934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8515,
											"end": 8934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8515,
											"end": 8934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8515,
											"end": 8934,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8940,
											"end": 9359,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 8940,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9106,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9144,
											"end": 9146,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9129,
											"end": 9147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9193,
											"end": 9202,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9187,
											"end": 9191,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9183,
											"end": 9203,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9177,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 9347,
											"end": 9351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 9221,
											"end": 9352,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9221,
											"end": 9352,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 9221,
											"end": 9352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8940,
											"end": 9359,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8940,
											"end": 9359,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8940,
											"end": 9359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8940,
											"end": 9359,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9365,
											"end": 9587,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 9365,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9458,
											"end": 9462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9496,
											"end": 9498,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9485,
											"end": 9494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9481,
											"end": 9499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9473,
											"end": 9499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9473,
											"end": 9499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9509,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 9577,
											"end": 9578,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9566,
											"end": 9575,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9562,
											"end": 9579,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9553,
											"end": 9559,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9509,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 9509,
											"end": 9580,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9509,
											"end": 9580,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 9509,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9365,
											"end": 9587,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9365,
											"end": 9587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9365,
											"end": 9587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9365,
											"end": 9587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9365,
											"end": 9587,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9593,
											"end": 9925,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 9593,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9752,
											"end": 9754,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9741,
											"end": 9750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9729,
											"end": 9755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9729,
											"end": 9755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9765,
											"end": 9836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 9833,
											"end": 9834,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9822,
											"end": 9831,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9818,
											"end": 9835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9815,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9765,
											"end": 9836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 9765,
											"end": 9836,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9765,
											"end": 9836,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 9765,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9846,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 9914,
											"end": 9916,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9903,
											"end": 9912,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9899,
											"end": 9917,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9890,
											"end": 9896,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9846,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 9846,
											"end": 9918,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9846,
											"end": 9918,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 9846,
											"end": 9918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9925,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9925,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9925,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10012,
											"end": 10180,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 10012,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10095,
											"end": 10106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10129,
											"end": 10135,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10124,
											"end": 10127,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10117,
											"end": 10136,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10169,
											"end": 10173,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10164,
											"end": 10167,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10160,
											"end": 10174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10145,
											"end": 10174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10145,
											"end": 10174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10012,
											"end": 10180,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10012,
											"end": 10180,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10012,
											"end": 10180,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10012,
											"end": 10180,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10012,
											"end": 10180,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10186,
											"end": 10355,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 10186,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10270,
											"end": 10281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10304,
											"end": 10310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10292,
											"end": 10311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10348,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10339,
											"end": 10342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10335,
											"end": 10349,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10320,
											"end": 10349,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10320,
											"end": 10349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10355,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10355,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10186,
											"end": 10355,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10361,
											"end": 10666,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 10361,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10401,
											"end": 10404,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10420,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 10438,
											"end": 10439,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 10420,
											"end": 10440,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10420,
											"end": 10440,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 10420,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 10472,
											"end": 10473,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10449,
											"end": 10474,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10449,
											"end": 10474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10608,
											"end": 10609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10540,
											"end": 10606,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10536,
											"end": 10610,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10533,
											"end": 10534,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10530,
											"end": 10611,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10527,
											"end": 10634,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10527,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 10527,
											"end": 10634,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10614,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 10614,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 10614,
											"end": 10632,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10614,
											"end": 10632,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 10614,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10527,
											"end": 10634,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 10527,
											"end": 10634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10658,
											"end": 10659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10655,
											"end": 10656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10644,
											"end": 10660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10644,
											"end": 10660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10361,
											"end": 10666,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10361,
											"end": 10666,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10361,
											"end": 10666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10361,
											"end": 10666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10361,
											"end": 10666,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10672,
											"end": 11020,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 10672,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10712,
											"end": 10719,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10735,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 10753,
											"end": 10754,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10735,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 10735,
											"end": 10755,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10735,
											"end": 10755,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 10735,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10730,
											"end": 10755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10730,
											"end": 10755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10769,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 10787,
											"end": 10788,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10769,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 10769,
											"end": 10789,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10769,
											"end": 10789,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 10769,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10789,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10957,
											"end": 10958,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10889,
											"end": 10955,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10885,
											"end": 10959,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10882,
											"end": 10883,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10879,
											"end": 10960,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10874,
											"end": 10875,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10867,
											"end": 10876,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10860,
											"end": 10877,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 10961,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10853,
											"end": 10984,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10853,
											"end": 10984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 10853,
											"end": 10984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10853,
											"end": 10984,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 10853,
											"end": 10984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11012,
											"end": 11013,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11009,
											"end": 11010,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11005,
											"end": 11014,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10994,
											"end": 11014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10994,
											"end": 11014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10672,
											"end": 11020,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10672,
											"end": 11020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10672,
											"end": 11020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10672,
											"end": 11020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10672,
											"end": 11020,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11026,
											"end": 11217,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 11026,
											"end": 11217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11066,
											"end": 11070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11086,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 11104,
											"end": 11105,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11086,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 11086,
											"end": 11106,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11086,
											"end": 11106,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 11086,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11081,
											"end": 11106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11081,
											"end": 11106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11120,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 11138,
											"end": 11139,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11120,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 11120,
											"end": 11140,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11120,
											"end": 11140,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 11120,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11140,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11160,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11156,
											"end": 11157,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11153,
											"end": 11161,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11150,
											"end": 11184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11150,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 11150,
											"end": 11184,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11150,
											"end": 11184,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 11150,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11209,
											"end": 11210,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11206,
											"end": 11207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11202,
											"end": 11211,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11194,
											"end": 11211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11194,
											"end": 11211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11026,
											"end": 11217,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11026,
											"end": 11217,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11026,
											"end": 11217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11026,
											"end": 11217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11026,
											"end": 11217,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11223,
											"end": 11319,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 11223,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11260,
											"end": 11267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 11307,
											"end": 11312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11289,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 11289,
											"end": 11313,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11289,
											"end": 11313,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 11289,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11278,
											"end": 11313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11278,
											"end": 11313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11223,
											"end": 11319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11223,
											"end": 11319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11223,
											"end": 11319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11223,
											"end": 11319,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11325,
											"end": 11429,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 11325,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11370,
											"end": 11377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11399,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 11417,
											"end": 11422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11399,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 11399,
											"end": 11423,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11399,
											"end": 11423,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 11399,
											"end": 11423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11325,
											"end": 11429,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11325,
											"end": 11429,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11325,
											"end": 11429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11325,
											"end": 11429,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11435,
											"end": 11525,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 11435,
											"end": 11525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11469,
											"end": 11476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11512,
											"end": 11517,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11505,
											"end": 11518,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11498,
											"end": 11519,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11487,
											"end": 11519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11487,
											"end": 11519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11435,
											"end": 11525,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11435,
											"end": 11525,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11435,
											"end": 11525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11435,
											"end": 11525,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11531,
											"end": 11657,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 11531,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11568,
											"end": 11575,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11608,
											"end": 11650,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11601,
											"end": 11606,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11597,
											"end": 11651,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11586,
											"end": 11651,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11586,
											"end": 11651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11531,
											"end": 11657,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11531,
											"end": 11657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11531,
											"end": 11657,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11531,
											"end": 11657,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11663,
											"end": 11740,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 11663,
											"end": 11740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11700,
											"end": 11707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11729,
											"end": 11734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11718,
											"end": 11734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11718,
											"end": 11734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11663,
											"end": 11740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11663,
											"end": 11740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11663,
											"end": 11740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11663,
											"end": 11740,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11746,
											"end": 11926,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 11746,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11794,
											"end": 11871,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11791,
											"end": 11792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11784,
											"end": 11872,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11891,
											"end": 11895,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 11888,
											"end": 11889,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11881,
											"end": 11896,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11919,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11912,
											"end": 11913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11905,
											"end": 11920,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12055,
											"end": 12172,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12055,
											"end": 12172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12164,
											"end": 12165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12161,
											"end": 12162,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12154,
											"end": 12166,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12354,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 12178,
											"end": 12354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12318,
											"end": 12346,
											"name": "PUSH",
											"source": 9,
											"value": "436F6E7472616374206D75737420626520617070726F7665642E000000000000"
										},
										{
											"begin": 12314,
											"end": 12315,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12306,
											"end": 12312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12295,
											"end": 12347,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12354,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12360,
											"end": 12582,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 12360,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12500,
											"end": 12534,
											"name": "PUSH",
											"source": 9,
											"value": "496E73756666696369656E7420616D6F756E742073656E7420746F2073656C6C"
										},
										{
											"begin": 12496,
											"end": 12497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12488,
											"end": 12494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12484,
											"end": 12498,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12477,
											"end": 12535,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12569,
											"end": 12574,
											"name": "PUSH",
											"source": 9,
											"value": "65722E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12564,
											"end": 12566,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12556,
											"end": 12562,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12552,
											"end": 12567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12545,
											"end": 12575,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12360,
											"end": 12582,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12360,
											"end": 12582,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12588,
											"end": 12812,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 12588,
											"end": 12812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12728,
											"end": 12762,
											"name": "PUSH",
											"source": 9,
											"value": "4D757374206F776E20746F6B656E20746F2062652061626C6520746F206C6973"
										},
										{
											"begin": 12724,
											"end": 12725,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12716,
											"end": 12722,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12712,
											"end": 12726,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12797,
											"end": 12804,
											"name": "PUSH",
											"source": 9,
											"value": "742069742E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12792,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12784,
											"end": 12790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12780,
											"end": 12795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12773,
											"end": 12805,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12588,
											"end": 12812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12588,
											"end": 12812,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12818,
											"end": 12976,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 12818,
											"end": 12976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12958,
											"end": 12968,
											"name": "PUSH",
											"source": 9,
											"value": "5472616E73666572000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12954,
											"end": 12955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12946,
											"end": 12952,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12942,
											"end": 12956,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12935,
											"end": 12969,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12818,
											"end": 12976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12818,
											"end": 12976,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12982,
											"end": 13151,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 12982,
											"end": 13151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13122,
											"end": 13143,
											"name": "PUSH",
											"source": 9,
											"value": "496E73756666696369656E742066756E64732E00000000000000000000000000"
										},
										{
											"begin": 13118,
											"end": 13119,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13106,
											"end": 13120,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13099,
											"end": 13144,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12982,
											"end": 13151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12982,
											"end": 13151,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13157,
											"end": 13279,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 13157,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13230,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 13248,
											"end": 13253,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13230,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 13230,
											"end": 13254,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13230,
											"end": 13254,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 13230,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13223,
											"end": 13228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13220,
											"end": 13255,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13210,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 13210,
											"end": 13273,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13266,
											"end": 13267,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13259,
											"end": 13271,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13210,
											"end": 13273,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 13210,
											"end": 13273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13157,
											"end": 13279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13157,
											"end": 13279,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13285,
											"end": 13423,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 13285,
											"end": 13423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 13392,
											"end": 13397,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 13366,
											"end": 13398,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13366,
											"end": 13398,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 13366,
											"end": 13398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13359,
											"end": 13364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13356,
											"end": 13399,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13413,
											"end": 13414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13410,
											"end": 13411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13403,
											"end": 13415,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13285,
											"end": 13423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13285,
											"end": 13423,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13429,
											"end": 13545,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 13429,
											"end": 13545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13499,
											"end": 13520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 13514,
											"end": 13519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13499,
											"end": 13520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 13499,
											"end": 13520,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13499,
											"end": 13520,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 13499,
											"end": 13520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13497,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13489,
											"end": 13521,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13479,
											"end": 13539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 13479,
											"end": 13539,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13535,
											"end": 13536,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13532,
											"end": 13533,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13525,
											"end": 13537,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13479,
											"end": 13539,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 13479,
											"end": 13539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13429,
											"end": 13545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13429,
											"end": 13545,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13551,
											"end": 13673,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 13551,
											"end": 13673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13624,
											"end": 13648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 13642,
											"end": 13647,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13624,
											"end": 13648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 13624,
											"end": 13648,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13624,
											"end": 13648,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 13624,
											"end": 13648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13617,
											"end": 13622,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13614,
											"end": 13649,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13604,
											"end": 13667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 13604,
											"end": 13667,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13663,
											"end": 13664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13660,
											"end": 13661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13653,
											"end": 13665,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13604,
											"end": 13667,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 13604,
											"end": 13667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13551,
											"end": 13673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13551,
											"end": 13673,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addListing(uint256,address,uint256)": "80abbe57",
							"balances(address)": "27e235e3",
							"listings(address,uint256)": "0007df30",
							"purchase(address,uint256,uint256)": "98968f15",
							"withdraw(uint256,address)": "00f714ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"itemContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"itemID\",\"type\":\"uint256\"}],\"name\":\"addListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"itemContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"itemID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"destAddr\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WatchTrader.sol\":\"WatchTrader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd917747dc87f189c6779b894f367a028f9dca4be930283cccec8f312966af820\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a5e5b99830cf233f77aa3b1bd1f57561faee103beeee88e6a6f86d044817bbb\",\"dweb:/ipfs/QmREYidSDpHPig3AhxzsMHg3w2ZtMeGfRhcokXxEZyj6fC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/WatchTrader.sol\":{\"keccak256\":\"0x3fc826072af2d7e16f797ca76c502d43594241572e51ecba6345b46f462828e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e04a0dc560bfe12afb4f1c48e6c8cf98beab796a5b72a625d1c4dffc85cdf95\",\"dweb:/ipfs/QmPR97GtbN3qwW1AacbDv9Yx7H5bhj6d3cHFoeiZ2iNwZo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1798,
								"contract": "contracts/WatchTrader.sol:WatchTrader",
								"label": "listings",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)1807_storage))"
							},
							{
								"astId": 1802,
								"contract": "contracts/WatchTrader.sol:WatchTrader",
								"label": "balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)1807_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct WatchTrader.Listing))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(Listing)1807_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Listing)1807_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct WatchTrader.Listing)",
								"numberOfBytes": "32",
								"value": "t_struct(Listing)1807_storage"
							},
							"t_struct(Listing)1807_storage": {
								"encoding": "inplace",
								"label": "struct WatchTrader.Listing",
								"members": [
									{
										"astId": 1804,
										"contract": "contracts/WatchTrader.sol:WatchTrader",
										"label": "price",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1806,
										"contract": "contracts/WatchTrader.sol:WatchTrader",
										"label": "seller",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1730
						],
						"Context": [
							1752
						],
						"ERC1155": [
							1222
						],
						"ERC165": [
							1776
						],
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1400
						],
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							1788
						]
					},
					"id": 1223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1345,
							"src": "134:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1386,
							"src": "159:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1401,
							"src": "192:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1731,
							"src": "239:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1753,
							"src": "273:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1777,
							"src": "307:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1752,
										"src": "590:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "590:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1776,
										"src": "599:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "599:6:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1344,
										"src": "607:8:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "607:8:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1400,
										"src": "617:19:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "617:19:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "355:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1222,
							"linearizedBaseContracts": [
								1222,
								1400,
								1344,
								1776,
								1788,
								1752
							],
							"name": "ERC1155",
							"nameLocation": "579:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 19,
									"libraryName": {
										"id": 17,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1730,
										"src": "649:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "643:26:0",
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "780:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "724:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "724:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 23,
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "751:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "743:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "899:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "846:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 30,
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "854:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "846:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 29,
											"keyType": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "873:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "865:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 28,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "884:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1053:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "1038:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 32,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1038:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1139:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 40,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "1157:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 39,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1149:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1149:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1149:13:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1064:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1133:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1119:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1119:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:20:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:0:0"
									},
									"scope": 1222,
									"src": "1107:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1775,
										1787
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1344:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1373:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 57,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "1393:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1344_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1344_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 56,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1388:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1388:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1344",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1388:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1373:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 61,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1430:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 63,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "1450:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1400_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1400_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 62,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1445:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1445:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1400",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1445:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1430:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1373:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 70,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1522:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 68,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1498:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1222_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1775,
															"src": "1498:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1498:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1373:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 54,
												"id": 73,
												"nodeType": "Return",
												"src": "1354:180:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1175:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1245:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 51,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 49,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1776,
												"src": "1312:6:0"
											},
											{
												"id": 50,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1788,
												"src": "1320:7:0"
											}
										],
										"src": "1303:25:0"
									},
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1270:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1263:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 46,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1338:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:6:0"
									},
									"scope": 1222,
									"src": "1236:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2015:28:0",
										"statements": [
											{
												"expression": {
													"id": 84,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "2032:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "2025:11:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1547:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1949:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 80,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1982:8:0"
									},
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1953:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:9:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2000:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2000:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:15:0"
									},
									"scope": 1222,
									"src": "1940:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1282
									],
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2280:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 99,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "2298:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2317:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2309:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2309:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2309:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2298:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2321:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "2290:76:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 108,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2383:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 110,
														"indexExpression": {
															"id": 109,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2393:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2383:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 112,
													"indexExpression": {
														"id": 111,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2397:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2383:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 97,
												"id": 113,
												"nodeType": "Return",
												"src": "2376:29:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2049:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2194:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 94,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2253:8:0"
									},
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2212:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2204:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:29:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:0"
									},
									"scope": 1222,
									"src": "2185:227:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1295
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2742:335:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 130,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2760:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2760:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 132,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2779:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2779:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2760:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2752:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2752:83:0"
											},
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2863:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "2846:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 140,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2846:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"nodeType": "ArrayTypeName",
															"src": "2846:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 146,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2893:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2893:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2879:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 143,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2883:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 144,
															"nodeType": "ArrayTypeName",
															"src": "2883:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2879:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2846:63:0"
											},
											{
												"body": {
													"id": 174,
													"nodeType": "Block",
													"src": "2966:74:0",
													"statements": [
														{
															"expression": {
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 161,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "2980:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 163,
																	"indexExpression": {
																		"id": 162,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2994:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2980:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 165,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "3009:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 167,
																			"indexExpression": {
																				"id": 166,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3018:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3009:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 168,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 122,
																				"src": "3022:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 170,
																			"indexExpression": {
																				"id": 169,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3026:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3022:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 164,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "2999:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2999:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2980:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "2980:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 154,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2940:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 155,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2944:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2944:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2940:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2933:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 175,
															"src": "2925:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2925:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 153,
													"initialValue": {
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2937:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2925:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2961:3:0",
														"subExpression": {
															"id": 158,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2963:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ExpressionStatement",
													"src": "2961:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2920:120:0"
											},
											{
												"expression": {
													"id": 176,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "3057:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 128,
												"id": 177,
												"nodeType": "Return",
												"src": "3050:20:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2418:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2578:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2694:8:0"
									},
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2610:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2593:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 117,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2593:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 118,
													"nodeType": "ArrayTypeName",
													"src": "2593:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2637:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2620:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 120,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2620:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 121,
													"nodeType": "ArrayTypeName",
													"src": "2620:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2592:49:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2720:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2720:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 126,
													"nodeType": "ArrayTypeName",
													"src": "2720:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2719:18:0"
									},
									"scope": 1222,
									"src": "2569:508:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1303
									],
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "3229:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 189,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3272:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3282:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 188,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "3239:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3239:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "3239:52:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3083:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3154:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 186,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3220:8:0"
									},
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3180:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3172:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3195:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3190:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:33:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3229:0:0"
									},
									"scope": 1222,
									"src": "3145:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1313
									],
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "3470:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 207,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "3487:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 209,
														"indexExpression": {
															"id": 208,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3487:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 211,
													"indexExpression": {
														"id": 210,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "3515:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3487:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 206,
												"id": 212,
												"nodeType": "Return",
												"src": "3480:44:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "3304:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3374:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3446:8:0"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3399:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3391:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3416:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3408:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3390:35:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3464:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3464:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:6:0"
									},
									"scope": 1222,
									"src": "3365:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3767:225:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 230,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "3798:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 231,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1742,
																		"src": "3806:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3806:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3798:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 235,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "3839:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 236,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "3845:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3845:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 234,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "3822:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3822:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3798:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3872:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3777:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3777:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "3777:153:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3958:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "3964:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3968:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 247,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3972:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 248,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3980:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 243,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "3940:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3940:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "3940:45:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3537:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3607:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 227,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3758:8:0"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3641:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3633:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3663:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3655:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3683:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3675:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3703:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3719:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:119:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3767:0:0"
									},
									"scope": 1222,
									"src": "3598:394:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4258:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 270,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "4289:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 271,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1742,
																		"src": "4297:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4297:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4289:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 275,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "4330:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "4336:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4336:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 274,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4313:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4313:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4289:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4363:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4268:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "4268:153:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "4454:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4460:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "4464:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 287,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 288,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4478:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 283,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4431:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "4431:52:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3998:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4073:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4249:8:0"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4112:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4104:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4134:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4126:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4163:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4146:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "4146:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4193:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4176:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "4176:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4223:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4210:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4210:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4094:139:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4258:0:0"
									},
									"scope": 1222,
									"src": "4064:426:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "5103:784:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 307,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "5121:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5135:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5127:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5127:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5121:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5139:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5113:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5113:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5113:66:0"
											},
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5198:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5190:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5190:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 318,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "5209:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5209:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5190:31:0"
											},
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5248:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5231:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 323,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5231:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 324,
															"nodeType": "ArrayTypeName",
															"src": "5231:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5272:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "5254:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5231:44:0"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5302:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5285:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 332,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5285:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 333,
															"nodeType": "ArrayTypeName",
															"src": "5285:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5330:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "5312:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5285:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5369:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5379:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5385:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5389:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 344,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 345,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5403:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 339,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "5348:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5348:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "5348:60:0"
											},
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5427:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5419:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 350,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "5441:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 352,
														"indexExpression": {
															"id": 351,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5451:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5441:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5455:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5441:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5419:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "5478:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 358,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "5493:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5478:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5501:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5470:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5470:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "5470:76:0"
											},
											{
												"id": 373,
												"nodeType": "UncheckedBlock",
												"src": "5556:77:0",
												"statements": [
													{
														"expression": {
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 363,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "5580:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 366,
																	"indexExpression": {
																		"id": 364,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "5590:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5580:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 367,
																"indexExpression": {
																	"id": 365,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "5594:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5580:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 368,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "5602:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 369,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "5616:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5602:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5580:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 372,
														"nodeType": "ExpressionStatement",
														"src": "5580:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 374,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "5642:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 377,
															"indexExpression": {
																"id": 375,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "5652:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5642:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 378,
														"indexExpression": {
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5656:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5642:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 379,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "5663:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5642:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "5642:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 383,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5700:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5710:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5716:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5720:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 387,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5724:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 382,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "5685:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5685:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "5680:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5762:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5772:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5778:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5782:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 395,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5787:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 396,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5796:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 390,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "5742:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5742:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "5742:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5843:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5859:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5863:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 404,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5867:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5875:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 399,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "5812:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5812:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "5812:68:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "4496:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4949:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4984:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4976:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5006:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4998:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4998:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5026:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5018:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5046:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5038:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5075:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5062:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5062:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:119:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5103:0:0"
									},
									"scope": 1222,
									"src": "4940:947:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "6421:927:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 426,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6439:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6439:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 428,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "6453:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6453:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6439:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6469:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6431:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6431:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "6431:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 435,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "6530:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6544:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6536:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 436,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6536:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6536:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6530:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6548:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "6522:66:0"
											},
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6607:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "6599:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 444,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6599:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 446,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "6618:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6618:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6599:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6662:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "6672:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "6678:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6682:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 454,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "6687:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 455,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6696:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 449,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "6641:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6641:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "6641:60:0"
											},
											{
												"body": {
													"id": 515,
													"nodeType": "Block",
													"src": "6753:370:0",
													"statements": [
														{
															"assignments": [
																470
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 470,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6775:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6767:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6767:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 474,
															"initialValue": {
																"baseExpression": {
																	"id": 471,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6780:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 473,
																"indexExpression": {
																	"id": 472,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6784:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6780:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6767:19:0"
														},
														{
															"assignments": [
																476
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 476,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6808:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6800:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 475,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6800:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 480,
															"initialValue": {
																"baseExpression": {
																	"id": 477,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "6817:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 479,
																"indexExpression": {
																	"id": 478,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6825:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6817:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6800:27:0"
														},
														{
															"assignments": [
																482
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 482,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6850:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6842:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 481,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6842:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 488,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 483,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "6864:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 485,
																	"indexExpression": {
																		"id": 484,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "6874:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6864:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 487,
																"indexExpression": {
																	"id": 486,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "6878:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6864:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6842:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 490,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "6905:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 491,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "6920:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6905:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6928:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 489,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6897:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6897:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 495,
															"nodeType": "ExpressionStatement",
															"src": "6897:76:0"
														},
														{
															"id": 506,
															"nodeType": "UncheckedBlock",
															"src": "6987:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 496,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "7015:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 499,
																				"indexExpression": {
																					"id": 497,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 470,
																					"src": "7025:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7015:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 500,
																			"indexExpression": {
																				"id": 498,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "7029:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7015:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 501,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 482,
																				"src": "7037:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 502,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 476,
																				"src": "7051:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7037:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7015:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"nodeType": "ExpressionStatement",
																	"src": "7015:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 507,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "7085:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 510,
																		"indexExpression": {
																			"id": 508,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "7095:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7085:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 511,
																	"indexExpression": {
																		"id": 509,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "7099:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7085:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 512,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "7106:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7085:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "7085:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 462,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "6732:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6736:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6736:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6732:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 516,
												"initializationExpression": {
													"assignments": [
														459
													],
													"declarations": [
														{
															"constant": false,
															"id": 459,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6725:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 516,
															"src": "6717:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 458,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6717:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 461,
													"initialValue": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6729:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6717:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6748:3:0",
														"subExpression": {
															"id": 466,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "6750:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 468,
													"nodeType": "ExpressionStatement",
													"src": "6748:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6712:411:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 518,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7152:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7162:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7168:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7172:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 522,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 517,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "7138:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7138:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "EmitStatement",
												"src": "7133:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7216:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7226:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7232:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7236:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 530,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7241:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7250:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 525,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "7196:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7196:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "7196:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7302:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7312:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7318:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7322:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 539,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 540,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7336:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "7266:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7266:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "7266:75:0"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "5893:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6242:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6274:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6304:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6296:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6333:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6316:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 415,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 416,
													"nodeType": "ArrayTypeName",
													"src": "6316:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6346:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 418,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 419,
													"nodeType": "ArrayTypeName",
													"src": "6346:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6393:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6380:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6380:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:139:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6421:0:0"
									},
									"scope": 1222,
									"src": "6233:1115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "8227:30:0",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "8237:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 551,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "8244:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8237:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "8237:13:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "7354:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8180:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8202:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "8188:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8188:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8187:22:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8227:0:0"
									},
									"scope": 1222,
									"src": "8171:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "8759:580:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 568,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "8777:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8791:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8783:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 569,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8783:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8783:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8777:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8795:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8769:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8769:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "8769:62:0"
											},
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8850:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8842:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 577,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8842:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 579,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "8861:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8861:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8842:31:0"
											},
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8900:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8883:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 584,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8883:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 585,
															"nodeType": "ArrayTypeName",
															"src": "8883:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"arguments": [
														{
															"id": 588,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "8924:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "8906:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8906:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8883:44:0"
											},
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8954:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8937:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 593,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8937:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 594,
															"nodeType": "ArrayTypeName",
															"src": "8937:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"id": 597,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "8982:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "8964:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8937:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9021:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9039:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9031:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9031:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9031:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9043:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9047:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 608,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 609,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9061:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 600,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "9000:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "9000:66:0"
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 612,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "9077:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 615,
															"indexExpression": {
																"id": 613,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "9087:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9077:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 616,
														"indexExpression": {
															"id": 614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9091:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9077:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 617,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "9098:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9077:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "9077:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 621,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9134:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9152:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9144:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 622,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9144:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9144:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9156:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "9160:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 628,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "9164:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "9119:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9119:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "EmitStatement",
												"src": "9114:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9202:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9220:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9212:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 633,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9212:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9212:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9224:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9228:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 639,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9233:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 640,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9242:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 631,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "9182:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9182:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "9182:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9289:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9307:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9299:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9299:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9299:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9311:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "9315:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 651,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "9319:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 652,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9327:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 643,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "9258:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9258:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "9258:74:0"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "8263:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8639:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8662:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8654:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8682:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8674:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8731:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8718:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8718:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8644:97:0"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8759:0:0"
									},
									"scope": 1222,
									"src": "8630:709:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "9883:637:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 671,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "9901:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9915:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9907:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 672,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9907:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9907:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9901:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9919:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9893:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9893:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "9893:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 681,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "9973:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9973:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 683,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "9987:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9987:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9973:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10003:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9965:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9965:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9965:81:0"
											},
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10065:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "10057:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 689,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10057:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 691,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "10076:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10076:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10057:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 695,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10120:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10130:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10130:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10130:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10142:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10146:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 702,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10151:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 703,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10160:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 694,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "10099:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10099:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "10099:66:0"
											},
											{
												"body": {
													"id": 729,
													"nodeType": "Block",
													"src": "10217:60:0",
													"statements": [
														{
															"expression": {
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 717,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "10231:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 722,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 718,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "10241:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 720,
																			"indexExpression": {
																				"id": 719,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "10245:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10241:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10231:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 723,
																	"indexExpression": {
																		"id": 721,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "10249:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10231:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 724,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "10256:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"indexExpression": {
																		"id": 725,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "10264:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10256:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10231:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ExpressionStatement",
															"src": "10231:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "10196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 711,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10200:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10200:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10196:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 730,
												"initializationExpression": {
													"assignments": [
														707
													],
													"declarations": [
														{
															"constant": false,
															"id": 707,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10189:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 730,
															"src": "10181:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 706,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10181:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 709,
													"initialValue": {
														"hexValue": "30",
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10193:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10181:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10212:3:0",
														"subExpression": {
															"id": 714,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10212:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 716,
													"nodeType": "ExpressionStatement",
													"src": "10212:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10176:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 732,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10306:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10324:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10316:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 733,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10316:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10316:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10328:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10332:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 739,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10337:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 731,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "10292:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10292:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "EmitStatement",
												"src": "10287:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 743,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10376:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10394:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10386:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 744,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10386:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10386:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10398:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10402:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 750,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10407:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 751,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10416:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 742,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "10356:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10356:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "10356:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10468:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10486:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10478:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 756,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10478:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10478:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10490:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10494:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 762,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 763,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10508:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 754,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "10432:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10432:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10432:81:0"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "9345:379:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9738:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9766:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9758:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9795:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9778:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 660,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 661,
													"nodeType": "ArrayTypeName",
													"src": "9778:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9825:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9808:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 663,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9808:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 664,
													"nodeType": "ArrayTypeName",
													"src": "9808:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9842:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9842:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9748:117:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9883:0:0"
									},
									"scope": 1222,
									"src": "9729:791:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "10910:682:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "10928:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10944:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10936:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10936:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10936:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10928:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10948:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10920:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10920:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "10920:66:0"
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11005:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "10997:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 787,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10997:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 791,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 789,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "11016:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11016:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10997:31:0"
											},
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11055:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11038:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 794,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11038:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 795,
															"nodeType": "ArrayTypeName",
															"src": "11038:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"arguments": [
														{
															"id": 798,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11079:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 797,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "11061:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11061:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11038:44:0"
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11109:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11092:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 803,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11092:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"nodeType": "ArrayTypeName",
															"src": "11092:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11137:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "11119:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11119:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11092:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 811,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11176:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 812,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11200:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11192:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 813,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11192:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11192:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11204:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 818,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "11209:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11218:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 810,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "11155:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11155:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "11155:66:0"
											},
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11240:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11232:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11232:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 824,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "11254:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 826,
														"indexExpression": {
															"id": 825,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11264:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11254:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 828,
													"indexExpression": {
														"id": 827,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "11268:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11254:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11232:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 831,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "11291:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 832,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "11306:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11291:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11314:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11283:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "11283:70:0"
											},
											{
												"id": 847,
												"nodeType": "UncheckedBlock",
												"src": "11363:77:0",
												"statements": [
													{
														"expression": {
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 837,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "11387:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 840,
																	"indexExpression": {
																		"id": 838,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "11397:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11387:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 841,
																"indexExpression": {
																	"id": 839,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "11401:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11387:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 842,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "11409:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 843,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "11423:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11409:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11387:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 846,
														"nodeType": "ExpressionStatement",
														"src": "11387:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 849,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11470:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11494:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11486:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11486:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11486:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11498:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 856,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11502:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "11455:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11455:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "EmitStatement",
												"src": "11450:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11540:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11550:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11564:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11556:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 862,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11556:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11556:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11568:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 867,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "11573:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11582:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 859,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "11520:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11520:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "11520:65:0"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10526:275:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10815:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10838:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10830:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10860:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10852:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10880:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10872:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10820:72:0"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10910:0:0"
									},
									"scope": 1222,
									"src": "10806:786:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "11960:814:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 885,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "11978:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11994:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11986:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 886,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11986:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11986:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11978:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11998:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11970:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11970:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "11970:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 895,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "12054:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12054:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 897,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "12068:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12068:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12054:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12084:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12046:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12046:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "12046:81:0"
											},
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12146:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "12138:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 903,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12138:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 905,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "12157:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12157:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12138:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12201:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12211:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12225:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12217:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 911,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12217:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12217:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12229:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 916,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12234:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12243:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "12180:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12180:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "12180:66:0"
											},
											{
												"body": {
													"id": 969,
													"nodeType": "Block",
													"src": "12298:323:0",
													"statements": [
														{
															"assignments": [
																932
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 932,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12320:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12312:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 936,
															"initialValue": {
																"baseExpression": {
																	"id": 933,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "12325:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 935,
																"indexExpression": {
																	"id": 934,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "12329:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12325:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12312:19:0"
														},
														{
															"assignments": [
																938
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 938,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12353:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12345:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 937,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12345:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 942,
															"initialValue": {
																"baseExpression": {
																	"id": 939,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "12362:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 941,
																"indexExpression": {
																	"id": 940,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "12370:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12362:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12345:27:0"
														},
														{
															"assignments": [
																944
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 944,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12395:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12387:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 943,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 950,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 945,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "12409:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 947,
																	"indexExpression": {
																		"id": 946,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "12419:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12409:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 949,
																"indexExpression": {
																	"id": 948,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "12423:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12409:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12387:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 952,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 944,
																			"src": "12450:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 953,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 938,
																			"src": "12465:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12450:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12473:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 951,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12442:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12442:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 957,
															"nodeType": "ExpressionStatement",
															"src": "12442:70:0"
														},
														{
															"id": 968,
															"nodeType": "UncheckedBlock",
															"src": "12526:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 958,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "12554:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 961,
																				"indexExpression": {
																					"id": 959,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 932,
																					"src": "12564:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12554:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 962,
																			"indexExpression": {
																				"id": 960,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "12568:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12554:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 963,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "12576:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 964,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 938,
																				"src": "12590:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12576:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12554:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 967,
																	"nodeType": "ExpressionStatement",
																	"src": "12554:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 924,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "12277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 925,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12281:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12281:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12277:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"initializationExpression": {
													"assignments": [
														921
													],
													"declarations": [
														{
															"constant": false,
															"id": 921,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12270:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 970,
															"src": "12262:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 920,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12262:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 923,
													"initialValue": {
														"hexValue": "30",
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12274:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12262:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12293:3:0",
														"subExpression": {
															"id": 928,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "12293:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 930,
													"nodeType": "ExpressionStatement",
													"src": "12293:3:0"
												},
												"nodeType": "ForStatement",
												"src": "12257:364:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 972,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12650:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12660:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12674:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12666:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 974,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12666:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12666:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12678:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 979,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12683:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 971,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "12636:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12636:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "EmitStatement",
												"src": "12631:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12722:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12732:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12738:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12738:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12738:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12750:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 990,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12755:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12764:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 982,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "12702:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12702:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "12702:65:0"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "11598:228:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11840:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11868:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11860:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11899:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11882:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 876,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11882:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 877,
													"nodeType": "ArrayTypeName",
													"src": "11882:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11929:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11912:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 879,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 880,
													"nodeType": "ArrayTypeName",
													"src": "11912:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11850:92:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11960:0:0"
									},
									"scope": 1222,
									"src": "11831:943:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "13033:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1006,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "13051:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1007,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "13060:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13051:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13070:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1005,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13043:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13043:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "13043:71:0"
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1012,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "13124:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1015,
															"indexExpression": {
																"id": 1013,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "13143:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13124:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1016,
														"indexExpression": {
															"id": 1014,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "13150:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13124:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1017,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "13162:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13124:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "13124:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1021,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "13200:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "13207:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "13217:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1020,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "13185:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13185:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "EmitStatement",
												"src": "13180:46:0"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "12780:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12919:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12955:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12947:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12978:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12970:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13001:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12996:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12996:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12937:78:0"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13033:0:0"
									},
									"scope": 1222,
									"src": "12910:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "14381:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "13239:925:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14178:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14216:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14208:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14208:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14242:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14234:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14264:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14256:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14256:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14293:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14276:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1035,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14276:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1036,
													"nodeType": "ArrayTypeName",
													"src": "14276:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14323:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14306:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1038,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14306:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1039,
													"nodeType": "ArrayTypeName",
													"src": "14306:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14353:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14340:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1041,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14340:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14198:165:0"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14381:0:0"
									},
									"scope": 1222,
									"src": "14169:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "15527:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "14389:922:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15325:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15362:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15354:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15388:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15380:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15410:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15402:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15439:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15422:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1054,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1055,
													"nodeType": "ArrayTypeName",
													"src": "15422:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15469:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15452:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1057,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15452:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1058,
													"nodeType": "ArrayTypeName",
													"src": "15452:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15499:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15486:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15486:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15344:165:0"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15527:0:0"
									},
									"scope": 1222,
									"src": "15316:213:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "15728:532:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1080,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "15742:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1418,
														"src": "15742:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15742:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "15738:516:0",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "15759:495:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1107,
																		"nodeType": "Block",
																		"src": "15876:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1096,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1094,
																						"src": "15898:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1097,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1385,
																								"src": "15910:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1098,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1366,
																							"src": "15910:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1099,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15910:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15898:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1106,
																				"nodeType": "IfStatement",
																				"src": "15894:152:0",
																				"trueBody": {
																					"id": 1105,
																					"nodeType": "Block",
																					"src": "15955:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1102,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15984:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1101,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15977:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1103,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15977:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1104,
																							"nodeType": "ExpressionStatement",
																							"src": "15977:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1108,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1095,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1094,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15866:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1108,
																				"src": "15859:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1093,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15859:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15858:17:0"
																	},
																	"src": "15850:210:0"
																},
																{
																	"block": {
																		"id": 1116,
																		"nodeType": "Block",
																		"src": "16095:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1113,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1110,
																							"src": "16120:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1112,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16113:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16113:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1115,
																				"nodeType": "ExpressionStatement",
																				"src": "16113:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1117,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1111,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1110,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16087:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1117,
																				"src": "16073:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1109,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16073:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16072:22:0"
																	},
																	"src": "16061:81:0"
																},
																{
																	"block": {
																		"id": 1122,
																		"nodeType": "Block",
																		"src": "16149:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572",
																							"id": 1119,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16174:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1118,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16167:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16167:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1121,
																				"nodeType": "ExpressionStatement",
																				"src": "16167:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1123,
																	"nodeType": "TryCatchClause",
																	"src": "16143:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1087,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "15816:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1088,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "15826:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1089,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1073,
																		"src": "15832:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1090,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1075,
																		"src": "15836:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1091,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "15844:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1084,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1071,
																				"src": "15794:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1083,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "15777:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15777:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1385",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1366,
																	"src": "15777:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15777:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1124,
															"nodeType": "TryStatement",
															"src": "15773:471:0"
														}
													]
												}
											}
										]
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15544:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15592:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15584:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15618:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15610:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15640:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15632:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15660:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15652:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15680:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15672:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15709:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15696:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15696:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15574:145:0"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15728:0:0"
									},
									"scope": 1222,
									"src": "15535:725:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "16484:574:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1145,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "16498:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1418,
														"src": "16498:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16498:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "IfStatement",
												"src": "16494:558:0",
												"trueBody": {
													"id": 1190,
													"nodeType": "Block",
													"src": "16515:537:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1172,
																		"nodeType": "Block",
																		"src": "16669:189:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1161,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1159,
																						"src": "16691:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1162,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1385,
																								"src": "16703:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1163,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1384,
																							"src": "16703:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1164,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16703:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16691:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1171,
																				"nodeType": "IfStatement",
																				"src": "16687:157:0",
																				"trueBody": {
																					"id": 1170,
																					"nodeType": "Block",
																					"src": "16753:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1167,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16782:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1166,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16775:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1168,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16775:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1169,
																							"nodeType": "ExpressionStatement",
																							"src": "16775:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1173,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1160,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1159,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16646:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1173,
																				"src": "16639:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1158,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16639:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16621:47:0"
																	},
																	"src": "16613:245:0"
																},
																{
																	"block": {
																		"id": 1181,
																		"nodeType": "Block",
																		"src": "16893:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1178,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1175,
																							"src": "16918:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1177,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16911:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16911:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1180,
																				"nodeType": "ExpressionStatement",
																				"src": "16911:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1182,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1176,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1175,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16885:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1182,
																				"src": "16871:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1174,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16871:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16870:22:0"
																	},
																	"src": "16859:81:0"
																},
																{
																	"block": {
																		"id": 1187,
																		"nodeType": "Block",
																		"src": "16947:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572",
																							"id": 1184,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16972:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1183,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16965:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1185,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16965:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1186,
																				"nodeType": "ExpressionStatement",
																				"src": "16965:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1188,
																	"nodeType": "TryCatchClause",
																	"src": "16941:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1152,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "16577:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1153,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "16587:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1154,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "16593:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1155,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "16598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1156,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "16607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1149,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "16550:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1148,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "16533:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16533:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1385",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1384,
																	"src": "16533:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16533:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1189,
															"nodeType": "TryStatement",
															"src": "16529:513:0"
														}
													]
												}
											}
										]
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16275:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16328:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16320:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16354:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16346:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16376:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16368:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16405:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16388:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1135,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16388:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1136,
													"nodeType": "ArrayTypeName",
													"src": "16388:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16418:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1138,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16418:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1139,
													"nodeType": "ArrayTypeName",
													"src": "16418:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16465:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16452:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16452:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16310:165:0"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16484:0:0"
									},
									"scope": 1222,
									"src": "16266:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "17148:109:0",
										"statements": [
											{
												"assignments": [
													1205
												],
												"declarations": [
													{
														"constant": false,
														"id": 1205,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17175:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1220,
														"src": "17158:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1203,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17158:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1204,
															"nodeType": "ArrayTypeName",
															"src": "17158:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17197:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17183:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1206,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17187:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1207,
															"nodeType": "ArrayTypeName",
															"src": "17187:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17183:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17158:41:0"
											},
											{
												"expression": {
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1212,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "17209:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1214,
														"indexExpression": {
															"hexValue": "30",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17215:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17209:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1215,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "17220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17209:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "17209:18:0"
											},
											{
												"expression": {
													"id": 1218,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1205,
													"src": "17245:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1219,
												"nodeType": "Return",
												"src": "17238:12:0"
											}
										]
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "17073:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "17099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "17091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17090:17:0"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "17130:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1197,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17130:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1198,
													"nodeType": "ArrayTypeName",
													"src": "17130:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17129:18:0"
									},
									"scope": 1222,
									"src": "17064:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1223,
							"src": "570:16689:0",
							"usedErrors": []
						}
					],
					"src": "109:17151:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1344
						],
						"IERC165": [
							1788
						]
					},
					"id": 1345,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1345,
							"sourceUnit": 1789,
							"src": "135:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1227,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1788,
										"src": "372:7:1"
									},
									"id": 1228,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1226,
								"nodeType": "StructuredDocumentation",
								"src": "184:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1344,
							"linearizedBaseContracts": [
								1344,
								1788
							],
							"name": "IERC1155",
							"nameLocation": "360:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "386:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1241,
									"name": "TransferSingle",
									"nameLocation": "518:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "549:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "533:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "575:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "559:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "597:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "581:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "609:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "601:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "621:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "613:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:95:1"
									},
									"src": "512:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "634:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1256,
									"name": "TransferBatch",
									"nameLocation": "789:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "828:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "812:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "862:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "846:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "892:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "876:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "914:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "904:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1249,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "904:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1250,
													"nodeType": "ArrayTypeName",
													"src": "904:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "937:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "927:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1252,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "927:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1253,
													"nodeType": "ArrayTypeName",
													"src": "927:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:147:1"
									},
									"src": "783:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "956:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1265,
									"name": "ApprovalForAll",
									"nameLocation": "1114:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1145:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1129:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1154:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1185:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1180:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1180:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:66:1"
									},
									"src": "1108:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "1201:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1272,
									"name": "URI",
									"nameLocation": "1555:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1566:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1559:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1589:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1573:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:34:1"
									},
									"src": "1549:44:1"
								},
								{
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "1599:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1786:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1804:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1796:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1821:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1813:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:29:1"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1848:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:9:1"
									},
									"scope": 1344,
									"src": "1777:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "1863:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2065:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2099:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2080:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1284,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2080:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1285,
													"nodeType": "ArrayTypeName",
													"src": "2080:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2128:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2109:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1287,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2109:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1288,
													"nodeType": "ArrayTypeName",
													"src": "2109:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:53:1"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2180:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1291,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2180:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1292,
													"nodeType": "ArrayTypeName",
													"src": "2180:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:18:1"
									},
									"scope": 1344,
									"src": "2056:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "2204:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2466:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2484:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2507:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2502:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2502:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:33:1"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:0:1"
									},
									"scope": 1344,
									"src": "2457:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "2532:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2681:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2706:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2698:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2723:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2715:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:35:1"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2756:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2756:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:6:1"
									},
									"scope": 1344,
									"src": "2672:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "2768:556:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3338:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3372:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3364:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3394:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3386:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3414:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3406:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3434:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3426:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3465:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3450:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3450:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:121:1"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3484:0:1"
									},
									"scope": 1344,
									"src": "3329:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "3491:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3895:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3934:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3926:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3956:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3948:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3987:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3968:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1333,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3968:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1334,
													"nodeType": "ArrayTypeName",
													"src": "3968:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "4000:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1336,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4000:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1337,
													"nodeType": "ArrayTypeName",
													"src": "4000:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4051:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "4036:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4036:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3916:145:1"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4070:0:1"
									},
									"scope": 1344,
									"src": "3886:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1345,
							"src": "350:3723:1",
							"usedErrors": []
						}
					],
					"src": "110:3964:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							1788
						]
					},
					"id": 1386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1346,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1347,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1386,
							"sourceUnit": 1789,
							"src": "143:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1349,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1788,
										"src": "262:7:2"
									},
									"id": 1350,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1348,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1385,
							"linearizedBaseContracts": [
								1385,
								1788
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1234:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:2"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1278:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:2"
									},
									"scope": 1385,
									"src": "1107:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2332:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2358:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2380:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1372,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1373,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2412:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1375,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1376,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:2"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2491:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:2"
									},
									"scope": 1385,
									"src": "2291:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1386,
							"src": "232:2269:2",
							"usedErrors": []
						}
					],
					"src": "118:2384:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1400
						],
						"IERC165": [
							1788
						]
					},
					"id": 1401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1387,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1401,
							"sourceUnit": 1345,
							"src": "142:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1390,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1344,
										"src": "397:8:3"
									},
									"id": 1391,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1389,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:3",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1400,
							"linearizedBaseContracts": [
								1400,
								1344,
								1788
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:3",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "622:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "657:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:3"
									},
									"scope": 1400,
									"src": "609:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1401,
							"src": "364:310:3",
							"usedErrors": []
						}
					],
					"src": "117:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1730
						]
					},
					"id": 1731,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1402,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1403,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1730,
							"linearizedBaseContracts": [
								1730
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1416,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 1730,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1429,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1730",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1730",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1427,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1432,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													1438,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1438,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1437,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1445,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1439,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1441,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1447,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 1730,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "3555:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1463,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "3594:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1464,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "3602:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1462,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1510,
															1554
														],
														"referencedDeclaration": 1554,
														"src": "3572:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1468,
												"nodeType": "Return",
												"src": "3565:79:4"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 1730,
									"src": "3466:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1489,
										"nodeType": "Block",
										"src": "4020:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1483,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "4059:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "4067:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1486,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "4076:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1482,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1510,
															1554
														],
														"referencedDeclaration": 1554,
														"src": "4037:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1481,
												"id": 1488,
												"nodeType": "Return",
												"src": "4030:59:4"
											}
										]
									},
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3904:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3928:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3955:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1476,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:4"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "4006:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:4"
									},
									"scope": 1730,
									"src": "3873:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "4601:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1503,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "4640:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "4648:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1505,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "4654:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1502,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1510,
															1554
														],
														"referencedDeclaration": 1554,
														"src": "4618:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1501,
												"id": 1508,
												"nodeType": "Return",
												"src": "4611:94:4"
											}
										]
									},
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4498:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4522:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4549:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:4"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4587:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:4"
									},
									"scope": 1730,
									"src": "4458:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "5139:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1527,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1730",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1730",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1525,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1530,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "5182:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:4"
											},
											{
												"assignments": [
													1536,
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "5241:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1535,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "5255:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"arguments": [
														{
															"id": 1543,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "5308:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1539,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "5282:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1541,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "5301:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1547,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "5357:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1548,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "5365:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1549,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "5374:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1550,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "5386:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1546,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "5330:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1523,
												"id": 1552,
												"nodeType": "Return",
												"src": "5323:76:4"
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "5000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "5024:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "5051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "5074:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1518,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:4"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "5125:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:4"
									},
									"scope": 1730,
									"src": "4960:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "5683:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1565,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "5719:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1566,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "5727:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1564,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1571,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "5700:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1569,
												"nodeType": "Return",
												"src": "5693:80:4"
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5611:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1558,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:4"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5669:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:4"
									},
									"scope": 1730,
									"src": "5583:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "6122:168:4",
										"statements": [
											{
												"assignments": [
													1584,
													1586
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1599,
														"src": "6133:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1583,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1586,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1599,
														"src": "6147:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1585,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1591,
												"initialValue": {
													"arguments": [
														{
															"id": 1589,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "6192:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1587,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "6174:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1593,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "6241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1594,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "6249:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1595,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "6258:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1596,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "6270:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1592,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "6214:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1582,
												"id": 1598,
												"nodeType": "Return",
												"src": "6207:76:4"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "6001:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "6025:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1575,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "6052:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:4"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "6108:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:4"
									},
									"scope": 1730,
									"src": "5964:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "6566:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1611,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "6604:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1612,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "6612:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1610,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1617,
															1646
														],
														"referencedDeclaration": 1646,
														"src": "6583:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1615,
												"nodeType": "Return",
												"src": "6576:84:4"
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "6499:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "6515:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:4"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "6552:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:4"
									},
									"scope": 1730,
									"src": "6469:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "7008:170:4",
										"statements": [
											{
												"assignments": [
													1630,
													1632
												],
												"declarations": [
													{
														"constant": false,
														"id": 1630,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "7019:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1629,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1632,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "7033:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1631,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1637,
												"initialValue": {
													"arguments": [
														{
															"id": 1635,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "7080:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1633,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "7060:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1639,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "7129:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1640,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "7137:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1641,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "7146:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1642,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "7158:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1638,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "7102:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1628,
												"id": 1644,
												"nodeType": "Return",
												"src": "7095:76:4"
											}
										]
									},
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "6892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "6916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "6943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:4"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "6994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1626,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:4"
									},
									"scope": 1730,
									"src": "6853:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "7660:434:4",
										"statements": [
											{
												"condition": {
													"id": 1660,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1651,
													"src": "7674:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1682,
													"nodeType": "Block",
													"src": "8030:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1678,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "8052:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1679,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "8064:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1677,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "8044:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1681,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:4"
														}
													]
												},
												"id": 1683,
												"nodeType": "IfStatement",
												"src": "7670:418:4",
												"trueBody": {
													"id": 1676,
													"nodeType": "Block",
													"src": "7683:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1661,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "7701:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1673,
															"nodeType": "IfStatement",
															"src": "7697:286:4",
															"trueBody": {
																"id": 1672,
																"nodeType": "Block",
																"src": "7725:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1667,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1649,
																							"src": "7927:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1666,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1418,
																						"src": "7916:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1669,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1665,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1671,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1674,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "8003:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1659,
															"id": 1675,
															"nodeType": "Return",
															"src": "7996:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "7511:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "7535:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1650,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "7557:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1652,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "7590:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:4"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "7646:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1657,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:4"
									},
									"scope": 1730,
									"src": "7466:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "8475:135:4",
										"statements": [
											{
												"condition": {
													"id": 1697,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1688,
													"src": "8489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1706,
													"nodeType": "Block",
													"src": "8546:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1702,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "8568:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1703,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "8580:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1701,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "8560:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1705,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:4"
														}
													]
												},
												"id": 1707,
												"nodeType": "IfStatement",
												"src": "8485:119:4",
												"trueBody": {
													"id": 1700,
													"nodeType": "Block",
													"src": "8498:42:4",
													"statements": [
														{
															"expression": {
																"id": 1698,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "8519:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1696,
															"id": 1699,
															"nodeType": "Return",
															"src": "8512:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "8350:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "8372:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "8405:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:4"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "8461:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:4"
									},
									"scope": 1730,
									"src": "8315:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "8699:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1716,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "8775:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1726,
													"nodeType": "Block",
													"src": "9105:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1723,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "9126:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1722,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1725,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:4"
														}
													]
												},
												"id": 1727,
												"nodeType": "IfStatement",
												"src": "8771:379:4",
												"trueBody": {
													"id": 1721,
													"nodeType": "Block",
													"src": "8798:301:4",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1711,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 1711,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:4",
																	"valueSize": 1
																}
															],
															"id": 1720,
															"nodeType": "InlineAssembly",
															"src": "8947:142:4"
														}
													]
												}
											}
										]
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "8633:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1710,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "8658:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1712,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:4"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:4"
									},
									"scope": 1730,
									"src": "8616:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1731,
							"src": "194:8964:4",
							"usedErrors": []
						}
					],
					"src": "101:9058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1752
						]
					},
					"id": 1753,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1732,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1733,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1752,
							"linearizedBaseContracts": [
								1752
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1738,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1740,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1752,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1747,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1746,
												"id": 1749,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1752,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1753,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1776
						],
						"IERC165": [
							1788
						]
					},
					"id": 1777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1777,
							"sourceUnit": 1789,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1757,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1788,
										"src": "754:7:6"
									},
									"id": 1758,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1756,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1776,
							"linearizedBaseContracts": [
								1776,
								1788
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1787
									],
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1767,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1769,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1788,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1788_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1788_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1788",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1766,
												"id": 1773,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1763,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1760,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 1776,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1777,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1788
						]
					},
					"id": 1789,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1778,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1779,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1788,
							"linearizedBaseContracts": [
								1788
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1781,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1784,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 1788,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1789,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"contracts/WatchTrader.sol": {
				"ast": {
					"absolutePath": "contracts/WatchTrader.sol",
					"exportedSymbols": {
						"Address": [
							1730
						],
						"Context": [
							1752
						],
						"ERC1155": [
							1222
						],
						"ERC165": [
							1776
						],
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1400
						],
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							1788
						],
						"WatchTrader": [
							1950
						]
					},
					"id": 1951,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1790,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "61:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 1791,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1951,
							"sourceUnit": 1223,
							"src": "86:59:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1950,
							"linearizedBaseContracts": [
								1950
							],
							"name": "WatchTrader",
							"nameLocation": "156:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0007df30",
									"id": 1798,
									"mutability": "mutable",
									"name": "listings",
									"nameLocation": "305:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1950,
									"src": "250:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$1807_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct WatchTrader.Listing))"
									},
									"typeName": {
										"id": 1797,
										"keyType": {
											"id": 1792,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "258:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "250:47:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$1807_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct WatchTrader.Listing))"
										},
										"valueType": {
											"id": 1796,
											"keyType": {
												"id": 1793,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "277:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "269:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1807_storage_$",
												"typeString": "mapping(uint256 => struct WatchTrader.Listing)"
											},
											"valueType": {
												"id": 1795,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1794,
													"name": "Listing",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1807,
													"src": "288:7:8"
												},
												"referencedDeclaration": 1807,
												"src": "288:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Listing_$1807_storage_ptr",
													"typeString": "struct WatchTrader.Listing"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 1802,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "354:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1950,
									"src": "319:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1801,
										"keyType": {
											"id": 1799,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "327:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "319:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1800,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "338:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "WatchTrader.Listing",
									"id": 1807,
									"members": [
										{
											"constant": false,
											"id": 1804,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "438:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1807,
											"src": "430:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1803,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "430:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1806,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "461:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1807,
											"src": "453:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1805,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "453:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Listing",
									"nameLocation": "413:7:8",
									"nodeType": "StructDefinition",
									"scope": 1950,
									"src": "406:68:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "721:336:8",
										"statements": [
											{
												"assignments": [
													1818
												],
												"declarations": [
													{
														"constant": false,
														"id": 1818,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "739:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1860,
														"src": "731:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC1155_$1222",
															"typeString": "contract ERC1155"
														},
														"typeName": {
															"id": 1817,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1816,
																"name": "ERC1155",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1222,
																"src": "731:7:8"
															},
															"referencedDeclaration": 1222,
															"src": "731:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155_$1222",
																"typeString": "contract ERC1155"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1822,
												"initialValue": {
													"arguments": [
														{
															"id": 1820,
															"name": "itemContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "755:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1819,
														"name": "ERC1155",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "747:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1155_$1222_$",
															"typeString": "type(contract ERC1155)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "747:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC1155_$1222",
														"typeString": "contract ERC1155"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "731:44:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1826,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "809:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "809:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1828,
																		"name": "itemID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "821:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1824,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1818,
																		"src": "793:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC1155_$1222",
																			"typeString": "contract ERC1155"
																		}
																	},
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 115,
																	"src": "793:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view external returns (uint256)"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "793:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "831:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "793:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206f776e20746f6b656e20746f2062652061626c6520746f206c6973742069742e",
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "834:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1",
																"typeString": "literal_string \"Must own token to be able to list it.\""
															},
															"value": "Must own token to be able to list it."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94353bd24390e761592045a280c1f1a1445267b7bc30878d7310e96e529eedf1",
																"typeString": "literal_string \"Must own token to be able to list it.\""
															}
														],
														"id": 1823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "785:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:89:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1834,
												"nodeType": "ExpressionStatement",
												"src": "785:89:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1838,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "915:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "915:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1842,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "935:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_WatchTrader_$1950",
																				"typeString": "contract WatchTrader"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_WatchTrader_$1950",
																				"typeString": "contract WatchTrader"
																			}
																		],
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "927:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1840,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "927:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "927:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1836,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "892:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC1155_$1222",
																		"typeString": "contract ERC1155"
																	}
																},
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isApprovedForAll",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 214,
																"src": "892:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view external returns (bool)"
																}
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "892:49:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206d75737420626520617070726f7665642e",
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "943:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee",
																"typeString": "literal_string \"Contract must be approved.\""
															},
															"value": "Contract must be approved."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c2c1df4cf56638938b105cb22cf6c2e24f93a73de7c7053ae3ee4ed7d8896ee",
																"typeString": "literal_string \"Contract must be approved.\""
															}
														],
														"id": 1835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "884:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "884:88:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1847,
												"nodeType": "ExpressionStatement",
												"src": "884:88:8"
											},
											{
												"expression": {
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1848,
																"name": "listings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1798,
																"src": "983:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$1807_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct WatchTrader.Listing storage ref))"
																}
															},
															"id": 1851,
															"indexExpression": {
																"id": 1849,
																"name": "itemContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1811,
																"src": "992:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "983:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1807_storage_$",
																"typeString": "mapping(uint256 => struct WatchTrader.Listing storage ref)"
															}
														},
														"id": 1852,
														"indexExpression": {
															"id": 1850,
															"name": "itemID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "1013:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "983:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1807_storage",
															"typeString": "struct WatchTrader.Listing storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1854,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "1031:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1855,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1038:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1038:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1853,
															"name": "Listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "1023:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Listing_$1807_storage_ptr_$",
																"typeString": "type(struct WatchTrader.Listing storage pointer)"
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1023:26:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1807_memory_ptr",
															"typeString": "struct WatchTrader.Listing memory"
														}
													},
													"src": "983:66:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$1807_storage",
														"typeString": "struct WatchTrader.Listing storage ref"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "983:66:8"
											}
										]
									},
									"functionSelector": "80abbe57",
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addListing",
									"nameLocation": "644:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "663:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "655:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "itemContractAddress",
												"nameLocation": "678:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "670:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "itemID",
												"nameLocation": "707:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "699:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:60:8"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "721:0:8"
									},
									"scope": 1950,
									"src": "635:422:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "1362:350:8",
										"statements": [
											{
												"assignments": [
													1872
												],
												"declarations": [
													{
														"constant": false,
														"id": 1872,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "1380:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1917,
														"src": "1372:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC1155_$1222",
															"typeString": "contract ERC1155"
														},
														"typeName": {
															"id": 1871,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1870,
																"name": "ERC1155",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1222,
																"src": "1372:7:8"
															},
															"referencedDeclaration": 1222,
															"src": "1372:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155_$1222",
																"typeString": "contract ERC1155"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1876,
												"initialValue": {
													"arguments": [
														{
															"id": 1874,
															"name": "itemContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "1396:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1873,
														"name": "ERC1155",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "1388:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1155_$1222_$",
															"typeString": "type(contract ERC1155)"
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC1155_$1222",
														"typeString": "contract ERC1155"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1372:44:8"
											},
											{
												"assignments": [
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "1441:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1917,
														"src": "1426:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1807_memory_ptr",
															"typeString": "struct WatchTrader.Listing"
														},
														"typeName": {
															"id": 1878,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1877,
																"name": "Listing",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1807,
																"src": "1426:7:8"
															},
															"referencedDeclaration": 1807,
															"src": "1426:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1807_storage_ptr",
																"typeString": "struct WatchTrader.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1885,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1880,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "1448:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$1807_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct WatchTrader.Listing storage ref))"
															}
														},
														"id": 1882,
														"indexExpression": {
															"id": 1881,
															"name": "itemContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "1457:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1448:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1807_storage_$",
															"typeString": "mapping(uint256 => struct WatchTrader.Listing storage ref)"
														}
													},
													"id": 1884,
													"indexExpression": {
														"id": 1883,
														"name": "itemID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "1478:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1448:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$1807_storage",
														"typeString": "struct WatchTrader.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1426:59:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1887,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1504:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1504:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1889,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "1517:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$1807_memory_ptr",
																			"typeString": "struct WatchTrader.Listing memory"
																		}
																	},
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1804,
																	"src": "1517:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1891,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "1530:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1517:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1504:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420616d6f756e742073656e7420746f2073656c6c65722e",
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1538:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e",
																"typeString": "literal_string \"Insufficient amount sent to seller.\""
															},
															"value": "Insufficient amount sent to seller."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c2fdac516e6002254db28c5f31142cc0f950ddc8f513b19de21fa7503515c2e",
																"typeString": "literal_string \"Insufficient amount sent to seller.\""
															}
														],
														"id": 1886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1496:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "1496:80:8"
											},
											{
												"expression": {
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1897,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "1586:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1900,
														"indexExpression": {
															"expression": {
																"id": 1898,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1879,
																"src": "1595:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$1807_memory_ptr",
																	"typeString": "struct WatchTrader.Listing memory"
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1806,
															"src": "1595:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1586:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1901,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1611:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1611:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1586:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "1586:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1908,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1879,
																"src": "1653:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$1807_memory_ptr",
																	"typeString": "struct WatchTrader.Listing memory"
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1806,
															"src": "1653:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1910,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1666:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1666:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1912,
															"name": "itemID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "1678:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1913,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "1686:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5472616e73666572",
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1694:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",
																"typeString": "literal_string \"Transfer\""
															},
															"value": "Transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_f099cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",
																"typeString": "literal_string \"Transfer\""
															}
														],
														"expression": {
															"id": 1905,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "1630:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155_$1222",
																"typeString": "contract ERC1155"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 252,
														"src": "1630:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1630:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "1630:75:8"
											}
										]
									},
									"functionSelector": "98968f15",
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchase",
									"nameLocation": "1277:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "itemContractAddress",
												"nameLocation": "1294:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1286:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "itemID",
												"nameLocation": "1323:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1315:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1339:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1331:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1331:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:61:8"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1362:0:8"
									},
									"scope": 1950,
									"src": "1268:444:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "1968:155:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1926,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1920,
																"src": "1986:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1927,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1802,
																	"src": "1996:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1930,
																"indexExpression": {
																	"expression": {
																		"id": 1928,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2005:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2005:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1996:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1986:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e64732e",
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2018:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
																"typeString": "literal_string \"Insufficient funds.\""
															},
															"value": "Insufficient funds."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
																"typeString": "literal_string \"Insufficient funds.\""
															}
														],
														"id": 1925,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1978:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1978:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "1978:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1938,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "2069:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1935,
															"name": "destAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "2051:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2051:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2051:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "2051:25:8"
											},
											{
												"expression": {
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1941,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "2086:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1944,
														"indexExpression": {
															"expression": {
																"id": 1942,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2095:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2095:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2086:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1945,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1920,
														"src": "2110:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "2086:30:8"
											}
										]
									},
									"functionSelector": "00f714ce",
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1912:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1929:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1921:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "destAddr",
												"nameLocation": "1953:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1937:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1937:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:42:8"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:0:8"
									},
									"scope": 1950,
									"src": "1903:220:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1951,
							"src": "147:1978:8",
							"usedErrors": []
						}
					],
					"src": "61:2064:8"
				},
				"id": 8
			}
		}
	}
}